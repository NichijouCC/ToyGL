{"version":3,"file":"dome.js","sources":["../node_modules/twebgl/src/GLConstant.ts","../node_modules/twebgl/src/Helper.ts","../node_modules/twebgl/src/vertexIndex.ts","../node_modules/twebgl/src/vertexAttribute.ts","../node_modules/twebgl/src/geometryInfo.ts","../node_modules/twebgl/src/state.ts","../node_modules/twebgl/src/programInfo.ts","../node_modules/twebgl/src/glconstant.ts","../node_modules/twebgl/src/texture.ts","../node_modules/twebgl/src/Twebgl.ts","../src/render/glRender.ts","../src/ec/ec.ts","../src/mathD/common.ts","../src/mathD/vec3.ts","../src/mathD/mat4.ts","../src/render/renderList.ts","../src/mathD/rect.ts","../src/mathD/color.ts","../src/gameScreen.ts","../src/ec/components/camera.ts","../src/render/renderContext.ts","../src/render/autoUniform.ts","../src/render/renderMachine.ts","../src/mathD/Mat3.ts","../src/mathD/quat.ts","../src/input/mouse.ts","../src/input/keyboard.ts","../src/input/Inputmgr.ts","../src/ec/components/cameracontroller.ts","../src/ec/entity.ts","../src/ec/components/transform.ts","../src/scene/frameState.ts","../src/scene/scene.ts","../src/ec/components/mesh.ts","../src/toygl.ts","../src/resources/base/loadEnum.ts","../src/resources/base/helper.ts","../src/resources/resource.ts","../examples/loadGltf.ts","../examples/main.ts","../src/resources/base/toyAsset.ts","../src/resources/assets/textAsset.ts","../src/io/loadtool.ts","../src/resources/loader/loadTxt.ts","../src/resources/assets/shader.ts","../src/mathD/vec2.ts","../src/mathD/vec4.ts","../src/resources/loader/loadShader.ts","../src/resources/assets/texture.ts","../src/resources/loader/loadTexture.ts","../src/resources/assets/gltfAsset.ts","../src/io/stream.ts","../src/resources/glTF/gltfJsonStruct.ts","../src/resources/glTF/parseCameraNode.ts","../src/resources/assets/material.ts","../src/resources/glTF/parseBufferNode.ts","../src/resources/glTF/parseBufferViewNode.ts","../src/resources/glTF/parseTextureNode.ts","../src/resources/defShader.ts","../src/resources/glTF/parseMaterialNode.ts","../src/resources/assets/geometry.ts","../src/resources/glTF/parseAccessorNode.ts","../src/resources/glTF/parseMeshNode.ts","../src/resources/glTF/parseNode.ts","../src/resources/glTF/parseSceneNode.ts","../src/resources/glTF/loadglTF.ts"],"sourcesContent":["/**\r\n * Enum containing WebGL Constant values by name.\r\n * for use without an active WebGL context, or in cases where certain constants are unavailable using the WebGL context\r\n * (For example, in [Safari 9]{@link https://github.com/AnalyticalGraphicsInc/cesium/issues/2989}).\r\n *\r\n * These match the constants from the [WebGL 1.0]{@link https://www.khronos.org/registry/webgl/specs/latest/1.0/}\r\n * and [WebGL 2.0]{@link https://www.khronos.org/registry/webgl/specs/latest/2.0/}\r\n * specifications.\r\n */\r\nexport enum GlConstants {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000,\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006,\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA = 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    FUNC_ADD = 0x8006,\r\n    BLEND_EQUATION = 0x8009,\r\n    BLEND_EQUATION_RGB = 0x8009, // same as BLEND_EQUATION\r\n    BLEND_EQUATION_ALPHA = 0x883d,\r\n    FUNC_SUBTRACT = 0x800a,\r\n    FUNC_REVERSE_SUBTRACT = 0x800b,\r\n    BLEND_DST_RGB = 0x80c8,\r\n    BLEND_SRC_RGB = 0x80c9,\r\n    BLEND_DST_ALPHA = 0x80ca,\r\n    BLEND_SRC_ALPHA = 0x80cb,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004,\r\n    BLEND_COLOR = 0x8005,\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    ARRAY_BUFFER_BINDING = 0x8894,\r\n    ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\r\n    STREAM_DRAW = 0x88e0,\r\n    STATIC_DRAW = 0x88e4,\r\n    DYNAMIC_DRAW = 0x88e8,\r\n    BUFFER_SIZE = 0x8764,\r\n    BUFFER_USAGE = 0x8765,\r\n    CURRENT_VERTEX_ATTRIB = 0x8626,\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408,\r\n    CULL_FACE = 0x0b44,\r\n    BLEND = 0x0be2,\r\n    DITHER = 0x0bd0,\r\n    STENCIL_TEST = 0x0b90,\r\n    DEPTH_TEST = 0x0b71,\r\n    SCISSOR_TEST = 0x0c11,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809e,\r\n    SAMPLE_COVERAGE = 0x80a0,\r\n    NO_ERROR = 0,\r\n    INVALID_ENUM = 0x0500,\r\n    INVALID_VALUE = 0x0501,\r\n    INVALID_OPERATION = 0x0502,\r\n    OUT_OF_MEMORY = 0x0505,\r\n    CW = 0x0900,\r\n    CCW = 0x0901,\r\n    LINE_WIDTH = 0x0b21,\r\n    ALIASED_POINT_SIZE_RANGE = 0x846d,\r\n    ALIASED_LINE_WIDTH_RANGE = 0x846e,\r\n    CULL_FACE_MODE = 0x0b45,\r\n    FRONT_FACE = 0x0b46,\r\n    DEPTH_RANGE = 0x0b70,\r\n    DEPTH_WRITEMASK = 0x0b72,\r\n    DEPTH_CLEAR_VALUE = 0x0b73,\r\n    DEPTH_FUNC = 0x0b74,\r\n    STENCIL_CLEAR_VALUE = 0x0b91,\r\n    STENCIL_FUNC = 0x0b92,\r\n    STENCIL_FAIL = 0x0b94,\r\n    STENCIL_PASS_DEPTH_FAIL = 0x0b95,\r\n    STENCIL_PASS_DEPTH_PASS = 0x0b96,\r\n    STENCIL_REF = 0x0b97,\r\n    STENCIL_VALUE_MASK = 0x0b93,\r\n    STENCIL_WRITEMASK = 0x0b98,\r\n    STENCIL_BACK_FUNC = 0x8800,\r\n    STENCIL_BACK_FAIL = 0x8801,\r\n    STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\r\n    STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\r\n    STENCIL_BACK_REF = 0x8ca3,\r\n    STENCIL_BACK_VALUE_MASK = 0x8ca4,\r\n    STENCIL_BACK_WRITEMASK = 0x8ca5,\r\n    VIEWPORT = 0x0ba2,\r\n    SCISSOR_BOX = 0x0c10,\r\n    COLOR_CLEAR_VALUE = 0x0c22,\r\n    COLOR_WRITEMASK = 0x0c23,\r\n    UNPACK_ALIGNMENT = 0x0cf5,\r\n    PACK_ALIGNMENT = 0x0d05,\r\n    MAX_TEXTURE_SIZE = 0x0d33,\r\n    MAX_VIEWPORT_DIMS = 0x0d3a,\r\n    SUBPIXEL_BITS = 0x0d50,\r\n    RED_BITS = 0x0d52,\r\n    GREEN_BITS = 0x0d53,\r\n    BLUE_BITS = 0x0d54,\r\n    ALPHA_BITS = 0x0d55,\r\n    DEPTH_BITS = 0x0d56,\r\n    STENCIL_BITS = 0x0d57,\r\n    POLYGON_OFFSET_UNITS = 0x2a00,\r\n    POLYGON_OFFSET_FACTOR = 0x8038,\r\n    TEXTURE_BINDING_2D = 0x8069,\r\n    SAMPLE_BUFFERS = 0x80a8,\r\n    SAMPLES = 0x80a9,\r\n    SAMPLE_COVERAGE_VALUE = 0x80aa,\r\n    SAMPLE_COVERAGE_INVERT = 0x80ab,\r\n    COMPRESSED_TEXTURE_FORMATS = 0x86a3,\r\n    DONT_CARE = 0x1100,\r\n    FASTEST = 0x1101,\r\n    NICEST = 0x1102,\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190a,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    FRAGMENT_SHADER = 0x8b30,\r\n    VERTEX_SHADER = 0x8b31,\r\n    MAX_VERTEX_ATTRIBS = 0x8869,\r\n    MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb,\r\n    MAX_VARYING_VECTORS = 0x8dfc,\r\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d,\r\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c,\r\n    MAX_TEXTURE_IMAGE_UNITS = 0x8872,\r\n    MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd,\r\n    SHADER_TYPE = 0x8b4f,\r\n    DELETE_STATUS = 0x8b80,\r\n    LINK_STATUS = 0x8b82,\r\n    VALIDATE_STATUS = 0x8b83,\r\n    ATTACHED_SHADERS = 0x8b85,\r\n    ACTIVE_UNIFORMS = 0x8b86,\r\n    ACTIVE_ATTRIBUTES = 0x8b89,\r\n    SHADING_LANGUAGE_VERSION = 0x8b8c,\r\n    CURRENT_PROGRAM = 0x8b8d,\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n    KEEP = 0x1e00,\r\n    REPLACE = 0x1e01,\r\n    INCR = 0x1e02,\r\n    DECR = 0x1e03,\r\n    INVERT = 0x150a,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508,\r\n    VENDOR = 0x1f00,\r\n    RENDERER = 0x1f01,\r\n    VERSION = 0x1f02,\r\n    NEAREST = 0x2600,\r\n    LINEAR = 0x2601,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700,\r\n    LINEAR_MIPMAP_NEAREST = 0x2701,\r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703,\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_2D = 0x0de1,\r\n    TEXTURE = 0x1702,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_BINDING_CUBE_MAP = 0x8514,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a,\r\n    MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c,\r\n    TEXTURE0 = 0x84c0,\r\n    TEXTURE1 = 0x84c1,\r\n    TEXTURE2 = 0x84c2,\r\n    TEXTURE3 = 0x84c3,\r\n    TEXTURE4 = 0x84c4,\r\n    TEXTURE5 = 0x84c5,\r\n    TEXTURE6 = 0x84c6,\r\n    TEXTURE7 = 0x84c7,\r\n    TEXTURE8 = 0x84c8,\r\n    TEXTURE9 = 0x84c9,\r\n    TEXTURE10 = 0x84ca,\r\n    TEXTURE11 = 0x84cb,\r\n    TEXTURE12 = 0x84cc,\r\n    TEXTURE13 = 0x84cd,\r\n    TEXTURE14 = 0x84ce,\r\n    TEXTURE15 = 0x84cf,\r\n    TEXTURE16 = 0x84d0,\r\n    TEXTURE17 = 0x84d1,\r\n    TEXTURE18 = 0x84d2,\r\n    TEXTURE19 = 0x84d3,\r\n    TEXTURE20 = 0x84d4,\r\n    TEXTURE21 = 0x84d5,\r\n    TEXTURE22 = 0x84d6,\r\n    TEXTURE23 = 0x84d7,\r\n    TEXTURE24 = 0x84d8,\r\n    TEXTURE25 = 0x84d9,\r\n    TEXTURE26 = 0x84da,\r\n    TEXTURE27 = 0x84db,\r\n    TEXTURE28 = 0x84dc,\r\n    TEXTURE29 = 0x84dd,\r\n    TEXTURE30 = 0x84de,\r\n    TEXTURE31 = 0x84df,\r\n    ACTIVE_TEXTURE = 0x84e0,\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812f,\r\n    MIRRORED_REPEAT = 0x8370,\r\n    FLOAT_VEC2 = 0x8b50,\r\n    FLOAT_VEC3 = 0x8b51,\r\n    FLOAT_VEC4 = 0x8b52,\r\n    INT_VEC2 = 0x8b53,\r\n    INT_VEC3 = 0x8b54,\r\n    INT_VEC4 = 0x8b55,\r\n    BOOL = 0x8b56,\r\n    BOOL_VEC2 = 0x8b57,\r\n    BOOL_VEC3 = 0x8b58,\r\n    BOOL_VEC4 = 0x8b59,\r\n    FLOAT_MAT2 = 0x8b5a,\r\n    FLOAT_MAT3 = 0x8b5b,\r\n    FLOAT_MAT4 = 0x8b5c,\r\n    SAMPLER_2D = 0x8b5e,\r\n    SAMPLER_CUBE = 0x8b60,\r\n    VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\r\n    VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\r\n    VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\r\n    VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\r\n    VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a,\r\n    VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\r\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f,\r\n    IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a,\r\n    IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b,\r\n    COMPILE_STATUS = 0x8b81,\r\n    LOW_FLOAT = 0x8df0,\r\n    MEDIUM_FLOAT = 0x8df1,\r\n    HIGH_FLOAT = 0x8df2,\r\n    LOW_INT = 0x8df3,\r\n    MEDIUM_INT = 0x8df4,\r\n    HIGH_INT = 0x8df5,\r\n    FRAMEBUFFER = 0x8d40,\r\n    RENDERBUFFER = 0x8d41,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGB565 = 0x8d62,\r\n    DEPTH_COMPONENT16 = 0x81a5,\r\n    STENCIL_INDEX = 0x1901,\r\n    STENCIL_INDEX8 = 0x8d48,\r\n    DEPTH_STENCIL = 0x84f9,\r\n    RENDERBUFFER_WIDTH = 0x8d42,\r\n    RENDERBUFFER_HEIGHT = 0x8d43,\r\n    RENDERBUFFER_INTERNAL_FORMAT = 0x8d44,\r\n    RENDERBUFFER_RED_SIZE = 0x8d50,\r\n    RENDERBUFFER_GREEN_SIZE = 0x8d51,\r\n    RENDERBUFFER_BLUE_SIZE = 0x8d52,\r\n    RENDERBUFFER_ALPHA_SIZE = 0x8d53,\r\n    RENDERBUFFER_DEPTH_SIZE = 0x8d54,\r\n    RENDERBUFFER_STENCIL_SIZE = 0x8d55,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3,\r\n    COLOR_ATTACHMENT0 = 0x8ce0,\r\n    DEPTH_ATTACHMENT = 0x8d00,\r\n    STENCIL_ATTACHMENT = 0x8d20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821a,\r\n    NONE = 0,\r\n    FRAMEBUFFER_COMPLETE = 0x8cd5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8cdd,\r\n    FRAMEBUFFER_BINDING = 0x8ca6,\r\n    RENDERBUFFER_BINDING = 0x8ca7,\r\n    MAX_RENDERBUFFER_SIZE = 0x84e8,\r\n    INVALID_FRAMEBUFFER_OPERATION = 0x0506,\r\n    UNPACK_FLIP_Y_WEBGL = 0x9240,\r\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\r\n    CONTEXT_LOST_WEBGL = 0x9242,\r\n    UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\r\n    BROWSER_DEFAULT_WEBGL = 0x9244,\r\n\r\n    // WEBGL_compressed_texture_s3tc\r\n    COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0,\r\n    COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1,\r\n    COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2,\r\n    COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3,\r\n\r\n    // WEBGL_compressed_texture_pvrtc\r\n    COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00,\r\n    COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01,\r\n    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\r\n    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\r\n\r\n    // WEBGL_compressed_texture_etc1\r\n    COMPRESSED_RGB_ETC1_WEBGL = 0x8d64,\r\n\r\n    // Desktop OpenGL\r\n    DOUBLE = 0x140a,\r\n\r\n    // WebGL 2\r\n    READ_BUFFER = 0x0c02,\r\n    UNPACK_ROW_LENGTH = 0x0cf2,\r\n    UNPACK_SKIP_ROWS = 0x0cf3,\r\n    UNPACK_SKIP_PIXELS = 0x0cf4,\r\n    PACK_ROW_LENGTH = 0x0d02,\r\n    PACK_SKIP_ROWS = 0x0d03,\r\n    PACK_SKIP_PIXELS = 0x0d04,\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    RED = 0x1903,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    RGB10_A2 = 0x8059,\r\n    TEXTURE_BINDING_3D = 0x806a,\r\n    UNPACK_SKIP_IMAGES = 0x806d,\r\n    UNPACK_IMAGE_HEIGHT = 0x806e,\r\n    TEXTURE_3D = 0x806f,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    MAX_3D_TEXTURE_SIZE = 0x8073,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    MAX_ELEMENTS_VERTICES = 0x80e8,\r\n    MAX_ELEMENTS_INDICES = 0x80e9,\r\n    TEXTURE_MIN_LOD = 0x813a,\r\n    TEXTURE_MAX_LOD = 0x813b,\r\n    TEXTURE_BASE_LEVEL = 0x813c,\r\n    TEXTURE_MAX_LEVEL = 0x813d,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n    DEPTH_COMPONENT24 = 0x81a6,\r\n    MAX_TEXTURE_LOD_BIAS = 0x84fd,\r\n    TEXTURE_COMPARE_MODE = 0x884c,\r\n    TEXTURE_COMPARE_FUNC = 0x884d,\r\n    CURRENT_QUERY = 0x8865,\r\n    QUERY_RESULT = 0x8866,\r\n    QUERY_RESULT_AVAILABLE = 0x8867,\r\n    STREAM_READ = 0x88e1,\r\n    STREAM_COPY = 0x88e2,\r\n    STATIC_READ = 0x88e5,\r\n    STATIC_COPY = 0x88e6,\r\n    DYNAMIC_READ = 0x88e9,\r\n    DYNAMIC_COPY = 0x88ea,\r\n    MAX_DRAW_BUFFERS = 0x8824,\r\n    DRAW_BUFFER0 = 0x8825,\r\n    DRAW_BUFFER1 = 0x8826,\r\n    DRAW_BUFFER2 = 0x8827,\r\n    DRAW_BUFFER3 = 0x8828,\r\n    DRAW_BUFFER4 = 0x8829,\r\n    DRAW_BUFFER5 = 0x882a,\r\n    DRAW_BUFFER6 = 0x882b,\r\n    DRAW_BUFFER7 = 0x882c,\r\n    DRAW_BUFFER8 = 0x882d,\r\n    DRAW_BUFFER9 = 0x882e,\r\n    DRAW_BUFFER10 = 0x882f,\r\n    DRAW_BUFFER11 = 0x8830,\r\n    DRAW_BUFFER12 = 0x8831,\r\n    DRAW_BUFFER13 = 0x8832,\r\n    DRAW_BUFFER14 = 0x8833,\r\n    DRAW_BUFFER15 = 0x8834,\r\n    MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49,\r\n    MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a,\r\n    SAMPLER_3D = 0x8b5f,\r\n    SAMPLER_2D_SHADOW = 0x8b62,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b,\r\n    PIXEL_PACK_BUFFER = 0x88eb,\r\n    PIXEL_UNPACK_BUFFER = 0x88ec,\r\n    PIXEL_PACK_BUFFER_BINDING = 0x88ed,\r\n    PIXEL_UNPACK_BUFFER_BINDING = 0x88ef,\r\n    FLOAT_MAT2X3 = 0x8b65,\r\n    FLOAT_MAT2X4 = 0x8b66,\r\n    FLOAT_MAT3X2 = 0x8b67,\r\n    FLOAT_MAT3X4 = 0x8b68,\r\n    FLOAT_MAT4X2 = 0x8b69,\r\n    FLOAT_MAT4X3 = 0x8b6a,\r\n    SRGB = 0x8c40,\r\n    SRGB8 = 0x8c41,\r\n    SRGB8_ALPHA8 = 0x8c43,\r\n    COMPARE_REF_TO_TEXTURE = 0x884e,\r\n    RGBA32F = 0x8814,\r\n    RGB32F = 0x8815,\r\n    RGBA16F = 0x881a,\r\n    RGB16F = 0x881b,\r\n    VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd,\r\n    MAX_ARRAY_TEXTURE_LAYERS = 0x88ff,\r\n    MIN_PROGRAM_TEXEL_OFFSET = 0x8904,\r\n    MAX_PROGRAM_TEXEL_OFFSET = 0x8905,\r\n    MAX_VARYING_COMPONENTS = 0x8b4b,\r\n    TEXTURE_2D_ARRAY = 0x8c1a,\r\n    TEXTURE_BINDING_2D_ARRAY = 0x8c1d,\r\n    R11F_G11F_B10F = 0x8c3a,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b,\r\n    RGB9_E5 = 0x8c3d,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8c3e,\r\n    TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80,\r\n    TRANSFORM_FEEDBACK_VARYINGS = 0x8c83,\r\n    TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84,\r\n    TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85,\r\n    TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88,\r\n    RASTERIZER_DISCARD = 0x8c89,\r\n    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b,\r\n    INTERLEAVED_ATTRIBS = 0x8c8c,\r\n    SEPARATE_ATTRIBS = 0x8c8d,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8c8e,\r\n    TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f,\r\n    RGBA32UI = 0x8d70,\r\n    RGB32UI = 0x8d71,\r\n    RGBA16UI = 0x8d76,\r\n    RGB16UI = 0x8d77,\r\n    RGBA8UI = 0x8d7c,\r\n    RGB8UI = 0x8d7d,\r\n    RGBA32I = 0x8d82,\r\n    RGB32I = 0x8d83,\r\n    RGBA16I = 0x8d88,\r\n    RGB16I = 0x8d89,\r\n    RGBA8I = 0x8d8e,\r\n    RGB8I = 0x8d8f,\r\n    RED_INTEGER = 0x8d94,\r\n    RGB_INTEGER = 0x8d98,\r\n    RGBA_INTEGER = 0x8d99,\r\n    SAMPLER_2D_ARRAY = 0x8dc1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8dc4,\r\n    SAMPLER_CUBE_SHADOW = 0x8dc5,\r\n    UNSIGNED_INT_VEC2 = 0x8dc6,\r\n    UNSIGNED_INT_VEC3 = 0x8dc7,\r\n    UNSIGNED_INT_VEC4 = 0x8dc8,\r\n    INT_SAMPLER_2D = 0x8dca,\r\n    INT_SAMPLER_3D = 0x8dcb,\r\n    INT_SAMPLER_CUBE = 0x8dcc,\r\n    INT_SAMPLER_2D_ARRAY = 0x8dcf,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8dd2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8dd3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7,\r\n    DEPTH_COMPONENT32F = 0x8cac,\r\n    DEPTH32F_STENCIL8 = 0x8cad,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad,\r\n    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\r\n    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\r\n    FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\r\n    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\r\n    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\r\n    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\r\n    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\r\n    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\r\n    FRAMEBUFFER_DEFAULT = 0x8218,\r\n    UNSIGNED_INT_24_8 = 0x84fa,\r\n    DEPTH24_STENCIL8 = 0x88f0,\r\n    UNSIGNED_NORMALIZED = 0x8c17,\r\n    DRAW_FRAMEBUFFER_BINDING = 0x8ca6, // Same as FRAMEBUFFER_BINDING\r\n    READ_FRAMEBUFFER = 0x8ca8,\r\n    DRAW_FRAMEBUFFER = 0x8ca9,\r\n    READ_FRAMEBUFFER_BINDING = 0x8caa,\r\n    RENDERBUFFER_SAMPLES = 0x8cab,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4,\r\n    MAX_COLOR_ATTACHMENTS = 0x8cdf,\r\n    COLOR_ATTACHMENT1 = 0x8ce1,\r\n    COLOR_ATTACHMENT2 = 0x8ce2,\r\n    COLOR_ATTACHMENT3 = 0x8ce3,\r\n    COLOR_ATTACHMENT4 = 0x8ce4,\r\n    COLOR_ATTACHMENT5 = 0x8ce5,\r\n    COLOR_ATTACHMENT6 = 0x8ce6,\r\n    COLOR_ATTACHMENT7 = 0x8ce7,\r\n    COLOR_ATTACHMENT8 = 0x8ce8,\r\n    COLOR_ATTACHMENT9 = 0x8ce9,\r\n    COLOR_ATTACHMENT10 = 0x8cea,\r\n    COLOR_ATTACHMENT11 = 0x8ceb,\r\n    COLOR_ATTACHMENT12 = 0x8cec,\r\n    COLOR_ATTACHMENT13 = 0x8ced,\r\n    COLOR_ATTACHMENT14 = 0x8cee,\r\n    COLOR_ATTACHMENT15 = 0x8cef,\r\n    FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56,\r\n    MAX_SAMPLES = 0x8d57,\r\n    HALF_FLOAT = 0x140b,\r\n    HALF_FLOAT_OES = 0x8d61,\r\n    RG = 0x8227,\r\n    RG_INTEGER = 0x8228,\r\n    R8 = 0x8229,\r\n    RG8 = 0x822b,\r\n    R16F = 0x822d,\r\n    R32F = 0x822e,\r\n    RG16F = 0x822f,\r\n    RG32F = 0x8230,\r\n    R8I = 0x8231,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823a,\r\n    RG32I = 0x823b,\r\n    RG32UI = 0x823c,\r\n    VERTEX_ARRAY_BINDING = 0x85b5,\r\n    R8_SNORM = 0x8f94,\r\n    RG8_SNORM = 0x8f95,\r\n    RGB8_SNORM = 0x8f96,\r\n    RGBA8_SNORM = 0x8f97,\r\n    SIGNED_NORMALIZED = 0x8f9c,\r\n    COPY_READ_BUFFER = 0x8f36,\r\n    COPY_WRITE_BUFFER = 0x8f37,\r\n    COPY_READ_BUFFER_BINDING = 0x8f36, // Same as COPY_READ_BUFFER\r\n    COPY_WRITE_BUFFER_BINDING = 0x8f37, // Same as COPY_WRITE_BUFFER\r\n    UNIFORM_BUFFER = 0x8a11,\r\n    UNIFORM_BUFFER_BINDING = 0x8a28,\r\n    UNIFORM_BUFFER_START = 0x8a29,\r\n    UNIFORM_BUFFER_SIZE = 0x8a2a,\r\n    MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b,\r\n    MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d,\r\n    MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e,\r\n    MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f,\r\n    MAX_UNIFORM_BLOCK_SIZE = 0x8a30,\r\n    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31,\r\n    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33,\r\n    UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34,\r\n    ACTIVE_UNIFORM_BLOCKS = 0x8a36,\r\n    UNIFORM_TYPE = 0x8a37,\r\n    UNIFORM_SIZE = 0x8a38,\r\n    UNIFORM_BLOCK_INDEX = 0x8a3a,\r\n    UNIFORM_OFFSET = 0x8a3b,\r\n    UNIFORM_ARRAY_STRIDE = 0x8a3c,\r\n    UNIFORM_MATRIX_STRIDE = 0x8a3d,\r\n    UNIFORM_IS_ROW_MAJOR = 0x8a3e,\r\n    UNIFORM_BLOCK_BINDING = 0x8a3f,\r\n    UNIFORM_BLOCK_DATA_SIZE = 0x8a40,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43,\r\n    UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44,\r\n    UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46,\r\n    INVALID_INDEX = 0xffffffff,\r\n    MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\r\n    MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\r\n    MAX_SERVER_WAIT_TIMEOUT = 0x9111,\r\n    OBJECT_TYPE = 0x9112,\r\n    SYNC_CONDITION = 0x9113,\r\n    SYNC_STATUS = 0x9114,\r\n    SYNC_FLAGS = 0x9115,\r\n    SYNC_FENCE = 0x9116,\r\n    SYNC_GPU_COMMANDS_COMPLETE = 0x9117,\r\n    UNSIGNALED = 0x9118,\r\n    SIGNALED = 0x9119,\r\n    ALREADY_SIGNALED = 0x911a,\r\n    TIMEOUT_EXPIRED = 0x911b,\r\n    CONDITION_SATISFIED = 0x911c,\r\n    WAIT_FAILED = 0x911d,\r\n    SYNC_FLUSH_COMMANDS_BIT = 0x00000001,\r\n    VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe,\r\n    ANY_SAMPLES_PASSED = 0x8c2f,\r\n    ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a,\r\n    SAMPLER_BINDING = 0x8919,\r\n    RGB10_A2UI = 0x906f,\r\n    INT_2_10_10_10_REV = 0x8d9f,\r\n    TRANSFORM_FEEDBACK = 0x8e22,\r\n    TRANSFORM_FEEDBACK_PAUSED = 0x8e23,\r\n    TRANSFORM_FEEDBACK_ACTIVE = 0x8e24,\r\n    TRANSFORM_FEEDBACK_BINDING = 0x8e25,\r\n    COMPRESSED_R11_EAC = 0x9270,\r\n    COMPRESSED_SIGNED_R11_EAC = 0x9271,\r\n    COMPRESSED_RG11_EAC = 0x9272,\r\n    COMPRESSED_SIGNED_RG11_EAC = 0x9273,\r\n    COMPRESSED_RGB8_ETC2 = 0x9274,\r\n    COMPRESSED_SRGB8_ETC2 = 0x9275,\r\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\r\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\r\n    COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\r\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279,\r\n    TEXTURE_IMMUTABLE_FORMAT = 0x912f,\r\n    MAX_ELEMENT_INDEX = 0x8d6b,\r\n    TEXTURE_IMMUTABLE_LEVELS = 0x82df,\r\n\r\n    // Extensions\r\n    MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff,\r\n}\r\n","import { GlConstants } from \"./GLConstant\";\r\nimport { TypedArray } from \"./type\";\r\n\r\n/**\r\n * Get the GL type for a typedArray\r\n */\r\nexport function getGLTypeForTypedArray(typedArray: ArrayBufferView): number {\r\n    if (typedArray instanceof Int8Array) {\r\n        return GlConstants.BYTE;\r\n    }\r\n    if (typedArray instanceof Uint8Array) {\r\n        return GlConstants.UNSIGNED_BYTE;\r\n    }\r\n    if (typedArray instanceof Uint8ClampedArray) {\r\n        return GlConstants.UNSIGNED_BYTE;\r\n    }\r\n    if (typedArray instanceof Int16Array) {\r\n        return GlConstants.SHORT;\r\n    }\r\n    if (typedArray instanceof Uint16Array) {\r\n        return GlConstants.UNSIGNED_SHORT;\r\n    }\r\n    if (typedArray instanceof Int32Array) {\r\n        return GlConstants.INT;\r\n    }\r\n    if (typedArray instanceof Uint32Array) {\r\n        return GlConstants.UNSIGNED_INT;\r\n    }\r\n    if (typedArray instanceof Float32Array) {\r\n        return GlConstants.FLOAT;\r\n    }\r\n    throw \"unsupported typed array to gl type\";\r\n}\r\n\r\nexport function getArrayTypeForGLtype(glType: number) {\r\n    if (glType == GlConstants.BYTE) {\r\n        return Int8Array;\r\n    }\r\n    if (glType == GlConstants.UNSIGNED_BYTE) {\r\n        return Uint8Array;\r\n    }\r\n    if (glType == GlConstants.UNSIGNED_BYTE) {\r\n        return Uint8ClampedArray;\r\n    }\r\n    if (glType == GlConstants.SHORT) {\r\n        return Int16Array;\r\n    }\r\n    if (glType == GlConstants.UNSIGNED_SHORT) {\r\n        return Uint16Array;\r\n    }\r\n    if (glType == GlConstants.INT) {\r\n        return Int32Array;\r\n    }\r\n    if (glType == GlConstants.UNSIGNED_INT) {\r\n        return Uint32Array;\r\n    }\r\n    if (glType == GlConstants.FLOAT) {\r\n        return Float32Array;\r\n    }\r\n    throw \"unsupported gltype to array type\";\r\n}\r\n\r\nexport function getbytesForGLtype(glType: number) {\r\n    switch (glType) {\r\n        case GlConstants.BYTE:\r\n            return 1;\r\n        case GlConstants.UNSIGNED_BYTE:\r\n            return 1;\r\n\r\n        case GlConstants.SHORT:\r\n            return 2;\r\n        case GlConstants.UNSIGNED_SHORT_4_4_4_4:\r\n            return 2;\r\n        case GlConstants.UNSIGNED_SHORT:\r\n            return 2;\r\n\r\n        case GlConstants.INT:\r\n            return 4;\r\n        case GlConstants.UNSIGNED_INT:\r\n            return 4;\r\n\r\n        case GlConstants.HALF_FLOAT:\r\n            return 2;\r\n        case GlConstants.HALF_FLOAT_OES:\r\n            return 2;\r\n        case GlConstants.FLOAT:\r\n            return 4;\r\n        default:\r\n            throw \"unsupported gltype to bytesPerElement\";\r\n    }\r\n}\r\n\r\nexport function getTypedArray(data: number | number[], gltype: number): TypedArray {\r\n    let type = typeof data;\r\n    if (type == \"number\") {\r\n        let type = getArrayTypeForGLtype(gltype);\r\n        return new type(data as number);\r\n    } else if (data instanceof Array) {\r\n        let type = getArrayTypeForGLtype(gltype);\r\n        return new type(data);\r\n    }\r\n    return null;\r\n}\r\n\r\nexport function float4Equal(lhs: Float32Array, rhs: Float32Array): boolean {\r\n    return lhs[0] == rhs[0] || lhs[1] == rhs[1] || lhs[2] == rhs[2];\r\n}\r\n","import { IvertexIndex, TypedArray, TArrayInfo } from \"./type\";\r\nimport { GlConstants } from \"./GLConstant\";\r\nimport { getGLTypeForTypedArray, getArrayTypeForGLtype } from \"./Helper\";\r\n\r\nexport class VertexIndex implements IvertexIndex {\r\n    name: string;\r\n    viewBuffer?: ArrayBufferView;\r\n    count?: number;\r\n\r\n    componentDataType: number;\r\n\r\n    glBuffer: WebGLBuffer;\r\n    drawType: number;\r\n\r\n    static fromTarrayInfo(data: TArrayInfo): VertexIndex {\r\n        let newData = new VertexIndex();\r\n        newData.name = \"indices\";\r\n        if (data instanceof Array) {\r\n            newData.viewBuffer = new Uint16Array(data);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n            newData.viewBuffer = data;\r\n        } else {\r\n            let arraydata = data.value;\r\n            if (arraydata instanceof Array) {\r\n                let type = data.componentDataType ? getArrayTypeForGLtype(data.componentDataType) : Uint16Array;\r\n                newData.viewBuffer = new type(arraydata);\r\n            } else {\r\n                newData.viewBuffer = arraydata;\r\n            }\r\n        }\r\n\r\n        let orginData = data as IvertexIndex;\r\n\r\n        if (orginData.componentDataType == null) {\r\n            newData.componentDataType = newData.viewBuffer\r\n                ? getGLTypeForTypedArray(newData.viewBuffer as TypedArray)\r\n                : GlConstants.UNSIGNED_SHORT;\r\n        } else {\r\n            newData.componentDataType = orginData.componentDataType;\r\n        }\r\n        if (orginData.count == null) {\r\n            newData.count = newData.viewBuffer ? (newData.viewBuffer as TypedArray).length : null;\r\n        } else {\r\n            newData.count = orginData.count;\r\n        }\r\n        newData.drawType = orginData.drawType ? newData.drawType : GlConstants.STATIC_DRAW;\r\n\r\n        if (newData.count == null) {\r\n            throw new Error(\"can not deduce geometry Indices count.\");\r\n        }\r\n\r\n        // vertexData.count = newData.indexCount ? newData.indexCount : vertexData.length;\r\n        return newData;\r\n    }\r\n}\r\n\r\nexport function createIndexBufferInfo(gl: WebGLRenderingContext, data: TArrayInfo): IvertexIndex {\r\n    let vertexdata = VertexIndex.fromTarrayInfo(data);\r\n    if (vertexdata.glBuffer == null) {\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ELEMENT_ARRAY_BUFFER, vertexdata.viewBuffer, vertexdata.drawType);\r\n        vertexdata.glBuffer = buffer;\r\n    }\r\n    return vertexdata;\r\n}\r\n\r\nexport function setIndexBuffer(gl: WebGLRenderingContext, indexbuffer: IvertexIndex) {\r\n    gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, indexbuffer.glBuffer);\r\n}\r\n","import { IvertexAttrib, TypedArray, TArrayInfo, IarrayInfo } from \"./type\";\r\nimport { GlConstants } from \"./GLConstant\";\r\nimport { getGLTypeForTypedArray, getArrayTypeForGLtype, getbytesForGLtype } from \"./Helper\";\r\n\r\nexport class VertexAtt implements IvertexAttrib {\r\n    name: string;\r\n    glBuffer: WebGLBuffer;\r\n\r\n    viewBuffer?: ArrayBufferView;\r\n    count?: number;\r\n\r\n    componentSize: number;\r\n    componentDataType: number;\r\n    normalize: boolean;\r\n    bytesOffset: number;\r\n    bytesStride: number;\r\n    divisor?: number;\r\n    drawType: number;\r\n\r\n    static fromTarrayInfo(attName: string, data: TArrayInfo): VertexAtt {\r\n        let newData = new VertexAtt();\r\n        newData.name = attName;\r\n\r\n        if (data instanceof Array) {\r\n            newData.viewBuffer = new Float32Array(data);\r\n        } else if (ArrayBuffer.isView(data)) {\r\n            newData.viewBuffer = data;\r\n        } else {\r\n            let arraydata = data.value;\r\n            if (arraydata instanceof Array) {\r\n                let type = data.componentDataType ? getArrayTypeForGLtype(data.componentDataType) : Float32Array;\r\n                newData.viewBuffer = new type(arraydata);\r\n            } else {\r\n                newData.viewBuffer = arraydata;\r\n            }\r\n        }\r\n\r\n        let orginData = data as IarrayInfo;\r\n\r\n        if (orginData.componentDataType == null) {\r\n            newData.componentDataType = newData.viewBuffer\r\n                ? getGLTypeForTypedArray(newData.viewBuffer as TypedArray)\r\n                : GlConstants.FLOAT;\r\n        } else {\r\n            newData.componentDataType = orginData.componentDataType;\r\n        }\r\n\r\n        newData.componentSize = orginData.componentSize ? orginData.componentSize : guessNumComponentsFromName(attName);\r\n        newData.normalize = orginData.normalize != null ? orginData.normalize : false;\r\n        newData.bytesOffset = orginData.offsetInBytes ? orginData.offsetInBytes : 0;\r\n        newData.bytesStride = orginData.strideInBytes ? orginData.strideInBytes : 0;\r\n        newData.drawType = orginData.drawType ? orginData.drawType : GlConstants.STATIC_DRAW;\r\n        newData.divisor = orginData.divisor;\r\n\r\n        if (orginData.count == null) {\r\n            let elementBytes = getbytesForGLtype(newData.componentDataType) * newData.componentSize;\r\n            newData.count = newData.viewBuffer\r\n                ? (newData.viewBuffer as TypedArray).byteLength / elementBytes\r\n                : undefined;\r\n        } else {\r\n            newData.count = orginData.count;\r\n        }\r\n\r\n        return newData;\r\n    }\r\n}\r\n\r\nexport function createAttributeBufferInfo(gl: WebGLRenderingContext, attName: string, data: TArrayInfo): IvertexAttrib {\r\n    let vertexdata = VertexAtt.fromTarrayInfo(attName, data);\r\n\r\n    if (vertexdata.glBuffer == null) {\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, buffer);\r\n        gl.bufferData(gl.ARRAY_BUFFER, vertexdata.viewBuffer, vertexdata.drawType);\r\n\r\n        vertexdata.glBuffer = buffer;\r\n    }\r\n    return vertexdata;\r\n}\r\n\r\nexport function setAttributeBuffer(gl: WebGLRenderingContext, value: IvertexAttrib, location: number) {\r\n    gl.bindBuffer(gl.ARRAY_BUFFER, value.glBuffer);\r\n    gl.enableVertexAttribArray(location);\r\n    gl.vertexAttribPointer(\r\n        location,\r\n        value.componentSize,\r\n        value.componentDataType,\r\n        value.normalize,\r\n        value.bytesStride,\r\n        value.bytesOffset,\r\n    );\r\n    if (value.divisor !== undefined) {\r\n        gl.vertexAttribDivisor(location, value.divisor);\r\n    }\r\n}\r\n\r\nconst uvRE = /(uv|texcoord)/;\r\nconst colorRE = /color/;\r\nfunction guessNumComponentsFromName(name: string, length: number = null): number {\r\n    let numComponents;\r\n    name = name.toLowerCase();\r\n    if (uvRE.test(name)) {\r\n        numComponents = 2;\r\n    } else if (colorRE.test(name)) {\r\n        numComponents = 4;\r\n    } else {\r\n        numComponents = 3; // position, normals, indices ...\r\n    }\r\n    // if (length % numComponents > 0)\r\n    // {\r\n    //     throw \"Can not guess numComponents for attribute '\" + name + \"'. Tried \" +\r\n    //     numComponents + \" but \" + length +\r\n    //     \" values is not evenly divisible by \" + numComponents +\r\n    //     \". You should specify it.\";\r\n    // }\r\n    return numComponents;\r\n}\r\n","import { IvertexAttrib, IvertexIndex, IgeometryInfo, IgeometryOptions, IprogramInfo } from \"./type\";\r\nimport { createIndexBufferInfo } from \"./vertexIndex\";\r\nimport { createAttributeBufferInfo } from \"./vertexAttribute\";\r\n\r\nexport class GeometryInfo implements IgeometryInfo {\r\n    vaoDic: { [programeId: number]: WebGLVertexArrayObject } = {};\r\n    constructor() {\r\n        this.id = GeometryInfo.nextID();\r\n    }\r\n    readonly id: number;\r\n    primitiveType: number;\r\n    atts: { [attName: string]: IvertexAttrib } = {};\r\n    indices?: IvertexIndex;\r\n    // mode: number;\r\n    count: number;\r\n    offset: number;\r\n\r\n    private static count = 0;\r\n    static nextID() {\r\n        return GeometryInfo.count++;\r\n    }\r\n}\r\n\r\nexport function createGeometryInfo(gl: WebGLRenderingContext, op: IgeometryOptions): IgeometryInfo {\r\n    let info = new GeometryInfo();\r\n    info.primitiveType = op.primitiveType ? op.primitiveType : gl.TRIANGLES;\r\n    if (op.indices != null) {\r\n        info.indices = createIndexBufferInfo(gl, op.indices);\r\n        if (info.count == null) {\r\n            info.count = info.indices.count;\r\n        }\r\n    }\r\n\r\n    for (let attName in op.atts) {\r\n        info.atts[attName] = createAttributeBufferInfo(gl, attName, op.atts[attName]);\r\n        if (info.count == null) {\r\n            info.count = info.atts[attName].count;\r\n        }\r\n    }\r\n    return info;\r\n}\r\n/**\r\n *  tips : setProgrameWithcached need behind (setGeometryWithAdvanced/setGeometryWithCached)，when draw obj\r\n * @param gl\r\n * @param geometry\r\n * @param program\r\n */\r\nexport function setGeometryWithAdvanced(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    let bechanged = gl._cachedGeometry != geometry || gl._cachedProgram != program.bassProgram.program;\r\n    if (bechanged) {\r\n        if (geometry.vaoDic[program.bassProgram.id]) {\r\n            gl.bindVertexArray(geometry.vaoDic[program.bassProgram.id]);\r\n        } else {\r\n            if (gl.beActiveVao) {\r\n                let vao = createVaoByPrograme(gl, program, geometry);\r\n                gl.bindVertexArray(vao);\r\n                geometry.vaoDic[program.bassProgram.id] = vao;\r\n            } else {\r\n                setGeometry(gl, geometry, program);\r\n            }\r\n        }\r\n        gl._cachedGeometry = geometry;\r\n    }\r\n}\r\n\r\nexport function setGeometry(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    for (let attName in program.bassProgram.attsDic) {\r\n        program.bassProgram.attsDic[attName].setter(geometry.atts[attName]);\r\n    }\r\n    if (geometry.indices) {\r\n        gl.bindBuffer(gl.ELEMENT_ARRAY_BUFFER, geometry.indices.glBuffer);\r\n    }\r\n}\r\n/**\r\n * tips : setProgrameWithcached need behind (setGeometryWithAdvanced/setGeometryWithCached)，when draw obj\r\n * @param gl\r\n * @param geometry\r\n * @param program\r\n */\r\nexport function setGeometryWithCached(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    if (gl._cachedGeometry != geometry || gl._cachedProgram != program.bassProgram.program) {\r\n        setGeometry(gl, geometry, program);\r\n        gl._cachedGeometry = geometry;\r\n    }\r\n}\r\n\r\n//------------program和vao是一一对应的，geometry可以有多个vao\r\n/**\r\n * 创建vao将geometry和program绑定\r\n */\r\nexport function createVaoByPrograme(\r\n    gl: WebGLRenderingContext,\r\n    program: IprogramInfo,\r\n    geometry: IgeometryInfo,\r\n): WebGLVertexArrayObject {\r\n    let vao = gl.createVertexArray();\r\n    gl.bindVertexArray(vao);\r\n    setGeometry(gl, geometry, program);\r\n    gl.bindVertexArray(null);\r\n    return vao;\r\n}\r\n","import { IprogramState, IgeometryInfo } from \"./type\";\r\n\r\nimport { GlConstants } from \"./GLConstant\";\r\n\r\ndeclare global {\r\n    interface WebGLRenderingContext {\r\n        _cachedGeometry: IgeometryInfo;\r\n        _cachedProgram: WebGLProgram;\r\n        _cachedEnableCullFace: boolean;\r\n        _cachedCullFace: boolean;\r\n        _cachedDepthWrite: boolean;\r\n        _cachedDepthTest: boolean;\r\n        _cachedEnableBlend: boolean;\r\n        _cachedBlendEquation: number;\r\n        _cachedBlendFuncSrc: number;\r\n        _cachedBlendFuncDst: number;\r\n        _cachedEnableStencilTest: boolean;\r\n        _cachedStencilFunc: number;\r\n        _cachedStencilRefValue: number;\r\n        _cachedStencilMask: number;\r\n        _cachedStencilFail: number;\r\n        _cachedStencilPassZfail: number;\r\n        _cachedStencilFaileZpass: number;\r\n\r\n        _cachedViewPortX: number;\r\n        _cachedViewPortY: number;\r\n        _cachedViewPortWidth: number;\r\n        _cachedViewPortHeight: number;\r\n\r\n        _cacheColorMaskR: boolean;\r\n        _cacheColorMaskG: boolean;\r\n        _cacheColorMaskB: boolean;\r\n        _cacheColorMaskA: boolean;\r\n    }\r\n}\r\nexport function setClear(\r\n    gl: WebGLRenderingContext,\r\n    clearDepth: boolean,\r\n    clearColor: Float32Array | null,\r\n    clearStencil: boolean = false,\r\n) {\r\n    let cleartag = 0;\r\n    if (clearDepth) {\r\n        gl.clearDepth(1.0);\r\n        cleartag |= gl.DEPTH_BUFFER_BIT;\r\n    }\r\n    if (clearColor) {\r\n        gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\r\n        cleartag |= gl.COLOR_BUFFER_BIT;\r\n    }\r\n    if (clearStencil) {\r\n        gl.clearStencil(0);\r\n        cleartag |= gl.STENCIL_BUFFER_BIT;\r\n    }\r\n    gl.clear(cleartag);\r\n}\r\n\r\nexport function setViewPortWithCached(gl: WebGLRenderingContext, x: number, y: number, width: number, height: number) {\r\n    let bechanged =\r\n        gl._cachedViewPortX != x ||\r\n        gl._cachedViewPortY != y ||\r\n        gl._cachedViewPortWidth != width ||\r\n        gl._cachedViewPortHeight != height;\r\n    if (!bechanged) {\r\n        gl.viewport(x, y, width, height);\r\n        gl._cachedViewPortX = x;\r\n        gl._cachedViewPortY = y;\r\n        gl._cachedViewPortWidth = width;\r\n        gl._cachedViewPortHeight = height;\r\n    }\r\n}\r\n\r\nexport function setColorMaskWithCached(\r\n    gl: WebGLRenderingContext,\r\n    maskR: boolean,\r\n    maskG: boolean,\r\n    maskB: boolean,\r\n    maskA: boolean,\r\n) {\r\n    if (\r\n        gl._cacheColorMaskR != maskR ||\r\n        gl._cacheColorMaskG != maskG ||\r\n        gl._cacheColorMaskB != maskB ||\r\n        gl._cacheColorMaskA != maskA\r\n    ) {\r\n        gl.colorMask(maskR, maskG, maskB, maskA);\r\n        gl._cacheColorMaskR = maskR;\r\n        gl._cacheColorMaskG = maskG;\r\n        gl._cacheColorMaskB = maskB;\r\n        gl._cacheColorMaskA = maskA;\r\n    }\r\n}\r\n\r\nexport function setCullFaceState(gl: WebGLRenderingContext, enableCullFace: boolean = true, cullBack: boolean = true) {\r\n    if (enableCullFace) {\r\n        gl.enable(gl.CULL_FACE);\r\n        gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n    } else {\r\n        gl.disable(gl.CULL_FACE);\r\n    }\r\n}\r\n\r\nexport function setCullFaceStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableCullFace: boolean = true,\r\n    cullBack: boolean = true,\r\n) {\r\n    if (gl._cachedEnableCullFace != enableCullFace) {\r\n        gl._cachedEnableCullFace = enableCullFace;\r\n\r\n        if (enableCullFace) {\r\n            gl.enable(gl.CULL_FACE);\r\n\r\n            if (gl._cachedCullFace != cullBack) {\r\n                gl._cachedCullFace = cullBack;\r\n\r\n                gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n            }\r\n        } else {\r\n            gl.disable(gl.CULL_FACE);\r\n        }\r\n    } else {\r\n        if (gl._cachedCullFace != cullBack) {\r\n            gl._cachedCullFace = cullBack;\r\n\r\n            gl.cullFace(cullBack ? gl.BACK : gl.FRONT);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setDepthState(gl: WebGLRenderingContext, depthWrite: boolean = true, depthTest: boolean = true) {\r\n    gl.depthMask(depthWrite);\r\n    if (depthTest) {\r\n        gl.enable(gl.DEPTH_TEST);\r\n    } else {\r\n        gl.disable(gl.DEPTH_TEST);\r\n    }\r\n}\r\n\r\nexport function setDepthStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    depthWrite: boolean = true,\r\n    depthTest: boolean = true,\r\n) {\r\n    if (gl._cachedDepthWrite != depthWrite) {\r\n        gl._cachedDepthWrite = depthWrite;\r\n        gl.depthMask(depthWrite);\r\n    }\r\n    if (gl._cachedDepthTest != depthTest) {\r\n        gl._cachedDepthTest = depthTest;\r\n        if (depthTest) {\r\n            gl.enable(gl.DEPTH_TEST);\r\n        } else {\r\n            gl.disable(gl.DEPTH_TEST);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setBlendState(\r\n    gl: WebGLRenderingContext,\r\n    enableBlend: boolean = false,\r\n    blendEquation: number = GlConstants.FUNC_ADD,\r\n    blendSrc: number = GlConstants.ONE,\r\n    blendDst: number = GlConstants.ONE_MINUS_SRC_ALPHA,\r\n) {\r\n    if (enableBlend) {\r\n        gl.enable(gl.BLEND);\r\n        gl.blendEquation(blendEquation);\r\n        gl.blendFunc(blendSrc, blendDst);\r\n    }\r\n}\r\n\r\nexport function setBlendStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableBlend: boolean = false,\r\n    blendEquation: number = GlConstants.FUNC_ADD,\r\n    blendSrc: number = GlConstants.ONE,\r\n    blendDst: number = GlConstants.ONE_MINUS_SRC_ALPHA,\r\n) {\r\n    if (gl._cachedEnableBlend != enableBlend) {\r\n        gl._cachedEnableBlend = enableBlend;\r\n        if (enableBlend) {\r\n            gl.enable(gl.BLEND);\r\n\r\n            if (gl._cachedBlendEquation != blendEquation) {\r\n                gl._cachedBlendEquation = blendEquation;\r\n                gl.blendEquation(blendEquation);\r\n            }\r\n            if (gl._cachedBlendFuncSrc != blendSrc || gl._cachedBlendFuncDst != blendDst) {\r\n                gl._cachedBlendFuncSrc = blendSrc;\r\n                gl._cachedBlendFuncDst = blendDst;\r\n                gl.blendFunc(blendSrc, blendDst);\r\n            }\r\n        } else {\r\n            gl.disable(gl.BLEND);\r\n        }\r\n    }\r\n}\r\nexport function setStencilState(\r\n    gl: WebGLRenderingContext,\r\n    enableStencilTest: boolean = false,\r\n    stencilFunc: number = gl.ALWAYS,\r\n    stencilRefValue: number = 1,\r\n    stencilMask: number = 0xff,\r\n    stencilFail: number = gl.KEEP,\r\n    stencilPassZfail: number = gl.REPLACE,\r\n    stencilFaileZpass: number = gl.KEEP,\r\n) {\r\n    if (enableStencilTest) {\r\n        gl.enable(gl.STENCIL_TEST);\r\n        gl.stencilFunc(stencilFunc, stencilRefValue, stencilMask);\r\n        gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n    }\r\n}\r\nexport function setStencilStateWithCached(\r\n    gl: WebGLRenderingContext,\r\n    enableStencilTest: boolean = false,\r\n    stencilFunc: number = gl.ALWAYS,\r\n    stencilRefValue: number = 1,\r\n    stencilMask: number = 0xff,\r\n    stencilFail: number = gl.KEEP,\r\n    stencilPassZfail: number = gl.REPLACE,\r\n    stencilFaileZpass: number = gl.KEEP,\r\n) {\r\n    if (gl._cachedEnableStencilTest != enableStencilTest) {\r\n        gl._cachedEnableStencilTest = enableStencilTest;\r\n        gl.enable(gl.STENCIL_TEST);\r\n        if (\r\n            gl._cachedStencilFunc != stencilFunc ||\r\n            gl._cachedStencilRefValue != stencilRefValue ||\r\n            gl._cachedStencilMask != stencilMask\r\n        ) {\r\n            gl._cachedStencilFunc = stencilFunc;\r\n            gl._cachedStencilRefValue = stencilRefValue;\r\n            gl._cachedStencilMask = stencilMask;\r\n            gl.stencilFunc(stencilFunc, stencilRefValue, stencilMask);\r\n        }\r\n\r\n        if (\r\n            gl._cachedStencilFail != stencilFail ||\r\n            gl._cachedStencilPassZfail != stencilPassZfail ||\r\n            gl._cachedStencilFaileZpass != stencilFaileZpass\r\n        ) {\r\n            gl._cachedStencilFail = stencilFail;\r\n            gl._cachedStencilPassZfail = stencilPassZfail;\r\n            gl._cachedStencilFaileZpass = stencilFaileZpass;\r\n            gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n        }\r\n    }\r\n}\r\n\r\nexport function setProgramStates(gl: WebGLRenderingContext, state: IprogramState) {\r\n    //---------------------------cullface\r\n    setCullFaceState(gl, state.enableCullFace != false, state.cullBack != false);\r\n    //----------------depth\r\n    setDepthState(gl, state.depthWrite != false, state.depthTest != false);\r\n    //------------------------blend\r\n    setBlendState(\r\n        gl,\r\n        state.enableBlend == true,\r\n        state.blendEquation || gl.FUNC_ADD,\r\n        state.blendSrc || gl.SRC_ALPHA,\r\n        state.blendDst || gl.ONE_MINUS_SRC_ALPHA,\r\n    );\r\n    //-------------------------stencil\r\n    setStencilState(\r\n        gl,\r\n        state.enableStencilTest == true,\r\n        state.stencilFunc || gl.ALWAYS,\r\n        state.stencilRefValue || 1,\r\n        state.stencilMask || 0xff,\r\n        state.stencilFail || gl.KEEP,\r\n        state.stencilPassZfail || gl.REPLACE,\r\n        state.stencilFaileZpass || gl.KEEP,\r\n    );\r\n}\r\n\r\nexport function setProgramStatesWithCached(gl: WebGLRenderingContext, state: IprogramState) {\r\n    //---------------------------cullface\r\n    setCullFaceStateWithCached(gl, state.enableCullFace != false, state.cullBack != false);\r\n    //----------------depth\r\n    setDepthStateWithCached(gl, state.depthWrite != false, state.depthTest != false);\r\n    //------------------------blend\r\n    setBlendStateWithCached(\r\n        gl,\r\n        state.enableBlend == true,\r\n        state.blendEquation || gl.FUNC_ADD,\r\n        state.blendSrc || gl.SRC_ALPHA,\r\n        state.blendDst || gl.ONE_MINUS_SRC_ALPHA,\r\n    );\r\n    //-------------------------stencil\r\n    setStencilStateWithCached(\r\n        gl,\r\n        state.enableStencilTest == true,\r\n        state.stencilFunc || gl.ALWAYS,\r\n        state.stencilRefValue || 1,\r\n        state.stencilMask || 0xff,\r\n        state.stencilFail || gl.KEEP,\r\n        state.stencilPassZfail || gl.REPLACE,\r\n        state.stencilFaileZpass || gl.KEEP,\r\n    );\r\n}\r\n\r\n// /**\r\n//  *\r\n//  * @param state 原始 webgl state\r\n//  */\r\n// // state 是给每个物体 render用的，是不想受前一个物体render影响，所以需要推断出完整的 webgl state，缺失的按照默认值\r\n// function deduceFullShderState(state: IprogramState): IprogramState {\r\n//     //----------------------------cull face\r\n//     if (state.enableCullFace == null) {\r\n//         state.enableCullFace = true;\r\n//     }\r\n//     if (state.enableCullFace) {\r\n//         if (state.cullBack == null) {\r\n//             state.cullBack = true;\r\n//         }\r\n//     }\r\n\r\n//     //------------------depth\r\n//     if (state.depthWrite == null) {\r\n//         state.depthWrite = true;\r\n//     }\r\n//     if (state.depthTest == null) {\r\n//         state.depthTest = true;\r\n//     }\r\n//     if (state.depthTest) {\r\n//         if (state.depthTestFuc == null) {\r\n//             state.depthTestFuc = GlConstants.LEQUAL;\r\n//         }\r\n//     }\r\n\r\n//     //------------------ blend\r\n//     if (state.enableBlend == true) {\r\n//         if (state.blendEquation == null) {\r\n//             state.blendEquation = GlConstants.FUNC_ADD;\r\n//         }\r\n//         if (state.blendSrc == null) {\r\n//             state.blendSrc = GlConstants.ONE;\r\n//         }\r\n//         if (state.blendDst == null) {\r\n//             state.blendDst = GlConstants.ONE_MINUS_SRC_ALPHA;\r\n//         }\r\n//     }\r\n\r\n//     //---------------------stencil\r\n//     if (state.enableStencilTest == true) {\r\n//         if (state.stencilFunc == null) {\r\n//             state.stencilFunc = GlConstants.ALWAYS;\r\n//         }\r\n//         if (state.stencilFail == null) {\r\n//             state.stencilFail = GlConstants.KEEP;\r\n//         }\r\n//         if (state.stencilFaileZpass == null) {\r\n//             state.stencilFaileZpass = GlConstants.KEEP;\r\n//         }\r\n//         if (state.stencilPassZfail == null) {\r\n//             state.stencilPassZfail = GlConstants.REPLACE;\r\n//         }\r\n//         if (state.stencilRefValue == null) {\r\n//             state.stencilRefValue = 1;\r\n//         }\r\n//         if (state.stencilMask == null) {\r\n//             state.stencilMask = 0xff;\r\n//         }\r\n//     }\r\n\r\n//     return state;\r\n// }\r\n","import { GlConstants } from \"./GLConstant\";\r\nimport {\r\n    IbassProgramInfo,\r\n    IvertexAttrib,\r\n    IattributeInfo,\r\n    IuniformInfo,\r\n    IprogramOptions,\r\n    IprogramInfo,\r\n    IbassProgramOption,\r\n    IprogramState,\r\n    ItextureInfo,\r\n} from \"./type\";\r\nimport { setProgramStates, setProgramStatesWithCached } from \"./state\";\r\n\r\nexport enum ShaderTypeEnum {\r\n    VS,\r\n    FS,\r\n}\r\n\r\nexport function createProgramInfo(gl: WebGLRenderingContext, op: IprogramOptions): Program {\r\n    let bassProgram;\r\n    if (!(op.program instanceof BassProgram)) {\r\n        let bassprogramOp = op.program as IbassProgramOption;\r\n        bassProgram = createBassProgramInfo(gl, bassprogramOp.vs, bassprogramOp.fs, bassprogramOp.name);\r\n    } else {\r\n        bassProgram = op.program;\r\n    }\r\n    if (bassProgram) {\r\n        let info = new Program();\r\n        info.bassProgram = bassProgram;\r\n        info.uniforms = op.uniforms;\r\n        info.states = op.states;\r\n        return info;\r\n    } else {\r\n        return null;\r\n    }\r\n}\r\n\r\n/**\r\n * bing program 、set uniforms 、set webgl states\r\n * @param gl\r\n * @param program\r\n */\r\nexport function setProgram(gl: WebGLRenderingContext, program: IprogramInfo) {\r\n    gl.useProgram(program.bassProgram.program);\r\n\r\n    if (program.uniforms) {\r\n        setProgramUniforms(program.bassProgram, program.uniforms);\r\n    }\r\n    if (program.states) {\r\n        setProgramStates(gl, program.states);\r\n    }\r\n}\r\n\r\nexport function setProgramWithCached(gl: WebGLRenderingContext, program: IprogramInfo) {\r\n    if (gl._cachedProgram != program.bassProgram.program) {\r\n        gl._cachedProgram = program.bassProgram.program;\r\n\r\n        gl.useProgram(program.bassProgram.program);\r\n    }\r\n    if (program.uniforms) {\r\n        setProgramUniforms(program.bassProgram, program.uniforms);\r\n    }\r\n    if (program.states) {\r\n        setProgramStatesWithCached(gl, program.states);\r\n    }\r\n}\r\n\r\nexport function setProgramUniforms(info: IbassProgramInfo, uniforms: { [name: string]: any }) {\r\n    for (let key in uniforms) {\r\n        let setter = info.uniformsDic[key].setter;\r\n        let value = uniforms[key];\r\n        setter(value);\r\n    }\r\n}\r\nclass Program implements IprogramInfo {\r\n    bassProgram: IbassProgramInfo;\r\n    uniforms?: { [name: string]: any };\r\n    states?: IprogramState;\r\n}\r\n\r\nclass BassProgram implements IbassProgramInfo {\r\n    readonly id: number;\r\n    programName: string;\r\n    program: WebGLProgram;\r\n    uniformsDic: { [name: string]: IuniformInfo };\r\n    attsDic: { [name: string]: IattributeInfo };\r\n\r\n    constructor(\r\n        programName: string,\r\n        program: WebGLProgram,\r\n        uniformsDic: { [name: string]: IuniformInfo },\r\n        attsDic: { [name: string]: IattributeInfo },\r\n    ) {\r\n        this.id = BassProgram.nextID();\r\n        this.programName = programName;\r\n        this.program = program;\r\n        this.uniformsDic = uniformsDic;\r\n        this.attsDic = attsDic;\r\n    }\r\n\r\n    private static count = 0;\r\n    static nextID() {\r\n        return BassProgram.count++;\r\n    }\r\n}\r\n\r\nexport function createBassProgramInfo(gl: WebGLRenderingContext, vs: string, fs: string, name: string): BassProgram {\r\n    let vsShader = createShader(gl, ShaderTypeEnum.VS, vs, name + \"_vs\");\r\n    let fsShader = createShader(gl, ShaderTypeEnum.FS, fs, name + \"_fs\");\r\n    if (vsShader && fsShader) {\r\n        let item = gl.createProgram();\r\n        gl.attachShader(item, vsShader.shader);\r\n        gl.attachShader(item, fsShader.shader);\r\n        gl.linkProgram(item);\r\n        let check = gl.getProgramParameter(item, gl.LINK_STATUS);\r\n        if (check == false) {\r\n            let debguInfo =\r\n                \"ERROR: compile program Error!\" + \"VS:\" + vs + \"   FS:\" + fs + \"\\n\" + gl.getProgramInfoLog(item);\r\n            console.error(debguInfo);\r\n            gl.deleteProgram(item);\r\n            return null;\r\n        } else {\r\n            let attsInfo = getAttributesInfo(gl, item);\r\n            let uniformsInfo = getUniformsInfo(gl, item);\r\n            return new BassProgram(name, item, uniformsInfo, attsInfo);\r\n            // return { program: item, programName: name, uniformsDic: uniformsInfo, attsDic: attsInfo };\r\n        }\r\n    }\r\n}\r\n\r\nexport function getAttributesInfo(\r\n    gl: WebGLRenderingContext,\r\n    program: WebGLProgram,\r\n): { [attName: string]: IattributeInfo } {\r\n    let attdic: { [attName: string]: IattributeInfo } = {};\r\n    let numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n    for (let i = 0; i < numAttribs; i++) {\r\n        let attribInfo = gl.getActiveAttrib(program, i);\r\n        if (!attribInfo) break;\r\n        let attName = attribInfo.name;\r\n        let attlocation = gl.getAttribLocation(program, attName);\r\n        let func = getAttributeSetter(gl, attlocation);\r\n\r\n        attdic[attName] = { name: attName, location: attlocation, setter: func };\r\n    }\r\n    return attdic;\r\n}\r\n\r\nexport function getUniformsInfo(gl: WebGLRenderingContext, program: WebGLProgram): { [name: string]: IuniformInfo } {\r\n    let uniformDic: { [name: string]: IuniformInfo } = {};\r\n    let numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n\r\n    gl.bindpoint = 0;\r\n    for (let i = 0; i < numUniforms; i++) {\r\n        let uniformInfo = gl.getActiveUniform(program, i);\r\n        if (!uniformInfo) break;\r\n\r\n        let name = uniformInfo.name;\r\n        let type = uniformInfo.type;\r\n        let location = gl.getUniformLocation(program, name);\r\n\r\n        let beArray = false;\r\n        // remove the array suffix.\r\n        if (name.substr(-3) === \"[0]\") {\r\n            beArray = true;\r\n            // name = name.substr(0, name.length - 3);\r\n        }\r\n        if (location == null) continue;\r\n        let bindpoint = gl.bindpoint;\r\n        let func = getUniformSetter(gl, type, beArray, location, bindpoint);\r\n        uniformDic[name] = { name: name, location: location, type: type, setter: func };\r\n    }\r\n    return uniformDic;\r\n}\r\n\r\nexport function createShader(gl: WebGLRenderingContext, type: ShaderTypeEnum, source: string, name: string = null) {\r\n    let target = type == ShaderTypeEnum.VS ? GlConstants.VERTEX_SHADER : GlConstants.FRAGMENT_SHADER;\r\n    let item = gl.createShader(target);\r\n\r\n    gl.shaderSource(item, source);\r\n    gl.compileShader(item);\r\n    let check = gl.getShaderParameter(item, gl.COMPILE_STATUS);\r\n    if (check == false) {\r\n        let debug =\r\n            type == ShaderTypeEnum.VS ? \"ERROR: compile  VS Shader Error! VS:\" : \"ERROR: compile FS Shader Error! FS:\";\r\n        debug = debug + name + \".\\n\";\r\n        console.error(debug + gl.getShaderInfoLog(item));\r\n        gl.deleteShader(item);\r\n        return null;\r\n    } else {\r\n        return { shaderType: type, shaderName: name, shader: item };\r\n    }\r\n}\r\n\r\nexport function getUniformSetter(\r\n    gl: WebGLRenderingContext,\r\n    uniformType: number,\r\n    beArray: boolean,\r\n    location: WebGLUniformLocation,\r\n    bindpoint: number,\r\n) {\r\n    switch (uniformType) {\r\n        case gl.FLOAT:\r\n            if (beArray) {\r\n                return (value: any) => {\r\n                    gl.uniform1fv(location, value);\r\n                };\r\n            } else {\r\n                return (value: any) => {\r\n                    gl.uniform1f(location, value);\r\n                };\r\n            }\r\n            break;\r\n        case gl.FLOAT_VEC2:\r\n            return (value: Float32Array) => {\r\n                gl.uniform2fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_VEC3:\r\n            return (value: Float32Array) => {\r\n                gl.uniform3fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_VEC4:\r\n            return (value: Float32Array) => {\r\n                gl.uniform4fv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT:\r\n        case gl.BOOL:\r\n            if (beArray) {\r\n                return (value: number[]) => {\r\n                    gl.uniform1iv(location, value);\r\n                };\r\n            } else {\r\n                return (value: number) => {\r\n                    gl.uniform1i(location, value);\r\n                };\r\n            }\r\n            break;\r\n        case gl.INT_VEC2:\r\n        case gl.BOOL_VEC2:\r\n            return (value: number[]) => {\r\n                gl.uniform2iv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT_VEC3:\r\n        case gl.BOOL_VEC3:\r\n            return (value: number[]) => {\r\n                gl.uniform3iv(location, value);\r\n            };\r\n            break;\r\n        case gl.INT_VEC4:\r\n        case gl.BOOL_VEC4:\r\n            return (value: number[]) => {\r\n                gl.uniform4fv(location, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_MAT2:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix2fv(location, false, value);\r\n            };\r\n        case gl.FLOAT_MAT3:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix3fv(location, false, value);\r\n            };\r\n            break;\r\n        case gl.FLOAT_MAT4:\r\n            return (value: Float32Array) => {\r\n                gl.uniformMatrix4fv(location, false, value);\r\n            };\r\n            break;\r\n        case gl.SAMPLER_2D:\r\n            return (value: ItextureInfo) => {\r\n                gl.activeTexture(gl.TEXTURE0 + bindpoint);\r\n                gl.bindTexture(gl.TEXTURE_2D, value.texture);\r\n                gl.uniform1i(location, bindpoint);\r\n\r\n                gl.bindpoint = gl.bindpoint + 1;\r\n            };\r\n        default:\r\n            console.error(\"uniformSetter not handle type:\" + uniformType + \" yet!\");\r\n            break;\r\n    }\r\n}\r\n\r\nexport function getAttributeSetter(gl: WebGLRenderingContext, location: number) {\r\n    return (value: IvertexAttrib) => {\r\n        gl.bindBuffer(gl.ARRAY_BUFFER, value.glBuffer);\r\n        gl.enableVertexAttribArray(location);\r\n        gl.vertexAttribPointer(\r\n            location,\r\n            value.componentSize,\r\n            value.componentDataType,\r\n            value.normalize,\r\n            value.bytesStride,\r\n            value.bytesOffset,\r\n        );\r\n        if (value.divisor !== undefined) {\r\n            gl.vertexAttribDivisor(location, value.divisor);\r\n        }\r\n    };\r\n}\r\n","/**\r\n * Enum containing WebGL Constant values by name.\r\n * for use without an active WebGL context, or in cases where certain constants are unavailable using the WebGL context\r\n * (For example, in [Safari 9]{@link https://github.com/AnalyticalGraphicsInc/cesium/issues/2989}).\r\n *\r\n * These match the constants from the [WebGL 1.0]{@link https://www.khronos.org/registry/webgl/specs/latest/1.0/}\r\n * and [WebGL 2.0]{@link https://www.khronos.org/registry/webgl/specs/latest/2.0/}\r\n * specifications.\r\n */\r\nexport enum GlConstants {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000,\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006,\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA = 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    FUNC_ADD = 0x8006,\r\n    BLEND_EQUATION = 0x8009,\r\n    BLEND_EQUATION_RGB = 0x8009, // same as BLEND_EQUATION\r\n    BLEND_EQUATION_ALPHA = 0x883d,\r\n    FUNC_SUBTRACT = 0x800a,\r\n    FUNC_REVERSE_SUBTRACT = 0x800b,\r\n    BLEND_DST_RGB = 0x80c8,\r\n    BLEND_SRC_RGB = 0x80c9,\r\n    BLEND_DST_ALPHA = 0x80ca,\r\n    BLEND_SRC_ALPHA = 0x80cb,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004,\r\n    BLEND_COLOR = 0x8005,\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    ARRAY_BUFFER_BINDING = 0x8894,\r\n    ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\r\n    STREAM_DRAW = 0x88e0,\r\n    STATIC_DRAW = 0x88e4,\r\n    DYNAMIC_DRAW = 0x88e8,\r\n    BUFFER_SIZE = 0x8764,\r\n    BUFFER_USAGE = 0x8765,\r\n    CURRENT_VERTEX_ATTRIB = 0x8626,\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408,\r\n    CULL_FACE = 0x0b44,\r\n    BLEND = 0x0be2,\r\n    DITHER = 0x0bd0,\r\n    STENCIL_TEST = 0x0b90,\r\n    DEPTH_TEST = 0x0b71,\r\n    SCISSOR_TEST = 0x0c11,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809e,\r\n    SAMPLE_COVERAGE = 0x80a0,\r\n    NO_ERROR = 0,\r\n    INVALID_ENUM = 0x0500,\r\n    INVALID_VALUE = 0x0501,\r\n    INVALID_OPERATION = 0x0502,\r\n    OUT_OF_MEMORY = 0x0505,\r\n    CW = 0x0900,\r\n    CCW = 0x0901,\r\n    LINE_WIDTH = 0x0b21,\r\n    ALIASED_POINT_SIZE_RANGE = 0x846d,\r\n    ALIASED_LINE_WIDTH_RANGE = 0x846e,\r\n    CULL_FACE_MODE = 0x0b45,\r\n    FRONT_FACE = 0x0b46,\r\n    DEPTH_RANGE = 0x0b70,\r\n    DEPTH_WRITEMASK = 0x0b72,\r\n    DEPTH_CLEAR_VALUE = 0x0b73,\r\n    DEPTH_FUNC = 0x0b74,\r\n    STENCIL_CLEAR_VALUE = 0x0b91,\r\n    STENCIL_FUNC = 0x0b92,\r\n    STENCIL_FAIL = 0x0b94,\r\n    STENCIL_PASS_DEPTH_FAIL = 0x0b95,\r\n    STENCIL_PASS_DEPTH_PASS = 0x0b96,\r\n    STENCIL_REF = 0x0b97,\r\n    STENCIL_VALUE_MASK = 0x0b93,\r\n    STENCIL_WRITEMASK = 0x0b98,\r\n    STENCIL_BACK_FUNC = 0x8800,\r\n    STENCIL_BACK_FAIL = 0x8801,\r\n    STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\r\n    STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\r\n    STENCIL_BACK_REF = 0x8ca3,\r\n    STENCIL_BACK_VALUE_MASK = 0x8ca4,\r\n    STENCIL_BACK_WRITEMASK = 0x8ca5,\r\n    VIEWPORT = 0x0ba2,\r\n    SCISSOR_BOX = 0x0c10,\r\n    COLOR_CLEAR_VALUE = 0x0c22,\r\n    COLOR_WRITEMASK = 0x0c23,\r\n    UNPACK_ALIGNMENT = 0x0cf5,\r\n    PACK_ALIGNMENT = 0x0d05,\r\n    MAX_TEXTURE_SIZE = 0x0d33,\r\n    MAX_VIEWPORT_DIMS = 0x0d3a,\r\n    SUBPIXEL_BITS = 0x0d50,\r\n    RED_BITS = 0x0d52,\r\n    GREEN_BITS = 0x0d53,\r\n    BLUE_BITS = 0x0d54,\r\n    ALPHA_BITS = 0x0d55,\r\n    DEPTH_BITS = 0x0d56,\r\n    STENCIL_BITS = 0x0d57,\r\n    POLYGON_OFFSET_UNITS = 0x2a00,\r\n    POLYGON_OFFSET_FACTOR = 0x8038,\r\n    TEXTURE_BINDING_2D = 0x8069,\r\n    SAMPLE_BUFFERS = 0x80a8,\r\n    SAMPLES = 0x80a9,\r\n    SAMPLE_COVERAGE_VALUE = 0x80aa,\r\n    SAMPLE_COVERAGE_INVERT = 0x80ab,\r\n    COMPRESSED_TEXTURE_FORMATS = 0x86a3,\r\n    DONT_CARE = 0x1100,\r\n    FASTEST = 0x1101,\r\n    NICEST = 0x1102,\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190a,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    FRAGMENT_SHADER = 0x8b30,\r\n    VERTEX_SHADER = 0x8b31,\r\n    MAX_VERTEX_ATTRIBS = 0x8869,\r\n    MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb,\r\n    MAX_VARYING_VECTORS = 0x8dfc,\r\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d,\r\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c,\r\n    MAX_TEXTURE_IMAGE_UNITS = 0x8872,\r\n    MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd,\r\n    SHADER_TYPE = 0x8b4f,\r\n    DELETE_STATUS = 0x8b80,\r\n    LINK_STATUS = 0x8b82,\r\n    VALIDATE_STATUS = 0x8b83,\r\n    ATTACHED_SHADERS = 0x8b85,\r\n    ACTIVE_UNIFORMS = 0x8b86,\r\n    ACTIVE_ATTRIBUTES = 0x8b89,\r\n    SHADING_LANGUAGE_VERSION = 0x8b8c,\r\n    CURRENT_PROGRAM = 0x8b8d,\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n    KEEP = 0x1e00,\r\n    REPLACE = 0x1e01,\r\n    INCR = 0x1e02,\r\n    DECR = 0x1e03,\r\n    INVERT = 0x150a,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508,\r\n    VENDOR = 0x1f00,\r\n    RENDERER = 0x1f01,\r\n    VERSION = 0x1f02,\r\n    NEAREST = 0x2600,\r\n    LINEAR = 0x2601,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700,\r\n    LINEAR_MIPMAP_NEAREST = 0x2701,\r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703,\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_2D = 0x0de1,\r\n    TEXTURE = 0x1702,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_BINDING_CUBE_MAP = 0x8514,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a,\r\n    MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c,\r\n    TEXTURE0 = 0x84c0,\r\n    TEXTURE1 = 0x84c1,\r\n    TEXTURE2 = 0x84c2,\r\n    TEXTURE3 = 0x84c3,\r\n    TEXTURE4 = 0x84c4,\r\n    TEXTURE5 = 0x84c5,\r\n    TEXTURE6 = 0x84c6,\r\n    TEXTURE7 = 0x84c7,\r\n    TEXTURE8 = 0x84c8,\r\n    TEXTURE9 = 0x84c9,\r\n    TEXTURE10 = 0x84ca,\r\n    TEXTURE11 = 0x84cb,\r\n    TEXTURE12 = 0x84cc,\r\n    TEXTURE13 = 0x84cd,\r\n    TEXTURE14 = 0x84ce,\r\n    TEXTURE15 = 0x84cf,\r\n    TEXTURE16 = 0x84d0,\r\n    TEXTURE17 = 0x84d1,\r\n    TEXTURE18 = 0x84d2,\r\n    TEXTURE19 = 0x84d3,\r\n    TEXTURE20 = 0x84d4,\r\n    TEXTURE21 = 0x84d5,\r\n    TEXTURE22 = 0x84d6,\r\n    TEXTURE23 = 0x84d7,\r\n    TEXTURE24 = 0x84d8,\r\n    TEXTURE25 = 0x84d9,\r\n    TEXTURE26 = 0x84da,\r\n    TEXTURE27 = 0x84db,\r\n    TEXTURE28 = 0x84dc,\r\n    TEXTURE29 = 0x84dd,\r\n    TEXTURE30 = 0x84de,\r\n    TEXTURE31 = 0x84df,\r\n    ACTIVE_TEXTURE = 0x84e0,\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812f,\r\n    MIRRORED_REPEAT = 0x8370,\r\n    FLOAT_VEC2 = 0x8b50,\r\n    FLOAT_VEC3 = 0x8b51,\r\n    FLOAT_VEC4 = 0x8b52,\r\n    INT_VEC2 = 0x8b53,\r\n    INT_VEC3 = 0x8b54,\r\n    INT_VEC4 = 0x8b55,\r\n    BOOL = 0x8b56,\r\n    BOOL_VEC2 = 0x8b57,\r\n    BOOL_VEC3 = 0x8b58,\r\n    BOOL_VEC4 = 0x8b59,\r\n    FLOAT_MAT2 = 0x8b5a,\r\n    FLOAT_MAT3 = 0x8b5b,\r\n    FLOAT_MAT4 = 0x8b5c,\r\n    SAMPLER_2D = 0x8b5e,\r\n    SAMPLER_CUBE = 0x8b60,\r\n    VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\r\n    VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\r\n    VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\r\n    VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\r\n    VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a,\r\n    VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\r\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f,\r\n    IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a,\r\n    IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b,\r\n    COMPILE_STATUS = 0x8b81,\r\n    LOW_FLOAT = 0x8df0,\r\n    MEDIUM_FLOAT = 0x8df1,\r\n    HIGH_FLOAT = 0x8df2,\r\n    LOW_INT = 0x8df3,\r\n    MEDIUM_INT = 0x8df4,\r\n    HIGH_INT = 0x8df5,\r\n    FRAMEBUFFER = 0x8d40,\r\n    RENDERBUFFER = 0x8d41,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGB565 = 0x8d62,\r\n    DEPTH_COMPONENT16 = 0x81a5,\r\n    STENCIL_INDEX = 0x1901,\r\n    STENCIL_INDEX8 = 0x8d48,\r\n    DEPTH_STENCIL = 0x84f9,\r\n    RENDERBUFFER_WIDTH = 0x8d42,\r\n    RENDERBUFFER_HEIGHT = 0x8d43,\r\n    RENDERBUFFER_INTERNAL_FORMAT = 0x8d44,\r\n    RENDERBUFFER_RED_SIZE = 0x8d50,\r\n    RENDERBUFFER_GREEN_SIZE = 0x8d51,\r\n    RENDERBUFFER_BLUE_SIZE = 0x8d52,\r\n    RENDERBUFFER_ALPHA_SIZE = 0x8d53,\r\n    RENDERBUFFER_DEPTH_SIZE = 0x8d54,\r\n    RENDERBUFFER_STENCIL_SIZE = 0x8d55,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3,\r\n    COLOR_ATTACHMENT0 = 0x8ce0,\r\n    DEPTH_ATTACHMENT = 0x8d00,\r\n    STENCIL_ATTACHMENT = 0x8d20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821a,\r\n    NONE = 0,\r\n    FRAMEBUFFER_COMPLETE = 0x8cd5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8cdd,\r\n    FRAMEBUFFER_BINDING = 0x8ca6,\r\n    RENDERBUFFER_BINDING = 0x8ca7,\r\n    MAX_RENDERBUFFER_SIZE = 0x84e8,\r\n    INVALID_FRAMEBUFFER_OPERATION = 0x0506,\r\n    UNPACK_FLIP_Y_WEBGL = 0x9240,\r\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\r\n    CONTEXT_LOST_WEBGL = 0x9242,\r\n    UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\r\n    BROWSER_DEFAULT_WEBGL = 0x9244,\r\n\r\n    // WEBGL_compressed_texture_s3tc\r\n    COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0,\r\n    COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1,\r\n    COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2,\r\n    COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3,\r\n\r\n    // WEBGL_compressed_texture_pvrtc\r\n    COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00,\r\n    COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01,\r\n    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\r\n    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\r\n\r\n    // WEBGL_compressed_texture_etc1\r\n    COMPRESSED_RGB_ETC1_WEBGL = 0x8d64,\r\n\r\n    // Desktop OpenGL\r\n    DOUBLE = 0x140a,\r\n\r\n    // WebGL 2\r\n    READ_BUFFER = 0x0c02,\r\n    UNPACK_ROW_LENGTH = 0x0cf2,\r\n    UNPACK_SKIP_ROWS = 0x0cf3,\r\n    UNPACK_SKIP_PIXELS = 0x0cf4,\r\n    PACK_ROW_LENGTH = 0x0d02,\r\n    PACK_SKIP_ROWS = 0x0d03,\r\n    PACK_SKIP_PIXELS = 0x0d04,\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    RED = 0x1903,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    RGB10_A2 = 0x8059,\r\n    TEXTURE_BINDING_3D = 0x806a,\r\n    UNPACK_SKIP_IMAGES = 0x806d,\r\n    UNPACK_IMAGE_HEIGHT = 0x806e,\r\n    TEXTURE_3D = 0x806f,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    MAX_3D_TEXTURE_SIZE = 0x8073,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    MAX_ELEMENTS_VERTICES = 0x80e8,\r\n    MAX_ELEMENTS_INDICES = 0x80e9,\r\n    TEXTURE_MIN_LOD = 0x813a,\r\n    TEXTURE_MAX_LOD = 0x813b,\r\n    TEXTURE_BASE_LEVEL = 0x813c,\r\n    TEXTURE_MAX_LEVEL = 0x813d,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n    DEPTH_COMPONENT24 = 0x81a6,\r\n    MAX_TEXTURE_LOD_BIAS = 0x84fd,\r\n    TEXTURE_COMPARE_MODE = 0x884c,\r\n    TEXTURE_COMPARE_FUNC = 0x884d,\r\n    CURRENT_QUERY = 0x8865,\r\n    QUERY_RESULT = 0x8866,\r\n    QUERY_RESULT_AVAILABLE = 0x8867,\r\n    STREAM_READ = 0x88e1,\r\n    STREAM_COPY = 0x88e2,\r\n    STATIC_READ = 0x88e5,\r\n    STATIC_COPY = 0x88e6,\r\n    DYNAMIC_READ = 0x88e9,\r\n    DYNAMIC_COPY = 0x88ea,\r\n    MAX_DRAW_BUFFERS = 0x8824,\r\n    DRAW_BUFFER0 = 0x8825,\r\n    DRAW_BUFFER1 = 0x8826,\r\n    DRAW_BUFFER2 = 0x8827,\r\n    DRAW_BUFFER3 = 0x8828,\r\n    DRAW_BUFFER4 = 0x8829,\r\n    DRAW_BUFFER5 = 0x882a,\r\n    DRAW_BUFFER6 = 0x882b,\r\n    DRAW_BUFFER7 = 0x882c,\r\n    DRAW_BUFFER8 = 0x882d,\r\n    DRAW_BUFFER9 = 0x882e,\r\n    DRAW_BUFFER10 = 0x882f,\r\n    DRAW_BUFFER11 = 0x8830,\r\n    DRAW_BUFFER12 = 0x8831,\r\n    DRAW_BUFFER13 = 0x8832,\r\n    DRAW_BUFFER14 = 0x8833,\r\n    DRAW_BUFFER15 = 0x8834,\r\n    MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49,\r\n    MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a,\r\n    SAMPLER_3D = 0x8b5f,\r\n    SAMPLER_2D_SHADOW = 0x8b62,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b,\r\n    PIXEL_PACK_BUFFER = 0x88eb,\r\n    PIXEL_UNPACK_BUFFER = 0x88ec,\r\n    PIXEL_PACK_BUFFER_BINDING = 0x88ed,\r\n    PIXEL_UNPACK_BUFFER_BINDING = 0x88ef,\r\n    FLOAT_MAT2X3 = 0x8b65,\r\n    FLOAT_MAT2X4 = 0x8b66,\r\n    FLOAT_MAT3X2 = 0x8b67,\r\n    FLOAT_MAT3X4 = 0x8b68,\r\n    FLOAT_MAT4X2 = 0x8b69,\r\n    FLOAT_MAT4X3 = 0x8b6a,\r\n    SRGB = 0x8c40,\r\n    SRGB8 = 0x8c41,\r\n    SRGB8_ALPHA8 = 0x8c43,\r\n    COMPARE_REF_TO_TEXTURE = 0x884e,\r\n    RGBA32F = 0x8814,\r\n    RGB32F = 0x8815,\r\n    RGBA16F = 0x881a,\r\n    RGB16F = 0x881b,\r\n    VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd,\r\n    MAX_ARRAY_TEXTURE_LAYERS = 0x88ff,\r\n    MIN_PROGRAM_TEXEL_OFFSET = 0x8904,\r\n    MAX_PROGRAM_TEXEL_OFFSET = 0x8905,\r\n    MAX_VARYING_COMPONENTS = 0x8b4b,\r\n    TEXTURE_2D_ARRAY = 0x8c1a,\r\n    TEXTURE_BINDING_2D_ARRAY = 0x8c1d,\r\n    R11F_G11F_B10F = 0x8c3a,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b,\r\n    RGB9_E5 = 0x8c3d,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8c3e,\r\n    TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80,\r\n    TRANSFORM_FEEDBACK_VARYINGS = 0x8c83,\r\n    TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84,\r\n    TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85,\r\n    TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88,\r\n    RASTERIZER_DISCARD = 0x8c89,\r\n    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b,\r\n    INTERLEAVED_ATTRIBS = 0x8c8c,\r\n    SEPARATE_ATTRIBS = 0x8c8d,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8c8e,\r\n    TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f,\r\n    RGBA32UI = 0x8d70,\r\n    RGB32UI = 0x8d71,\r\n    RGBA16UI = 0x8d76,\r\n    RGB16UI = 0x8d77,\r\n    RGBA8UI = 0x8d7c,\r\n    RGB8UI = 0x8d7d,\r\n    RGBA32I = 0x8d82,\r\n    RGB32I = 0x8d83,\r\n    RGBA16I = 0x8d88,\r\n    RGB16I = 0x8d89,\r\n    RGBA8I = 0x8d8e,\r\n    RGB8I = 0x8d8f,\r\n    RED_INTEGER = 0x8d94,\r\n    RGB_INTEGER = 0x8d98,\r\n    RGBA_INTEGER = 0x8d99,\r\n    SAMPLER_2D_ARRAY = 0x8dc1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8dc4,\r\n    SAMPLER_CUBE_SHADOW = 0x8dc5,\r\n    UNSIGNED_INT_VEC2 = 0x8dc6,\r\n    UNSIGNED_INT_VEC3 = 0x8dc7,\r\n    UNSIGNED_INT_VEC4 = 0x8dc8,\r\n    INT_SAMPLER_2D = 0x8dca,\r\n    INT_SAMPLER_3D = 0x8dcb,\r\n    INT_SAMPLER_CUBE = 0x8dcc,\r\n    INT_SAMPLER_2D_ARRAY = 0x8dcf,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8dd2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8dd3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7,\r\n    DEPTH_COMPONENT32F = 0x8cac,\r\n    DEPTH32F_STENCIL8 = 0x8cad,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad,\r\n    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\r\n    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\r\n    FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\r\n    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\r\n    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\r\n    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\r\n    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\r\n    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\r\n    FRAMEBUFFER_DEFAULT = 0x8218,\r\n    UNSIGNED_INT_24_8 = 0x84fa,\r\n    DEPTH24_STENCIL8 = 0x88f0,\r\n    UNSIGNED_NORMALIZED = 0x8c17,\r\n    DRAW_FRAMEBUFFER_BINDING = 0x8ca6, // Same as FRAMEBUFFER_BINDING\r\n    READ_FRAMEBUFFER = 0x8ca8,\r\n    DRAW_FRAMEBUFFER = 0x8ca9,\r\n    READ_FRAMEBUFFER_BINDING = 0x8caa,\r\n    RENDERBUFFER_SAMPLES = 0x8cab,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4,\r\n    MAX_COLOR_ATTACHMENTS = 0x8cdf,\r\n    COLOR_ATTACHMENT1 = 0x8ce1,\r\n    COLOR_ATTACHMENT2 = 0x8ce2,\r\n    COLOR_ATTACHMENT3 = 0x8ce3,\r\n    COLOR_ATTACHMENT4 = 0x8ce4,\r\n    COLOR_ATTACHMENT5 = 0x8ce5,\r\n    COLOR_ATTACHMENT6 = 0x8ce6,\r\n    COLOR_ATTACHMENT7 = 0x8ce7,\r\n    COLOR_ATTACHMENT8 = 0x8ce8,\r\n    COLOR_ATTACHMENT9 = 0x8ce9,\r\n    COLOR_ATTACHMENT10 = 0x8cea,\r\n    COLOR_ATTACHMENT11 = 0x8ceb,\r\n    COLOR_ATTACHMENT12 = 0x8cec,\r\n    COLOR_ATTACHMENT13 = 0x8ced,\r\n    COLOR_ATTACHMENT14 = 0x8cee,\r\n    COLOR_ATTACHMENT15 = 0x8cef,\r\n    FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56,\r\n    MAX_SAMPLES = 0x8d57,\r\n    HALF_FLOAT = 0x140b,\r\n    HALF_FLOAT_OES = 0x8d61,\r\n    RG = 0x8227,\r\n    RG_INTEGER = 0x8228,\r\n    R8 = 0x8229,\r\n    RG8 = 0x822b,\r\n    R16F = 0x822d,\r\n    R32F = 0x822e,\r\n    RG16F = 0x822f,\r\n    RG32F = 0x8230,\r\n    R8I = 0x8231,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823a,\r\n    RG32I = 0x823b,\r\n    RG32UI = 0x823c,\r\n    VERTEX_ARRAY_BINDING = 0x85b5,\r\n    R8_SNORM = 0x8f94,\r\n    RG8_SNORM = 0x8f95,\r\n    RGB8_SNORM = 0x8f96,\r\n    RGBA8_SNORM = 0x8f97,\r\n    SIGNED_NORMALIZED = 0x8f9c,\r\n    COPY_READ_BUFFER = 0x8f36,\r\n    COPY_WRITE_BUFFER = 0x8f37,\r\n    COPY_READ_BUFFER_BINDING = 0x8f36, // Same as COPY_READ_BUFFER\r\n    COPY_WRITE_BUFFER_BINDING = 0x8f37, // Same as COPY_WRITE_BUFFER\r\n    UNIFORM_BUFFER = 0x8a11,\r\n    UNIFORM_BUFFER_BINDING = 0x8a28,\r\n    UNIFORM_BUFFER_START = 0x8a29,\r\n    UNIFORM_BUFFER_SIZE = 0x8a2a,\r\n    MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b,\r\n    MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d,\r\n    MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e,\r\n    MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f,\r\n    MAX_UNIFORM_BLOCK_SIZE = 0x8a30,\r\n    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31,\r\n    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33,\r\n    UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34,\r\n    ACTIVE_UNIFORM_BLOCKS = 0x8a36,\r\n    UNIFORM_TYPE = 0x8a37,\r\n    UNIFORM_SIZE = 0x8a38,\r\n    UNIFORM_BLOCK_INDEX = 0x8a3a,\r\n    UNIFORM_OFFSET = 0x8a3b,\r\n    UNIFORM_ARRAY_STRIDE = 0x8a3c,\r\n    UNIFORM_MATRIX_STRIDE = 0x8a3d,\r\n    UNIFORM_IS_ROW_MAJOR = 0x8a3e,\r\n    UNIFORM_BLOCK_BINDING = 0x8a3f,\r\n    UNIFORM_BLOCK_DATA_SIZE = 0x8a40,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43,\r\n    UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44,\r\n    UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46,\r\n    INVALID_INDEX = 0xffffffff,\r\n    MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\r\n    MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\r\n    MAX_SERVER_WAIT_TIMEOUT = 0x9111,\r\n    OBJECT_TYPE = 0x9112,\r\n    SYNC_CONDITION = 0x9113,\r\n    SYNC_STATUS = 0x9114,\r\n    SYNC_FLAGS = 0x9115,\r\n    SYNC_FENCE = 0x9116,\r\n    SYNC_GPU_COMMANDS_COMPLETE = 0x9117,\r\n    UNSIGNALED = 0x9118,\r\n    SIGNALED = 0x9119,\r\n    ALREADY_SIGNALED = 0x911a,\r\n    TIMEOUT_EXPIRED = 0x911b,\r\n    CONDITION_SATISFIED = 0x911c,\r\n    WAIT_FAILED = 0x911d,\r\n    SYNC_FLUSH_COMMANDS_BIT = 0x00000001,\r\n    VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe,\r\n    ANY_SAMPLES_PASSED = 0x8c2f,\r\n    ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a,\r\n    SAMPLER_BINDING = 0x8919,\r\n    RGB10_A2UI = 0x906f,\r\n    INT_2_10_10_10_REV = 0x8d9f,\r\n    TRANSFORM_FEEDBACK = 0x8e22,\r\n    TRANSFORM_FEEDBACK_PAUSED = 0x8e23,\r\n    TRANSFORM_FEEDBACK_ACTIVE = 0x8e24,\r\n    TRANSFORM_FEEDBACK_BINDING = 0x8e25,\r\n    COMPRESSED_R11_EAC = 0x9270,\r\n    COMPRESSED_SIGNED_R11_EAC = 0x9271,\r\n    COMPRESSED_RG11_EAC = 0x9272,\r\n    COMPRESSED_SIGNED_RG11_EAC = 0x9273,\r\n    COMPRESSED_RGB8_ETC2 = 0x9274,\r\n    COMPRESSED_SRGB8_ETC2 = 0x9275,\r\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\r\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\r\n    COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\r\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279,\r\n    TEXTURE_IMMUTABLE_FORMAT = 0x912f,\r\n    MAX_ELEMENT_INDEX = 0x8d6b,\r\n    TEXTURE_IMMUTABLE_LEVELS = 0x82df,\r\n\r\n    // Extensions\r\n    MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff,\r\n}\r\n","import { GlConstants } from \"./GLConstant\";\r\nimport { getGLTypeForTypedArray } from \"./Helper\";\r\nimport { ItexViewDataOption, ItexImageDataOption, ItextureInfo } from \"./type\";\r\n\r\nexport function createTextureFromTypedArray(\r\n    gl: WebGLRenderingContext,\r\n    data: ArrayBufferView,\r\n    texOP: ItexViewDataOption,\r\n): ItextureInfo {\r\n    // deduceTextureTypedArrayOption(gl, data, texOP);\r\n\r\n    let target = (texOP && texOP.target) || gl.TEXTURE_2D;\r\n    let pixelFormat = (texOP && texOP.pixelFormat) || gl.RGBA;\r\n    let pixelDatatype = (texOP && texOP.pixelDatatype) || gl.UNSIGNED_BYTE;\r\n    let filterMax = (texOP && texOP.filterMax) || gl.LINEAR;\r\n    let filterMin = (texOP && texOP.filterMin) || gl.LINEAR;\r\n    let wrapS = (texOP && texOP.wrapS) || gl.CLAMP_TO_EDGE;\r\n    let wrapT = (texOP && texOP.wrapT) || gl.CLAMP_TO_EDGE;\r\n\r\n    let tex = gl.createTexture();\r\n    gl.bindTexture(target, tex);\r\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, filterMax);\r\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, filterMin);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, wrapS);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, wrapT);\r\n\r\n    gl.texImage2D(target, 0, pixelFormat, texOP.width, texOP.height, 0, pixelFormat, pixelDatatype, data);\r\n    return {\r\n        texture: tex,\r\n        texDes: {\r\n            ...texOP,\r\n            target: target,\r\n            pixelFormat: pixelFormat,\r\n            pixelDatatype: pixelDatatype,\r\n            filterMin: filterMin,\r\n            filterMax: filterMax,\r\n            wrapS: wrapS,\r\n            wrapT: wrapT,\r\n        },\r\n    };\r\n}\r\n\r\nexport function createTextureFromImageSource(\r\n    gl: WebGLRenderingContext,\r\n    data: TexImageSource,\r\n    texOP?: ItexImageDataOption,\r\n): ItextureInfo {\r\n    let tex = gl.createTexture();\r\n\r\n    let target = (texOP && texOP.target) || gl.TEXTURE_2D;\r\n    let pixelFormat = (texOP && texOP.pixelFormat) || gl.RGBA;\r\n    let pixelDatatype = (texOP && texOP.pixelDatatype) || gl.UNSIGNED_BYTE;\r\n\r\n    let filterMax = (texOP && texOP.filterMax) || gl.LINEAR;\r\n    let filterMin = (texOP && texOP.filterMin) || gl.LINEAR;\r\n    let wrapS = (texOP && texOP.wrapS) || gl.CLAMP_TO_EDGE;\r\n    let wrapT = (texOP && texOP.wrapT) || gl.CLAMP_TO_EDGE;\r\n\r\n    gl.bindTexture(target, tex);\r\n    gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, (texOP && texOP.filterMax) || gl.LINEAR);\r\n    gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, (texOP && texOP.filterMin) || gl.LINEAR);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_S, (texOP && texOP.wrapS) || gl.CLAMP_TO_EDGE);\r\n    gl.texParameteri(target, gl.TEXTURE_WRAP_T, (texOP && texOP.wrapT) || gl.CLAMP_TO_EDGE);\r\n\r\n    gl.texImage2D(target, 0, pixelFormat, pixelFormat, pixelDatatype, data);\r\n\r\n    return {\r\n        texture: tex,\r\n        texDes: {\r\n            ...texOP,\r\n            target: target,\r\n            pixelFormat: pixelFormat,\r\n            pixelDatatype: pixelDatatype,\r\n            filterMin: filterMin,\r\n            filterMax: filterMax,\r\n            wrapS: wrapS,\r\n            wrapT: wrapT,\r\n        },\r\n    };\r\n}\r\n\r\nfunction isPowerOf2(value: number) {\r\n    return (value & (value - 1)) === 0;\r\n}\r\n\r\nfunction canGenerateMipmap(gl: WebGLRenderingContext, width: number, height: number) {\r\n    if (!gl.beWebgl2) {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n\r\nfunction canWrapReapeat(gl: WebGLRenderingContext, width: number, height: number) {\r\n    if (!gl.beWebgl2) {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n","import { IcontextOptions, IgeometryInfo, IprogramInfo, Iobject, IbassProgramInfo } from \"./type\";\r\nimport { setGeometryWithAdvanced, setGeometryWithCached, setGeometry } from \"./geometryInfo\";\r\nimport { setProgram, setProgramWithCached } from \"./programInfo\";\r\n\r\ndeclare global {\r\n    interface WebGLVertexArrayObject extends WebGLObject {}\r\n\r\n    interface WebGLRenderingContext {\r\n        beWebgl2: boolean;\r\n\r\n        bindpoint: number;\r\n        beActiveVao: boolean;\r\n        beActiveInstance: boolean;\r\n\r\n        addExtension(extName: string): void;\r\n        createVertexArray(): any;\r\n        bindVertexArray(vao?: WebGLVertexArrayObject | null): void;\r\n        deleteVertexArray(vao: WebGLVertexArrayObject): void;\r\n\r\n        vertexAttribDivisor(index: number, divisor: number): void;\r\n        drawElementsInstanced(mode: number, count: number, type: number, offset: number, instanceCount: number): void;\r\n        drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\r\n    }\r\n}\r\nWebGLRenderingContext.prototype.addExtension = function(extname: string): boolean {\r\n    let ext = this.getExtension(extname);\r\n    if (ext) {\r\n        switch (extname) {\r\n            case \"OES_vertex_array_object\":\r\n                this.bindVertexArray = ext.bindVertexArrayOES.bind(ext);\r\n                this.createVertexArray = ext.createVertexArrayOES.bind(ext);\r\n                this.deleteVertexArray = ext.deleteVertexArrayOES.bind(ext);\r\n                this.beActiveVao = true;\r\n                return true;\r\n            case \"ANGLE_instanced_arrays\":\r\n                this.vertexAttribDivisor = ext.vertexAttribDivisorANGLE.bind(ext);\r\n                this.drawElementsInstanced = ext.drawElementsInstancedANGLE.bind(ext);\r\n                this.drawArraysInstanced = ext.drawArraysInstancedANGLE.bind(ext);\r\n                this.beActiveInstance = true;\r\n                return true;\r\n\r\n            default:\r\n                console.warn(\"Not handle in addExtension, type: \" + extname);\r\n                return false;\r\n        }\r\n    }\r\n    return false;\r\n};\r\n\r\nObject.defineProperty(WebGLRenderingContext, \"beWebgl2\", {\r\n    get: function() {\r\n        if (this.beWebgl2 == null) {\r\n            let version = this.getParameter(this.VERSION);\r\n            this.beWebgl2 = version.indexOf(\"WebGL 2.0\") === 0;\r\n        }\r\n        return this._beWebgl2;\r\n    },\r\n    set: function(value: boolean) {\r\n        this._beWebgl2 = value;\r\n    },\r\n});\r\n\r\nexport function setUpWebgl(canvas: HTMLCanvasElement, options: IcontextOptions = {}): WebGLRenderingContext {\r\n    let type = options.context || \"webgl\";\r\n    let gl = canvas.getContext(type, options.contextAtts) as WebGLRenderingContext;\r\n    if (options.extentions != null) {\r\n        options.extentions.forEach(ext => {\r\n            gl.addExtension(ext);\r\n        });\r\n    }\r\n    if (type == \"webgl2\") {\r\n        gl.beActiveInstance = true;\r\n        gl.beActiveVao = true;\r\n    }\r\n\r\n    // canvas.addEventListener('webglcontextlost', function (e)\r\n    // {\r\n    //     console.log(e);\r\n    // }, false);\r\n\r\n    return gl;\r\n}\r\n\r\nexport function setGeometryAndProgram(gl: WebGLRenderingContext, geometry: IgeometryInfo, program: IprogramInfo) {\r\n    setProgram(gl, program);\r\n    setGeometry(gl, geometry, program);\r\n}\r\n\r\nexport function setGeometryAndProgramWithCached(\r\n    gl: WebGLRenderingContext,\r\n    geometry: IgeometryInfo,\r\n    program: IprogramInfo,\r\n) {\r\n    setGeometryWithAdvanced(gl, geometry, program);\r\n    setProgramWithCached(gl, program);\r\n}\r\n\r\nexport function drawBufferInfo(gl: WebGLRenderingContext, geometry: IgeometryInfo, instanceCount?: number): void {\r\n    if (geometry.indices != null) {\r\n        if (instanceCount != null) {\r\n            gl.drawElementsInstanced(\r\n                geometry.primitiveType,\r\n                geometry.count,\r\n                geometry.indices.componentDataType,\r\n                geometry.offset || 0,\r\n                instanceCount,\r\n            );\r\n        } else {\r\n            gl.drawElements(\r\n                geometry.primitiveType,\r\n                geometry.count,\r\n                geometry.indices.componentDataType,\r\n                geometry.offset || 0,\r\n            );\r\n        }\r\n    } else {\r\n        if (instanceCount != null) {\r\n            gl.drawArraysInstanced(geometry.primitiveType, geometry.offset || 0, geometry.count, instanceCount);\r\n        } else {\r\n            gl.drawArrays(geometry.primitiveType, geometry.offset || 0, geometry.count);\r\n        }\r\n    }\r\n}\r\n\r\nexport function drawObject(gl: WebGLRenderingContext, obj: Iobject, instanceCount?: number) {\r\n    setGeometryAndProgramWithCached(gl, obj.geometry, obj.program);\r\n    drawBufferInfo(gl, obj.geometry, instanceCount);\r\n    if (gl.beActiveVao) {\r\n        gl.bindVertexArray(null);\r\n    }\r\n}\r\n\r\nexport function createGlBuffer(gl: WebGLRenderingContext, target: number, viewData: ArrayBufferView): WebGLBuffer {\r\n    let buffer = gl.createBuffer();\r\n    gl.bindBuffer(target, buffer);\r\n    gl.bufferData(target, viewData, gl.STATIC_DRAW);\r\n    return buffer;\r\n}\r\n\r\nexport * from \"./geometryInfo\";\r\nexport * from \"./programInfo\";\r\nexport * from \"./glconstant\";\r\nexport * from \"./state\";\r\nexport * from \"./texture\";\r\nexport * from \"./helper\";\r\n","import {\r\n    IgeometryInfo,\r\n    IprogramInfo,\r\n    IcontextOptions,\r\n    IgeometryOptions,\r\n    IprogramOptions,\r\n    ItexImageDataOption,\r\n    ItextureInfo,\r\n    ItexViewDataOption,\r\n} from \"twebgl/dist/types/type\";\r\n\r\nimport {\r\n    createProgramInfo,\r\n    drawBufferInfo,\r\n    setUpWebgl,\r\n    createGeometryInfo,\r\n    setGeometry,\r\n    setProgram,\r\n    createVaoByPrograme,\r\n    setGeometryAndProgramWithCached,\r\n    setViewPortWithCached,\r\n    createTextureFromImageSource,\r\n    setProgramUniforms,\r\n    setClear,\r\n    createTextureFromTypedArray,\r\n    createGlBuffer,\r\n} from \"twebgl\";\r\nimport { RenderLayerEnum } from \"../ec/ec\";\r\nimport { AutoUniform } from \"./autoUniform\";\r\nimport { UniformTypeEnum } from \"../resources/assets/shader\";\r\nexport {\r\n    IprogramInfo,\r\n    IgeometryInfo,\r\n    IgeometryOptions,\r\n    IprogramOptions,\r\n    ItextureInfo,\r\n    ItexImageDataOption,\r\n    ItexViewDataOption,\r\n};\r\n\r\n// export interface IshaderOptions extends IprogramOptions {\r\n//     layer?: RenderLayerEnum;\r\n// }\r\n\r\n// export interface IshaderInfo extends IprogramInfo {\r\n//     layer: RenderLayerEnum;\r\n// }\r\n\r\nexport class GlRender {\r\n    private static context: WebGLRenderingContext;\r\n    static autoUniform: AutoUniform;\r\n    static init(canvas: HTMLCanvasElement, options: IcontextOptions = {}) {\r\n        this.context = setUpWebgl(canvas, options);\r\n    }\r\n\r\n    //---------------------capacities\r\n    private static _maxVertexAttribs: number;\r\n    static get maxVertexAttribs(): number {\r\n        if (this._maxVertexAttribs == null) {\r\n            this.context.getParameter(this.context.MAX_VERTEX_ATTRIBS);\r\n        }\r\n        return this._maxVertexAttribs;\r\n    }\r\n\r\n    private static _maxTexturesImageUnits: number;\r\n    static get maxTexturesImageUnits(): number {\r\n        if (this._maxTexturesImageUnits == null) {\r\n            this.context.getParameter(this.context.MAX_TEXTURE_IMAGE_UNITS);\r\n        }\r\n        return this._maxTexturesImageUnits;\r\n    }\r\n\r\n    static setViewPort(viewport: Float32Array): void {\r\n        setViewPortWithCached(\r\n            this.context,\r\n            viewport[0] * this.context.drawingBufferWidth,\r\n            viewport[1] * this.context.drawingBufferHeight,\r\n            viewport[2] * this.context.drawingBufferWidth,\r\n            viewport[3] * this.context.drawingBufferHeight,\r\n        );\r\n    }\r\n    static setClear(clearDepth: boolean, clearColor: Float32Array, clearStencil?: boolean) {\r\n        setClear(this.context, clearDepth, clearColor, clearStencil);\r\n    }\r\n\r\n    static setState(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n\r\n    static createGeometry(op: IgeometryOptions): IgeometryInfo {\r\n        let info = createGeometryInfo(this.context, op);\r\n        return info;\r\n    }\r\n\r\n    static createProgram(op: IprogramOptions): IprogramInfo {\r\n        let info = createProgramInfo(this.context, op);\r\n        // info.layer = op.layer || RenderLayerEnum.Geometry;\r\n        return info;\r\n    }\r\n\r\n    static createTextureFromImg(img: TexImageSource, texop?: ItexImageDataOption): ItextureInfo {\r\n        return createTextureFromImageSource(this.context, img, texop);\r\n    }\r\n    static createTextureFromViewData(viewData: ArrayBufferView, texop: ItexViewDataOption) {\r\n        return createTextureFromTypedArray(this.context, viewData, texop);\r\n    }\r\n\r\n    static setGeometryAndProgram(geometry: IgeometryInfo, program: IprogramInfo) {\r\n        setGeometryAndProgramWithCached(this.context, geometry, program);\r\n    }\r\n\r\n    static drawObject(\r\n        geometry: IgeometryInfo,\r\n        program: IprogramInfo,\r\n        uniforms?: { [name: string]: any },\r\n        defUniforms?: { [key: string]: { type: UniformTypeEnum; value: any } },\r\n        instancecount?: number,\r\n    ): void {\r\n        // setProgram(this.context, program);\r\n        setGeometryAndProgramWithCached(this.context, geometry, program);\r\n        //set uniforms\r\n        let uniformsDic = program.bassProgram.uniformsDic;\r\n        for (const key in uniformsDic) {\r\n            if (uniforms[key] != null) {\r\n                uniformsDic[key].setter(uniforms[key]);\r\n            } else if (this.autoUniform && this.autoUniform.autoUniforms[key]) {\r\n                let value = this.autoUniform.autoUniforms[key]();\r\n                uniformsDic[key].setter(value);\r\n            } else {\r\n                uniformsDic[key].setter(defUniforms && defUniforms[key].value);\r\n            }\r\n        }\r\n        drawBufferInfo(this.context, geometry, instancecount);\r\n    }\r\n\r\n    static createBuffer(target: number, viewData: ArrayBufferView): WebGLBuffer {\r\n        return createGlBuffer(this.context, target, viewData);\r\n    }\r\n}\r\n","import { IframeState } from \"../scene/frameState\";\r\n\r\nexport interface Ientity {\r\n    readonly guid: number;\r\n    beActive: boolean;\r\n    maskLayer: CullingMask;\r\n    components: { [name: string]: Icomponent };\r\n    addCompByName(compName: string): Icomponent;\r\n    getCompByName(compName: string): Icomponent;\r\n    addComp(comp: Icomponent): Icomponent;\r\n    // update(deltaTime: number): void;\r\n    dispose(): void;\r\n}\r\n\r\nexport interface IcompoentConstructor {\r\n    new (): Icomponent;\r\n}\r\nexport interface Icomponent {\r\n    entity: Ientity;\r\n    update(frameState: IframeState): void;\r\n    dispose(): void;\r\n}\r\n\r\n/**\r\n * 渲染的层级(从小到大绘制)\r\n */\r\nexport enum RenderLayerEnum {\r\n    Background = 1000,\r\n    Geometry = 2000,\r\n    AlphaTest = 2450,\r\n    Transparent = 3000, //透明\r\n    Overlay = 4000, //Overlay层\r\n}\r\n/**\r\n * 渲染mask枚举\r\n */\r\nexport enum CullingMask {\r\n    ui = 0x00000001,\r\n    default = 0x00000002,\r\n    editor = 0x00000004,\r\n    model = 0x00000008,\r\n    everything = 0xffffffff,\r\n    nothing = 0x00000000,\r\n    modelbeforeui = 0x00000008,\r\n}\r\n/**\r\n * 渲染器接口 继承自组件接口\r\n */\r\nexport interface Irender extends Icomponent {\r\n    // layer: RenderLayerEnum;\r\n    // queue: number;\r\n    mask: CullingMask;\r\n    // render(): void;\r\n    // materials: Material[];\r\n    // // addToRenderList():void;\r\n    // BeRenderable(): boolean;\r\n    // BeInstantiable(): boolean;\r\n    // bouningSphere: BoundingSphere;\r\n}\r\n\r\nexport class EC {\r\n    private static dic: { [compName: string]: IcompoentConstructor } = {};\r\n    static RegComp = (constructor: Function) => {\r\n        let target = constructor.prototype;\r\n        EC.dic[target.constructor.name] = target.constructor as IcompoentConstructor;\r\n    };\r\n    static NewComponent(compname: string): Icomponent {\r\n        let contr = EC.dic[compname];\r\n        if (contr) {\r\n            return new contr();\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import { Vec4 } from \"./vec4\";\r\nexport const EPSILON = 0.000001;\r\n\r\nexport function clamp(v: number, min: number = 0, max: number = 1): number {\r\n    if (v <= min) return min;\r\n    else if (v >= max) return max;\r\n    else return v;\r\n}\r\n\r\nexport function bePowerOf2(value: number) {\r\n    return (value & (value - 1)) == 0;\r\n}\r\n\r\nexport function lerp(from: number, to: number, lerp: number, out: number) {\r\n    out = (to - from) * lerp + from;\r\n}\r\n\r\nexport function random(min: number = 0, max: number = 1) {\r\n    let bund = max - min;\r\n    return min + bund * Math.random();\r\n}\r\n\r\nexport function numberEqual(a: number, b: number): boolean {\r\n    return a == b;\r\n}\r\nexport function arrayEqual(a: number[] | Float32Array, b: number[] | Float32Array) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] != b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//row：图片行数//column:图片列数//index：第几张图片（index从0开始计数）\r\nexport function spriteAnimation(row: number, column: number, index: number, out: Vec4) {\r\n    var width = 1.0 / column;\r\n    var height = 1.0 / row;\r\n    var offsetx = width * (index % column);\r\n    var offsety = height * row - height * (Math.floor(index / column) + 1);\r\n\r\n    out.x = width;\r\n    out.y = height;\r\n    out.z = offsetx;\r\n    out.w = offsety;\r\n    // var uvOffset=new gd3d.math.vector4(width,height,offsetx,offsety);\r\n    // return  uvOffset;\r\n}\r\n\r\nexport function numberLerp(fromV: number, toV: number, v: number) {\r\n    return fromV * (1 - v) + toV * v;\r\n}\r\n\r\n// export function disposeAllRecyle() {\r\n//     color.disposeRecycledItems();\r\n//     mat2d.disposeRecycledItems();\r\n//     mat3.disposeRecycledItems();\r\n//     mat4.disposeRecycledItems();\r\n//     quat.disposeRecycledItems();\r\n//     vec2.disposeRecycledItems();\r\n//     vec3.disposeRecycledItems();\r\n//     vec4.disposeRecycledItems();\r\n// }\r\n","import { Quat } from \"./quat\";\r\n\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Vec3 extends Float32Array {\r\n    public static readonly UP = Vec3.create(0, 1, 0);\r\n    public static readonly DOWN = Vec3.create(0, -1, 0);\r\n\r\n    public static readonly RIGHT = Vec3.create(1, 0, 0);\r\n    public static readonly LEFT = Vec3.create(-1, 0, 0);\r\n\r\n    public static readonly FORWARD = Vec3.create(0, 0, 1);\r\n    public static readonly BACKWARD = Vec3.create(0, 0, -1);\r\n\r\n    public static readonly ONE = Vec3.create(1, 1, 1);\r\n    public static readonly ZERO = Vec3.create(0, 0, 0);\r\n\r\n    public get x() {\r\n        return this[0];\r\n    }\r\n    public set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n    set z(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    private static Recycle: Vec3[] = [];\r\n    public static create(x: number = 0, y: number = 0, z: number = 0) {\r\n        if (Vec3.Recycle && Vec3.Recycle.length > 0) {\r\n            let item = Vec3.Recycle.pop() as Vec3;\r\n            item[0] = x;\r\n            item[1] = y;\r\n            item[2] = z;\r\n            return item;\r\n        } else {\r\n            // let item=new Float32Array(3);\r\n            // item[0]=x;\r\n            // item[1]=y;\r\n            // item[2]=z;\r\n            let item = new Vec3(x, y, z);\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Vec3): Vec3 {\r\n        if (Vec3.Recycle.length > 0) {\r\n            let item = Vec3.Recycle.pop() as Vec3;\r\n\r\n            Vec3.copy(from, item);\r\n            return item;\r\n        } else {\r\n            //let item=new Float32Array(3);\r\n            let item = new Vec3(from[0], from[1], from[2]);\r\n            // item[0]=from[0];\r\n            // item[1]=from[1];\r\n            // item[2]=from[2];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Vec3) {\r\n        Vec3.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Vec3.Recycle.length = 0;\r\n    }\r\n\r\n    private constructor(x: number = 0, y: number = 0, z: number = 0) {\r\n        super(3);\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = z;\r\n    }\r\n    /**\r\n     * Copy the values from one vec3 to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param src the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(from: Vec3 | number[], out: Vec3): Vec3 {\r\n        out[0] = from[0];\r\n        out[1] = from[1];\r\n        out[2] = from[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static add(lhs: Vec3, rhs: Vec3, out: Vec3): Vec3 {\r\n        out[0] = lhs[0] + rhs[0];\r\n        out[1] = lhs[1] + rhs[1];\r\n        out[2] = lhs[2] + rhs[2];\r\n        return out;\r\n    }\r\n\r\n    public static toZero(a: Vec3) {\r\n        a[0] = a[1] = a[2] = 0;\r\n    }\r\n\r\n    /**\r\n     * Subtracts vector b from vector a\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static subtract(lhs: Vec3, rhs: Vec3, out: Vec3): Vec3 {\r\n        out[0] = lhs[0] - rhs[0];\r\n        out[1] = lhs[1] - rhs[1];\r\n        out[2] = lhs[2] - rhs[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Multiplies two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Vec3, b: Vec3, out: Vec3): Vec3 {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        out[2] = a[2] * b[2];\r\n        return out;\r\n    }\r\n\r\n    public static center(a: Vec3, b: Vec3, out: Vec3) {\r\n        this.add(a, b, out);\r\n        this.scale(out, 0.5, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Divides two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static divide(a: Vec3, b: Vec3, out: Vec3): Vec3 {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        out[2] = a[2] / b[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.ceil the components of a vec3\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a vector to ceil\r\n     * @returns {Vec3} out\r\n     */\r\n    public static ceil(out: Vec3, a: Vec3): Vec3 {\r\n        out[0] = Math.ceil(a[0]);\r\n        out[1] = Math.ceil(a[1]);\r\n        out[2] = Math.ceil(a[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.floor the components of a vec3\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a vector to floor\r\n     * @returns {Vec3} out\r\n     */\r\n    public static floor(out: Vec3, a: Vec3): Vec3 {\r\n        out[0] = Math.floor(a[0]);\r\n        out[1] = Math.floor(a[1]);\r\n        out[2] = Math.floor(a[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum of two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static min(a: Vec3, b: Vec3, out: Vec3): Vec3 {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        out[2] = Math.min(a[2], b[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum of two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static max(out: Vec3, a: Vec3, b: Vec3): Vec3 {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        out[2] = Math.max(a[2], b[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.round the components of a vec3\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a vector to round\r\n     * @returns {Vec3} out\r\n     */\r\n    public static round(out: Vec3, a: Vec3): Vec3 {\r\n        out[0] = Math.round(a[0]);\r\n        out[1] = Math.round(a[1]);\r\n        out[2] = Math.round(a[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a vec3 by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     */\r\n    public static scale(a: Vec3, b: number, out: Vec3): Vec3 {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec3's after scaling the second operand by a scalar value\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @param scale the amount to scale b by before adding\r\n     * @returns out\r\n     */\r\n    public static AddscaledVec(lhs: Vec3, rhs: Vec3, scale: number, out: Vec3): Vec3 {\r\n        out[0] = lhs[0] + rhs[0] * scale;\r\n        out[1] = lhs[1] + rhs[1] * scale;\r\n        out[2] = lhs[2] + rhs[2] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec3's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    public static distance(a: Vec3, b: Vec3): number {\r\n        let x = b[0] - a[0];\r\n        let y = b[1] - a[1];\r\n        let z = b[2] - a[2];\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec3's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    public static squaredDistance(a: Vec3, b: Vec3): number {\r\n        let x = b[0] - a[0];\r\n        let y = b[1] - a[1];\r\n        let z = b[2] - a[2];\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a vec3\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    public static magnitude(a: Vec3): number {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared length of a vec3\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    public static squaredLength(a: Vec3): number {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * Negates the components of a vec3\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to negate\r\n     * @returns out\r\n     */\r\n    public static negate(a: Vec3, out: Vec3): Vec3 {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        out[2] = -a[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of the components of a vec3\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to invert\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Vec3, out: Vec3): Vec3 {\r\n        out[0] = 1.0 / a[0];\r\n        out[1] = 1.0 / a[1];\r\n        out[2] = 1.0 / a[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Normalize a vec3\r\n     *\r\n     * @param out the receiving vector\r\n     * @param src vector to normalize\r\n     * @returns out\r\n     */\r\n    public static normalize(src: Vec3, out: Vec3): Vec3 {\r\n        let x = src[0];\r\n        let y = src[1];\r\n        let z = src[2];\r\n        let len = x * x + y * y + z * z;\r\n        if (len > 0) {\r\n            //TODO: evaluate use of glm_invsqrt here?\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = src[0] * len;\r\n            out[1] = src[1] * len;\r\n            out[2] = src[2] * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two vec3's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     */\r\n    public static dot(a: Vec3, b: Vec3): number {\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n    }\r\n\r\n    /**\r\n     * Computes the cross product of two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static cross(lhs: Vec3, rhs: Vec3, out: Vec3): Vec3 {\r\n        let ax = lhs[0],\r\n            ay = lhs[1],\r\n            az = lhs[2];\r\n        let bx = rhs[0],\r\n            by = rhs[1],\r\n            bz = rhs[2];\r\n\r\n        out[0] = ay * bz - az * by;\r\n        out[1] = az * bx - ax * bz;\r\n        out[2] = ax * by - ay * bx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @param lerp interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static lerp(lhs: Vec3, rhs: Vec3, lerp: number, out: Vec3): Vec3 {\r\n        let ax = lhs[0];\r\n        let ay = lhs[1];\r\n        let az = lhs[2];\r\n        out[0] = ax + lerp * (rhs[0] - ax);\r\n        out[1] = ay + lerp * (rhs[1] - ay);\r\n        out[2] = az + lerp * (rhs[2] - az);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a hermite interpolation with two control points\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a the first operand\r\n     * @param {Vec3} b the second operand\r\n     * @param {Vec3} c the third operand\r\n     * @param {Vec3} d the fourth operand\r\n     * @param {number} t interpolation amount between the two inputs\r\n     * @returns {Vec3} out\r\n     */\r\n    public static hermite(out: Vec3, a: Vec3, b: Vec3, c: Vec3, d: Vec3, t: number): Vec3 {\r\n        let factorTimes2 = t * t;\r\n        let factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n        let factor2 = factorTimes2 * (t - 2) + t;\r\n        let factor3 = factorTimes2 * (t - 1);\r\n        let factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a bezier interpolation with two control points\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a the first operand\r\n     * @param {Vec3} b the second operand\r\n     * @param {Vec3} c the third operand\r\n     * @param {Vec3} d the fourth operand\r\n     * @param {number} t interpolation amount between the two inputs\r\n     * @returns {Vec3} out\r\n     */\r\n    public static bezier(out: Vec3, a: Vec3, b: Vec3, c: Vec3, d: Vec3, t: number): Vec3 {\r\n        let inverseFactor = 1 - t;\r\n        let inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n        let factorTimes2 = t * t;\r\n        let factor1 = inverseFactorTimesTwo * inverseFactor;\r\n        let factor2 = 3 * t * inverseFactorTimesTwo;\r\n        let factor3 = 3 * factorTimes2 * inverseFactor;\r\n        let factor4 = factorTimes2 * t;\r\n\r\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a random vector with the given scale\r\n     *\r\n     * @param out the receiving vector\r\n     * @param [scale] Length of the resulting vector. If omitted, a unit vector will be returned\r\n     * @returns out\r\n     */\r\n    public static random(out: Vec3, scale: number = 1): Vec3 {\r\n        scale = scale || 1.0;\r\n\r\n        let r = Math.random() * 2.0 * Math.PI;\r\n        let z = Math.random() * 2.0 - 1.0;\r\n        let zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n        out[0] = Math.cos(r) * zScale;\r\n        out[1] = Math.sin(r) * zScale;\r\n        out[2] = z * scale;\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Transforms the vec3 with a mat3.\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m the 3x3 matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat3(out: vec3, a: vec3, m: mat3): vec3{\r\n    //     let x = a[0],\r\n    //     y = a[1],\r\n    //     z = a[2];\r\n    // out[0] = x * m[0] + y * m[3] + z * m[6];\r\n    // out[1] = x * m[1] + y * m[4] + z * m[7];\r\n    // out[2] = x * m[2] + y * m[5] + z * m[8];\r\n    // return out;\r\n    // }\r\n\r\n    // /**\r\n    //  * 转到mat4中\r\n    //  * Transforms the vec3 with a mat4.\r\n    //  * 4th vector component is implicitly '1'\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat4(out: vec3, a: vec3, m: mat4): vec3{\r\n    //     let x = a[0],\r\n    //         y = a[1],\r\n    //         z = a[2];\r\n    //     let w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n    //     w = w || 1.0;\r\n    //     out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n    //     out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n    //     out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n    //     return out;\r\n    // }\r\n\r\n    /**\r\n     * Transforms the vec3 with a Quat\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param q Quaternion to transform with\r\n     * @returns out\r\n     */\r\n    public static transformQuat(out: Vec3, a: Vec3, q: Quat): Vec3 {\r\n        // benchmarks: http://jsperf.com/Quaternion-transform-vec3-implementations\r\n\r\n        let x = a[0],\r\n            y = a[1],\r\n            z = a[2];\r\n        let qx = q[0],\r\n            qy = q[1],\r\n            qz = q[2],\r\n            qw = q[3];\r\n\r\n        // calculate Quat * vec\r\n        let ix = qw * x + qy * z - qz * y;\r\n        let iy = qw * y + qz * x - qx * z;\r\n        let iz = qw * z + qx * y - qy * x;\r\n        let iw = -qx * x - qy * y - qz * z;\r\n\r\n        // calculate result * inverse Quat\r\n        out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotate a 3D vector around the x-axis\r\n     * @param out The receiving vec3\r\n     * @param a The vec3 point to rotate\r\n     * @param b The origin of the rotation\r\n     * @param c The angle of rotation\r\n     * @returns out\r\n     */\r\n    public static rotateX(out: Vec3, a: Vec3, b: Vec3, c: number): Vec3 {\r\n        let p = [],\r\n            r = [];\r\n        //Translate point to the origin\r\n        p[0] = a[0] - b[0];\r\n        p[1] = a[1] - b[1];\r\n        p[2] = a[2] - b[2];\r\n\r\n        //perform rotation\r\n        r[0] = p[0];\r\n        r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n        r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n        //translate to correct position\r\n        out[0] = r[0] + b[0];\r\n        out[1] = r[1] + b[1];\r\n        out[2] = r[2] + b[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotate a 3D vector around the y-axis\r\n     * @param out The receiving vec3\r\n     * @param a The vec3 point to rotate\r\n     * @param b The origin of the rotation\r\n     * @param c The angle of rotation\r\n     * @returns out\r\n     */\r\n    public static rotateY(out: Vec3, a: Vec3, b: Vec3, c: number): Vec3 {\r\n        let p = [],\r\n            r = [];\r\n        //Translate point to the origin\r\n        p[0] = a[0] - b[0];\r\n        p[1] = a[1] - b[1];\r\n        p[2] = a[2] - b[2];\r\n\r\n        //perform rotation\r\n        r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n        r[1] = p[1];\r\n        r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n        //translate to correct position\r\n        out[0] = r[0] + b[0];\r\n        out[1] = r[1] + b[1];\r\n        out[2] = r[2] + b[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotate a 3D vector around the z-axis\r\n     * @param out The receiving vec3\r\n     * @param a The vec3 point to rotate\r\n     * @param b The origin of the rotation\r\n     * @param c The angle of rotation\r\n     * @returns out\r\n     */\r\n    public static rotateZ(out: Vec3, a: Vec3, b: Vec3, c: number): Vec3 {\r\n        let p = [],\r\n            r = [];\r\n        //Translate point to the origin\r\n        p[0] = a[0] - b[0];\r\n        p[1] = a[1] - b[1];\r\n        p[2] = a[2] - b[2];\r\n\r\n        //perform rotation\r\n        r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n        r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n        r[2] = p[2];\r\n\r\n        //translate to correct position\r\n        out[0] = r[0] + b[0];\r\n        out[1] = r[1] + b[1];\r\n        out[2] = r[2] + b[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec3s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec3s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @param arg additional argument to pass to fn\r\n    //  * @returns a\r\n    //  * @function\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //                       fn: (a: vec3, b: vec3, arg: any) => void, arg: any): Float32Array;\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec3s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec3s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @returns a\r\n    //  * @function\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //                       fn: (a: vec3, b: vec3) => void): Float32Array;\r\n\r\n    /**\r\n     * Get the angle between two 3D vectors\r\n     * @param a The first operand\r\n     * @param b The second operand\r\n     * @returns The angle in radians\r\n     */\r\n    public static angle(a: Vec3, b: Vec3): number {\r\n        let tempA = Vec3.clone(a);\r\n        let tempB = Vec3.clone(b);\r\n        // let tempA = vec3.fromValues(a[0], a[1], a[2]);\r\n        // let tempB = vec3.fromValues(b[0], b[1], b[2]);\r\n\r\n        Vec3.normalize(tempA, tempA);\r\n        Vec3.normalize(tempB, tempB);\r\n\r\n        let cosine = Vec3.dot(tempA, tempB);\r\n\r\n        if (cosine > 1.0) {\r\n            return 0;\r\n        } else if (cosine < -1.0) {\r\n            return Math.PI;\r\n        } else {\r\n            return Math.acos(cosine);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a vector\r\n     *\r\n     * @param a vector to represent as a string\r\n     * @returns string representation of the vector\r\n     */\r\n    public static str(a: Vec3): string {\r\n        return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Vec3} a The first vector.\r\n     * @param {Vec3} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Vec3, b: Vec3): boolean {\r\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     *\r\n     * @param {Vec3} a The first vector.\r\n     * @param {Vec3} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Vec3, b: Vec3): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2];\r\n        return Math.abs(a0 - b0) <= EPSILON && Math.abs(a1 - b1) <= EPSILON && Math.abs(a2 - b2) <= EPSILON;\r\n    }\r\n}\r\n","import { Vec3 } from \"./vec3\";\r\nimport { Quat } from \"./quat\";\r\nimport { Vec4 } from \"./vec4\";\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Mat4 extends Float32Array {\r\n    private static Recycle: Mat4[] = [];\r\n    public static create() {\r\n        if (Mat4.Recycle && Mat4.Recycle.length > 0) {\r\n            let item = Mat4.Recycle.pop();\r\n            Mat4.identity(item);\r\n            return item;\r\n        } else {\r\n            let item = new Float32Array(16);\r\n            item[0] = 1;\r\n            item[5] = 1;\r\n            item[10] = 1;\r\n            item[15] = 1;\r\n            return item;\r\n        }\r\n    }\r\n\r\n    public static fromArray(array: number[]) {\r\n        if (array.length != 16) return null;\r\n        return new Float32Array(array);\r\n    }\r\n    public static clone(from: Mat4): Mat4 {\r\n        if (Mat4.Recycle.length > 0) {\r\n            let item = Mat4.Recycle.pop();\r\n            Mat4.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let out = new Float32Array(16);\r\n            out[0] = from[0];\r\n            out[1] = from[1];\r\n            out[2] = from[2];\r\n            out[3] = from[3];\r\n            out[4] = from[4];\r\n            out[5] = from[5];\r\n            out[6] = from[6];\r\n            out[7] = from[7];\r\n            out[8] = from[8];\r\n            out[9] = from[9];\r\n            out[10] = from[10];\r\n            out[11] = from[11];\r\n            out[12] = from[12];\r\n            out[13] = from[13];\r\n            out[14] = from[14];\r\n            out[15] = from[15];\r\n            return out;\r\n        }\r\n    }\r\n    public static recycle(item: Mat4) {\r\n        Mat4.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Mat4.Recycle.length = 0;\r\n    }\r\n    // private  constructor()\r\n    // {\r\n    //     super(16);\r\n    //     this[0] = 1;\r\n    //     // this[1] = 0;\r\n    //     // this[2] = 0;\r\n    //     // this[3] = 0;\r\n    //     // this[4] = 0;\r\n    //     this[5] = 1;\r\n    //     // this[6] = 0;\r\n    //     // this[7] = 0;\r\n    //     // this[8] = 0;\r\n    //     // this[9] = 0;\r\n    //     this[10] = 1;\r\n    //     // this[11] = 0;\r\n    //     // this[12] = 0;\r\n    //     // this[13] = 0;\r\n    //     // this[14] = 0;\r\n    //     this[15] = 1;\r\n    // }\r\n\r\n    /**\r\n     * Copy the values from one mat4 to another\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param src the source matrix\r\n     * @returns out\r\n     */\r\n    public static copy(src: Mat4, out: Mat4): Mat4 {\r\n        out[0] = src[0];\r\n        out[1] = src[1];\r\n        out[2] = src[2];\r\n        out[3] = src[3];\r\n        out[4] = src[4];\r\n        out[5] = src[5];\r\n        out[6] = src[6];\r\n        out[7] = src[7];\r\n        out[8] = src[8];\r\n        out[9] = src[9];\r\n        out[10] = src[10];\r\n        out[11] = src[11];\r\n        out[12] = src[12];\r\n        out[13] = src[13];\r\n        out[14] = src[14];\r\n        out[15] = src[15];\r\n        return out;\r\n    }\r\n    static Identity = Mat4.create();\r\n    /**\r\n     * Set a mat4 to the identity matrix\r\n     *\r\n     * @param out the receiving matrix\r\n     * @returns out\r\n     */\r\n    public static identity(out: Mat4): Mat4 {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Transpose the values of a mat4\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the source matrix\r\n     * @returns out\r\n     */\r\n    public static transpose(a: Mat4, out: Mat4): Mat4 {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1],\r\n                a02 = a[2],\r\n                a03 = a[3];\r\n            let a12 = a[6],\r\n                a13 = a[7];\r\n            let a23 = a[11];\r\n\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Inverts a mat4\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the source matrix\r\n     * @returns out\r\n     */\r\n    public static invert(a: Mat4, out: Mat4): Mat4 | null {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the adjugate of a mat4\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the source matrix\r\n     * @returns out\r\n     */\r\n    public static adjoint(a: Mat4, out: Mat4): Mat4 {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n        out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n        out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n        out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n        out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n        out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n        out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n        out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n        out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n        out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n        out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n        out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n        out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n        out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n        out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n        out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the determinant of a mat4\r\n     *\r\n     * @param a the source matrix\r\n     * @returns determinant of a\r\n     */\r\n    public static determinant(a: Mat4): number {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two mat4's\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(lhs: Mat4, rhs: Mat4, out: Mat4): Mat4 {\r\n        let a00 = lhs[0],\r\n            a01 = lhs[1],\r\n            a02 = lhs[2],\r\n            a03 = lhs[3];\r\n        let a10 = lhs[4],\r\n            a11 = lhs[5],\r\n            a12 = lhs[6],\r\n            a13 = lhs[7];\r\n        let a20 = lhs[8],\r\n            a21 = lhs[9],\r\n            a22 = lhs[10],\r\n            a23 = lhs[11];\r\n        let a30 = lhs[12],\r\n            a31 = lhs[13],\r\n            a32 = lhs[14],\r\n            a33 = lhs[15];\r\n\r\n        // Cache only the current line of the second matrix\r\n        let b0 = rhs[0],\r\n            b1 = rhs[1],\r\n            b2 = rhs[2],\r\n            b3 = rhs[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = rhs[4];\r\n        b1 = rhs[5];\r\n        b2 = rhs[6];\r\n        b3 = rhs[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = rhs[8];\r\n        b1 = rhs[9];\r\n        b2 = rhs[10];\r\n        b3 = rhs[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = rhs[12];\r\n        b1 = rhs[13];\r\n        b2 = rhs[14];\r\n        b3 = rhs[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Translate a mat4 by the given vector\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to translate\r\n     * @param v vector to translate by\r\n     * @returns out\r\n     */\r\n    public static translate(a: Mat4, v: Vec3, out: Mat4): Mat4 {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2];\r\n        let a00: number = void 0,\r\n            a01: number = void 0,\r\n            a02: number = void 0,\r\n            a03: number = void 0;\r\n        let a10: number = void 0,\r\n            a11: number = void 0,\r\n            a12: number = void 0,\r\n            a13: number = void 0;\r\n        let a20: number = void 0,\r\n            a21: number = void 0,\r\n            a22: number = void 0,\r\n            a23: number = void 0;\r\n\r\n        if (a === out) {\r\n            out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n            out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n            out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n            out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n        } else {\r\n            a00 = a[0];\r\n            a01 = a[1];\r\n            a02 = a[2];\r\n            a03 = a[3];\r\n            a10 = a[4];\r\n            a11 = a[5];\r\n            a12 = a[6];\r\n            a13 = a[7];\r\n            a20 = a[8];\r\n            a21 = a[9];\r\n            a22 = a[10];\r\n            a23 = a[11];\r\n\r\n            out[0] = a00;\r\n            out[1] = a01;\r\n            out[2] = a02;\r\n            out[3] = a03;\r\n            out[4] = a10;\r\n            out[5] = a11;\r\n            out[6] = a12;\r\n            out[7] = a13;\r\n            out[8] = a20;\r\n            out[9] = a21;\r\n            out[10] = a22;\r\n            out[11] = a23;\r\n\r\n            out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n            out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n            out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n            out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales the mat4 by the dimensions in the given Vec3\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to scale\r\n     * @param v the Vec3 to scale the matrix by\r\n     * @returns out\r\n     **/\r\n    public static scale(a: Mat4, v: Vec3, out: Mat4): Mat4 {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2];\r\n\r\n        out[0] = a[0] * x;\r\n        out[1] = a[1] * x;\r\n        out[2] = a[2] * x;\r\n        out[3] = a[3] * x;\r\n        out[4] = a[4] * y;\r\n        out[5] = a[5] * y;\r\n        out[6] = a[6] * y;\r\n        out[7] = a[7] * y;\r\n        out[8] = a[8] * z;\r\n        out[9] = a[9] * z;\r\n        out[10] = a[10] * z;\r\n        out[11] = a[11] * z;\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a mat4 by the given angle\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @param axis the axis to rotate around\r\n     * @returns out\r\n     */\r\n    public static rotate(a: Mat4, rad: number, axis: Vec3, out: Mat4): Mat4 {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2];\r\n        let len = Math.sqrt(x * x + y * y + z * z);\r\n        let s: number = void 0,\r\n            c: number = void 0,\r\n            t: number = void 0;\r\n        let a00: number = void 0,\r\n            a01: number = void 0,\r\n            a02: number = void 0,\r\n            a03: number = void 0;\r\n        let a10: number = void 0,\r\n            a11: number = void 0,\r\n            a12: number = void 0,\r\n            a13: number = void 0;\r\n        let a20: number = void 0,\r\n            a21: number = void 0,\r\n            a22: number = void 0,\r\n            a23: number = void 0;\r\n        let b00: number = void 0,\r\n            b01: number = void 0,\r\n            b02: number = void 0;\r\n        let b10: number = void 0,\r\n            b11: number = void 0,\r\n            b12: number = void 0;\r\n        let b20: number = void 0,\r\n            b21: number = void 0,\r\n            b22: number = void 0;\r\n\r\n        if (Math.abs(len) < 0.000001) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = a[0];\r\n        a01 = a[1];\r\n        a02 = a[2];\r\n        a03 = a[3];\r\n        a10 = a[4];\r\n        a11 = a[5];\r\n        a12 = a[6];\r\n        a13 = a[7];\r\n        a20 = a[8];\r\n        a21 = a[9];\r\n        a22 = a[10];\r\n        a23 = a[11];\r\n\r\n        // Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c;\r\n        b01 = y * x * t + z * s;\r\n        b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s;\r\n        b11 = y * y * t + c;\r\n        b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s;\r\n        b21 = y * z * t - x * s;\r\n        b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged last row\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the X axis\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @returns out\r\n     */\r\n    public static rotateX(a: Mat4, rad: number, out: Mat4): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n        let a10 = a[4];\r\n        let a11 = a[5];\r\n        let a12 = a[6];\r\n        let a13 = a[7];\r\n        let a20 = a[8];\r\n        let a21 = a[9];\r\n        let a22 = a[10];\r\n        let a23 = a[11];\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged rows\r\n            out[0] = a[0];\r\n            out[1] = a[1];\r\n            out[2] = a[2];\r\n            out[3] = a[3];\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the Y axis\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @returns out\r\n     */\r\n    public static rotateY(a: Mat4, rad: number, out: Mat4): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n        let a00 = a[0];\r\n        let a01 = a[1];\r\n        let a02 = a[2];\r\n        let a03 = a[3];\r\n        let a20 = a[8];\r\n        let a21 = a[9];\r\n        let a22 = a[10];\r\n        let a23 = a[11];\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged rows\r\n            out[4] = a[4];\r\n            out[5] = a[5];\r\n            out[6] = a[6];\r\n            out[7] = a[7];\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the Z axis\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @returns out\r\n     */\r\n    public static rotateZ(a: Mat4, rad: number, out: Mat4): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n        let a00 = a[0];\r\n        let a01 = a[1];\r\n        let a02 = a[2];\r\n        let a03 = a[3];\r\n        let a10 = a[4];\r\n        let a11 = a[5];\r\n        let a12 = a[6];\r\n        let a13 = a[7];\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged last row\r\n            out[8] = a[8];\r\n            out[9] = a[9];\r\n            out[10] = a[10];\r\n            out[11] = a[11];\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.translate(dest, dest, vec);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Vec3} v Translation vector\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromTranslation(v: Vec3, out: Mat4): Mat4 {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = v[0];\r\n        out[13] = v[1];\r\n        out[14] = v[2];\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector scaling\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.scale(dest, dest, vec);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Vec3} v Scaling vector\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromScaling(v: Vec3, out: Mat4): Mat4 {\r\n        out[0] = v[0];\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = v[1];\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = v[2];\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a given angle around a given axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotate(dest, dest, rad, axis);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @param {Vec3} axis the axis to rotate around\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromRotation(rad: number, axis: Vec3, out: Mat4): Mat4 {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2];\r\n        let len = Math.sqrt(x * x + y * y + z * z);\r\n        let s: number = void 0,\r\n            c: number = void 0,\r\n            t: number = void 0;\r\n\r\n        if (Math.abs(len) < 0.000001) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out[0] = x * x * t + c;\r\n        out[1] = y * x * t + z * s;\r\n        out[2] = z * x * t - y * s;\r\n        out[3] = 0;\r\n        out[4] = x * y * t - z * s;\r\n        out[5] = y * y * t + c;\r\n        out[6] = z * y * t + x * s;\r\n        out[7] = 0;\r\n        out[8] = x * z * t + y * s;\r\n        out[9] = y * z * t - x * s;\r\n        out[10] = z * z * t + c;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the X axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotateX(dest, dest, rad);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromXRotation(rad: number, out: Mat4): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = c;\r\n        out[6] = s;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = -s;\r\n        out[10] = c;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the Y axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotateY(dest, dest, rad);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromYRotation(rad: number, out: Mat4): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = c;\r\n        out[1] = 0;\r\n        out[2] = -s;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = s;\r\n        out[9] = 0;\r\n        out[10] = c;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the Z axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotateZ(dest, dest, rad);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromZRotation(rad: number, out: Mat4): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = c;\r\n        out[1] = s;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = -s;\r\n        out[5] = c;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the translation vector component of a transformation\r\n     *  matrix. If a matrix is built with fromRotationTranslation,\r\n     *  the returned vector will be the same as the translation vector\r\n     *  originally supplied.\r\n     * @param  {Vec3} out Vector to receive translation component\r\n     * @param  {Mat4} mat Matrix to be decomposed (input)\r\n     * @return {Vec3} out\r\n     */\r\n    public static getTranslationing(mat: Mat4, out: Vec3): Vec3 {\r\n        out[0] = mat[12];\r\n        out[1] = mat[13];\r\n        out[2] = mat[14];\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the scaling factor component of a transformation matrix.\r\n     * If a matrix is built with fromRotationTranslationScale with a\r\n     * normalized Quaternion parameter, the returned vector will be\r\n     * the same as the scaling vector originally supplied.\r\n     * @param {Vec3} out Vector to receive scaling factor component\r\n     * @param {Mat4} mat Matrix to be decomposed (input)\r\n     * @return {Vec3} out\r\n     */\r\n    public static getScaling(mat: Mat4, out: Vec3): Vec3 {\r\n        let m11 = mat[0];\r\n        let m12 = mat[1];\r\n        let m13 = mat[2];\r\n        let m21 = mat[4];\r\n        let m22 = mat[5];\r\n        let m23 = mat[6];\r\n        let m31 = mat[8];\r\n        let m32 = mat[9];\r\n        let m33 = mat[10];\r\n\r\n        out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n        out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n        out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a Quaternion representing the rotational component\r\n     *  of a transformation matrix. If a matrix is built with\r\n     *  fromRotationTranslation, the returned Quaternion will be the\r\n     *  same as the Quaternion originally supplied.\r\n     * @param {Quat} out Quaternion to receive the rotation component\r\n     * @param {Mat4} mat Matrix to be decomposed (input)\r\n     * @return {Quat} out\r\n     */\r\n    public static getRotation(mat: Mat4, out: Quat): Quat {\r\n        // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n        let trace = mat[0] + mat[5] + mat[10];\r\n        let S = 0;\r\n\r\n        if (trace > 0) {\r\n            S = Math.sqrt(trace + 1.0) * 2;\r\n            out[3] = 0.25 * S;\r\n            out[0] = (mat[6] - mat[9]) / S;\r\n            out[1] = (mat[8] - mat[2]) / S;\r\n            out[2] = (mat[1] - mat[4]) / S;\r\n        } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n            S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n            out[3] = (mat[6] - mat[9]) / S;\r\n            out[0] = 0.25 * S;\r\n            out[1] = (mat[1] + mat[4]) / S;\r\n            out[2] = (mat[8] + mat[2]) / S;\r\n        } else if (mat[5] > mat[10]) {\r\n            S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n            out[3] = (mat[8] - mat[2]) / S;\r\n            out[0] = (mat[1] + mat[4]) / S;\r\n            out[1] = 0.25 * S;\r\n            out[2] = (mat[6] + mat[9]) / S;\r\n        } else {\r\n            S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n            out[3] = (mat[1] - mat[4]) / S;\r\n            out[0] = (mat[8] + mat[2]) / S;\r\n            out[1] = (mat[6] + mat[9]) / S;\r\n            out[2] = 0.25 * S;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a Quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.translate(dest, vec);\r\n     *     mat4.translate(dest, origin);\r\n     *     let QuatMat = mat4.create();\r\n     *     Quat4.toMat4(Quat, QuatMat);\r\n     *     mat4.multiply(dest, QuatMat);\r\n     *     mat4.scale(dest, scale)\r\n     *     mat4.translate(dest, negativeOrigin);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Quat} q Rotation Quaternion\r\n     * @param {Vec3} v Translation vector\r\n     * @param {Vec3} s Scaling vector\r\n     * @param {Vec3} o The origin vector around which to scale and rotate\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromRotationTranslationScaleOrigin(q: Quat, v: Vec3, s: Vec3, o: Vec3, out: Mat4): Mat4 {\r\n        // Quaternion math\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        let sx = s[0];\r\n        let sy = s[1];\r\n        let sz = s[2];\r\n\r\n        let ox = o[0];\r\n        let oy = o[1];\r\n        let oz = o[2];\r\n\r\n        out[0] = (1 - (yy + zz)) * sx;\r\n        out[1] = (xy + wz) * sx;\r\n        out[2] = (xz - wy) * sx;\r\n        out[3] = 0;\r\n        out[4] = (xy - wz) * sy;\r\n        out[5] = (1 - (xx + zz)) * sy;\r\n        out[6] = (yz + wx) * sy;\r\n        out[7] = 0;\r\n        out[8] = (xz + wy) * sz;\r\n        out[9] = (yz - wx) * sz;\r\n        out[10] = (1 - (xx + yy)) * sz;\r\n        out[11] = 0;\r\n        out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\r\n        out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\r\n        out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 4x4 matrix from the given Quaternion\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Quat} q Quaternion to create matrix from\r\n     *\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromQuat(q: Quat, out: Mat4): Mat4 {\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let yx = y * x2;\r\n        let yy = y * y2;\r\n        let zx = z * x2;\r\n        let zy = z * y2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        out[0] = 1 - yy - zz;\r\n        out[1] = yx + wz;\r\n        out[2] = zx - wy;\r\n        out[3] = 0;\r\n\r\n        out[4] = yx - wz;\r\n        out[5] = 1 - xx - zz;\r\n        out[6] = zy + wx;\r\n        out[7] = 0;\r\n\r\n        out[8] = zx + wy;\r\n        out[9] = zy - wx;\r\n        out[10] = 1 - xx - yy;\r\n        out[11] = 0;\r\n\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a frustum matrix with the given bounds\r\n     *\r\n     * @param out mat4 frustum matrix will be written into\r\n     * @param left Left bound of the frustum\r\n     * @param right Right bound of the frustum\r\n     * @param bottom Bottom bound of the frustum\r\n     * @param top Top bound of the frustum\r\n     * @param near Near bound of the frustum\r\n     * @param far Far bound of the frustum\r\n     * @returns out\r\n     */\r\n    public static frustum(\r\n        left: number,\r\n        right: number,\r\n        bottom: number,\r\n        top: number,\r\n        near: number,\r\n        far: number,\r\n        out: Mat4,\r\n    ): Mat4 {\r\n        let rl = 1 / (right - left);\r\n        let tb = 1 / (top - bottom);\r\n        let nf = 1 / (near - far);\r\n        out[0] = near * 2 * rl;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = near * 2 * tb;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = (right + left) * rl;\r\n        out[9] = (top + bottom) * tb;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = far * near * 2 * nf;\r\n        out[15] = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n     *\r\n     * @param out mat4 frustum matrix will be written into\r\n     * @param eye Position of the viewer\r\n     * @param center Point the viewer is looking at\r\n     * @param up Vec3 pointing up\r\n     * @returns out\r\n     */\r\n    public static lookAt(eye: Vec3, center: Vec3, up: Vec3, out: Mat4): Mat4 {\r\n        let x0: number = void 0,\r\n            x1: number = void 0,\r\n            x2: number = void 0,\r\n            y0: number = void 0,\r\n            y1: number = void 0,\r\n            y2: number = void 0,\r\n            z0: number = void 0,\r\n            z1: number = void 0,\r\n            z2: number = void 0,\r\n            len: number = void 0;\r\n        let eyex = eye[0];\r\n        let eyey = eye[1];\r\n        let eyez = eye[2];\r\n        let upx = up[0];\r\n        let upy = up[1];\r\n        let upz = up[2];\r\n        let centerx = center[0];\r\n        let centery = center[1];\r\n        let centerz = center[2];\r\n\r\n        if (\r\n            Math.abs(eyex - centerx) < 0.000001 &&\r\n            Math.abs(eyey - centery) < 0.000001 &&\r\n            Math.abs(eyez - centerz) < 0.000001\r\n        ) {\r\n            return Mat4.identity(out);\r\n        }\r\n\r\n        z0 = eyex - centerx;\r\n        z1 = eyey - centery;\r\n        z2 = eyez - centerz;\r\n\r\n        len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n\r\n        x0 = upy * z2 - upz * z1;\r\n        x1 = upz * z0 - upx * z2;\r\n        x2 = upx * z1 - upy * z0;\r\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n        if (!len) {\r\n            x0 = 0;\r\n            x1 = 0;\r\n            x2 = 0;\r\n        } else {\r\n            len = 1 / len;\r\n            x0 *= len;\r\n            x1 *= len;\r\n            x2 *= len;\r\n        }\r\n\r\n        y0 = z1 * x2 - z2 * x1;\r\n        y1 = z2 * x0 - z0 * x2;\r\n        y2 = z0 * x1 - z1 * x0;\r\n\r\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n        if (!len) {\r\n            y0 = 0;\r\n            y1 = 0;\r\n            y2 = 0;\r\n        } else {\r\n            len = 1 / len;\r\n            y0 *= len;\r\n            y1 *= len;\r\n            y2 *= len;\r\n        }\r\n\r\n        out[0] = x0;\r\n        out[1] = y0;\r\n        out[2] = z0;\r\n        out[3] = 0;\r\n        out[4] = x1;\r\n        out[5] = y1;\r\n        out[6] = z1;\r\n        out[7] = 0;\r\n        out[8] = x2;\r\n        out[9] = y2;\r\n        out[10] = z2;\r\n        out[11] = 0;\r\n        out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n        out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n        out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a matrix that makes something look at something else.\r\n     *\r\n     * @param {Mat4} out mat4 frustum matrix will be written into\r\n     * @param {Vec3} eye Position of the viewer\r\n     * @param {Vec3} center Point the viewer is looking at\r\n     * @param {Vec3} up Vec3 pointing up\r\n     * @returns {Mat4} out\r\n     */\r\n    public static targetTo(eye: Vec3, target: Vec3, up: Vec3, out: Vec4) {\r\n        let eyex = eye[0],\r\n            eyey = eye[1],\r\n            eyez = eye[2],\r\n            upx = up[0],\r\n            upy = up[1],\r\n            upz = up[2];\r\n\r\n        let z0 = eyex - target[0],\r\n            z1 = eyey - target[1],\r\n            z2 = eyez - target[2];\r\n\r\n        let len = z0 * z0 + z1 * z1 + z2 * z2;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            z0 *= len;\r\n            z1 *= len;\r\n            z2 *= len;\r\n        }\r\n\r\n        let x0 = upy * z2 - upz * z1,\r\n            x1 = upz * z0 - upx * z2,\r\n            x2 = upx * z1 - upy * z0;\r\n\r\n        out[0] = x0;\r\n        out[1] = x1;\r\n        out[2] = x2;\r\n        out[3] = 0;\r\n        out[4] = z1 * x2 - z2 * x1;\r\n        out[5] = z2 * x0 - z0 * x2;\r\n        out[6] = z0 * x1 - z1 * x0;\r\n        out[7] = 0;\r\n        out[8] = z0;\r\n        out[9] = z1;\r\n        out[10] = z2;\r\n        out[11] = 0;\r\n        out[12] = eyex;\r\n        out[13] = eyey;\r\n        out[14] = eyez;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a mat4\r\n     *\r\n     * @param mat matrix to represent as a string\r\n     * @returns string representation of the matrix\r\n     */\r\n    public static str(a: Mat4): string {\r\n        return (\r\n            \"mat4(\" +\r\n            a[0] +\r\n            \", \" +\r\n            a[1] +\r\n            \", \" +\r\n            a[2] +\r\n            \", \" +\r\n            a[3] +\r\n            \", \" +\r\n            a[4] +\r\n            \", \" +\r\n            a[5] +\r\n            \", \" +\r\n            a[6] +\r\n            \", \" +\r\n            a[7] +\r\n            \", \" +\r\n            a[8] +\r\n            \", \" +\r\n            a[9] +\r\n            \", \" +\r\n            a[10] +\r\n            \", \" +\r\n            a[11] +\r\n            \", \" +\r\n            a[12] +\r\n            \", \" +\r\n            a[13] +\r\n            \", \" +\r\n            a[14] +\r\n            \", \" +\r\n            a[15] +\r\n            \")\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns Frobenius norm of a mat4\r\n     *\r\n     * @param a the matrix to calculate Frobenius norm of\r\n     * @returns Frobenius norm\r\n     */\r\n    public static frob(a: Mat4): number {\r\n        return Math.sqrt(\r\n            Math.pow(a[0], 2) +\r\n                Math.pow(a[1], 2) +\r\n                Math.pow(a[2], 2) +\r\n                Math.pow(a[3], 2) +\r\n                Math.pow(a[4], 2) +\r\n                Math.pow(a[5], 2) +\r\n                Math.pow(a[6], 2) +\r\n                Math.pow(a[7], 2) +\r\n                Math.pow(a[8], 2) +\r\n                Math.pow(a[9], 2) +\r\n                Math.pow(a[10], 2) +\r\n                Math.pow(a[11], 2) +\r\n                Math.pow(a[12], 2) +\r\n                Math.pow(a[13], 2) +\r\n                Math.pow(a[14], 2) +\r\n                Math.pow(a[15], 2),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds two mat4's\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} a the first operand\r\n     * @param {Mat4} b the second operand\r\n     * @returns {Mat4} out\r\n     */\r\n    public static add(a: Mat4, b: Mat4, out: Mat4): Mat4 {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        out[4] = a[4] + b[4];\r\n        out[5] = a[5] + b[5];\r\n        out[6] = a[6] + b[6];\r\n        out[7] = a[7] + b[7];\r\n        out[8] = a[8] + b[8];\r\n        out[9] = a[9] + b[9];\r\n        out[10] = a[10] + b[10];\r\n        out[11] = a[11] + b[11];\r\n        out[12] = a[12] + b[12];\r\n        out[13] = a[13] + b[13];\r\n        out[14] = a[14] + b[14];\r\n        out[15] = a[15] + b[15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} lhs the first operand\r\n     * @param {Mat4} rhs the second operand\r\n     * @returns {Mat4} out\r\n     */\r\n    public static subtract(lhs: Mat4, rhs: Mat4, out: Mat4): Mat4 {\r\n        out[0] = lhs[0] - rhs[0];\r\n        out[1] = lhs[1] - rhs[1];\r\n        out[2] = lhs[2] - rhs[2];\r\n        out[3] = lhs[3] - rhs[3];\r\n        out[4] = lhs[4] - rhs[4];\r\n        out[5] = lhs[5] - rhs[5];\r\n        out[6] = lhs[6] - rhs[6];\r\n        out[7] = lhs[7] - rhs[7];\r\n        out[8] = lhs[8] - rhs[8];\r\n        out[9] = lhs[9] - rhs[9];\r\n        out[10] = lhs[10] - rhs[10];\r\n        out[11] = lhs[11] - rhs[11];\r\n        out[12] = lhs[12] - rhs[12];\r\n        out[13] = lhs[13] - rhs[13];\r\n        out[14] = lhs[14] - rhs[14];\r\n        out[15] = lhs[15] - rhs[15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} a the first operand\r\n     * @param {Mat4} b the second operand\r\n     * @returns {Mat4} out\r\n     */\r\n    //public static sub(out: mat4, a: mat4, b: mat4): mat4;\r\n\r\n    /**\r\n     * Multiply each element of the matrix by a scalar.\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} a the matrix to scale\r\n     * @param {number} b amount to scale the matrix's elements by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static multiplyScalar(a: Mat4, b: number, out: Mat4): Mat4 {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        out[4] = a[4] * b;\r\n        out[5] = a[5] * b;\r\n        out[6] = a[6] * b;\r\n        out[7] = a[7] * b;\r\n        out[8] = a[8] * b;\r\n        out[9] = a[9] * b;\r\n        out[10] = a[10] * b;\r\n        out[11] = a[11] * b;\r\n        out[12] = a[12] * b;\r\n        out[13] = a[13] * b;\r\n        out[14] = a[14] * b;\r\n        out[15] = a[15] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n     *\r\n     * @param {Mat4} out the receiving vector\r\n     * @param {Mat4} a the first operand\r\n     * @param {Mat4} b the second operand\r\n     * @param {number} scale the amount to scale b's elements by before adding\r\n     * @returns {Mat4} out\r\n     */\r\n    public static multiplyScalarAndAdd(a: Mat4, b: Mat4, scale: number, out: Mat4): Mat4 {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        out[2] = a[2] + b[2] * scale;\r\n        out[3] = a[3] + b[3] * scale;\r\n        out[4] = a[4] + b[4] * scale;\r\n        out[5] = a[5] + b[5] * scale;\r\n        out[6] = a[6] + b[6] * scale;\r\n        out[7] = a[7] + b[7] * scale;\r\n        out[8] = a[8] + b[8] * scale;\r\n        out[9] = a[9] + b[9] * scale;\r\n        out[10] = a[10] + b[10] * scale;\r\n        out[11] = a[11] + b[11] * scale;\r\n        out[12] = a[12] + b[12] * scale;\r\n        out[13] = a[13] + b[13] * scale;\r\n        out[14] = a[14] + b[14] * scale;\r\n        out[15] = a[15] + b[15] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Mat4} a The first matrix.\r\n     * @param {Mat4} b The second matrix.\r\n     * @returns {boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Mat4, b: Mat4): boolean {\r\n        return (\r\n            a[0] === b[0] &&\r\n            a[1] === b[1] &&\r\n            a[2] === b[2] &&\r\n            a[3] === b[3] &&\r\n            a[4] === b[4] &&\r\n            a[5] === b[5] &&\r\n            a[6] === b[6] &&\r\n            a[7] === b[7] &&\r\n            a[8] === b[8] &&\r\n            a[9] === b[9] &&\r\n            a[10] === b[10] &&\r\n            a[11] === b[11] &&\r\n            a[12] === b[12] &&\r\n            a[13] === b[13] &&\r\n            a[14] === b[14] &&\r\n            a[15] === b[15]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have approximately the same elements in the same position.\r\n     *\r\n     * @param {Mat4} a The first matrix.\r\n     * @param {Mat4} b The second matrix.\r\n     * @returns {boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static equals(a: Mat4, b: Mat4): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let a4 = a[4],\r\n            a5 = a[5],\r\n            a6 = a[6],\r\n            a7 = a[7];\r\n        let a8 = a[8],\r\n            a9 = a[9],\r\n            a10 = a[10],\r\n            a11 = a[11];\r\n        let a12 = a[12],\r\n            a13 = a[13],\r\n            a14 = a[14],\r\n            a15 = a[15];\r\n\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        let b4 = b[4],\r\n            b5 = b[5],\r\n            b6 = b[6],\r\n            b7 = b[7];\r\n        let b8 = b[8],\r\n            b9 = b[9],\r\n            b10 = b[10],\r\n            b11 = b[11];\r\n        let b12 = b[12],\r\n            b13 = b[13],\r\n            b14 = b[14],\r\n            b15 = b[15];\r\n\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON &&\r\n            Math.abs(a1 - b1) <= EPSILON &&\r\n            Math.abs(a2 - b2) <= EPSILON &&\r\n            Math.abs(a3 - b3) <= EPSILON &&\r\n            Math.abs(a4 - b4) <= EPSILON &&\r\n            Math.abs(a5 - b5) <= EPSILON &&\r\n            Math.abs(a6 - b6) <= EPSILON &&\r\n            Math.abs(a7 - b7) <= EPSILON &&\r\n            Math.abs(a8 - b8) <= EPSILON &&\r\n            Math.abs(a9 - b9) <= EPSILON &&\r\n            Math.abs(a10 - b10) <= EPSILON &&\r\n            Math.abs(a11 - b11) <= EPSILON &&\r\n            Math.abs(a12 - b12) <= EPSILON &&\r\n            Math.abs(a13 - b13) <= EPSILON &&\r\n            Math.abs(a14 - b14) <= EPSILON &&\r\n            Math.abs(a15 - b15) <= EPSILON\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 变换顶点\r\n     * Transforms the point with a mat4.\r\n     * 4th vector component is implicitly '1'\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    static transformPoint(vector: Vec3, mat: Mat4, out: Vec3): Vec3 {\r\n        let x = vector[0],\r\n            y = vector[1],\r\n            z = vector[2];\r\n        let w = mat[3] * x + mat[7] * y + mat[11] * z + mat[15];\r\n        w = w || 1.0;\r\n        out[0] = (mat[0] * x + mat[4] * y + mat[8] * z + mat[12]) / w;\r\n        out[1] = (mat[1] * x + mat[5] * y + mat[9] * z + mat[13]) / w;\r\n        out[2] = (mat[2] * x + mat[6] * y + mat[10] * z + mat[14]) / w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 变换向量\r\n     * Transforms the Vec3 with a mat4.\r\n     * 4th vector component is implicitly '1'\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    static transformVector3(vector: Vec3, mat: Mat4, out: Vec3): Vec3 {\r\n        let x = vector[0],\r\n            y = vector[1],\r\n            z = vector[2];\r\n        out[0] = mat[0] * x + mat[4] * y + mat[8] * z;\r\n        out[1] = mat[1] * x + mat[5] * y + mat[9] * z;\r\n        out[2] = mat[2] * x + mat[6] * y + mat[10] * z;\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Generates a perspective projection matrix with the given bounds\r\n    //  *\r\n    //  * @param out mat4 frustum matrix will be written into\r\n    //  * @param fovy Vertical field of view in radians\r\n    //  * @param aspect Aspect rat typically viewport width/height\r\n    //  * @param near Near bound of the frustum\r\n    //  * @param far Far bound of the frustum\r\n    //  * @returns out\r\n    //  */\r\n    public static projectPerspectiveLH(fovy: number, aspect: number, near: number, far: number, out: Mat4): Mat4 {\r\n        let f = 1.0 / Math.tan(fovy / 2);\r\n        let nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 2 * far * near * nf;\r\n        out[15] = 0;\r\n        return out;\r\n    }\r\n    /**\r\n     * Generates a perspective projection matrix with the given bounds\r\n     * @param fov 上下夹角\r\n     * @param aspect 左右夹角\r\n     * @param znear 近视点距离\r\n     * @param zfar 远视点距离\r\n     * @returns {Mat4} out\r\n     */\r\n    // static project_PerspectiveLH(fov: number, aspect: number, znear: number, zfar: number, out: mat4)\r\n    // {\r\n    //     let tan = 1.0 / (Math.tan(fov * 0.5));\r\n    //     let nf=zfar / (znear - zfar);\r\n    //     out[0] = tan / aspect;\r\n    //     out[1] = out[2] = out[3] =out[4]=0;\r\n    //     out[5] = tan;\r\n    //     out[6] = out[7] = out[8] = out[9]=0;\r\n    //     out[10] = -nf;\r\n    //     out[11] = 1.0;\r\n    //     out[12] = out[13] = out[15] = 0.0;\r\n    //     out[14] = znear * nf;\r\n    // }\r\n    // /**\r\n    //  * Generates a orthogonal projection matrix with the given bounds\r\n    //  *\r\n    //  * @param out mat4 frustum matrix will be written into\r\n    //  * @param left Left bound of the frustum\r\n    //  * @param right Right bound of the frustum\r\n    //  * @param bottom Bottom bound of the frustum\r\n    //  * @param top Top bound of the frustum\r\n    //  * @param near Near bound of the frustum\r\n    //  * @param far Far bound of the frustum\r\n    //  * @returns out\r\n    //  */\r\n    // public static ortho(out: mat4, left: number, right: number,\r\n    //     bottom: number, top: number, near: number, far: number): mat4{\r\n    //         let lr = 1 / (left - right);\r\n    //         let bt = 1 / (bottom - top);\r\n    //         let nf = 1 / (near - far);\r\n    //         out[0] = -2 * lr;\r\n    //         out[1] = 0;\r\n    //         out[2] = 0;\r\n    //         out[3] = 0;\r\n    //         out[4] = 0;\r\n    //         out[5] = -2 * bt;\r\n    //         out[6] = 0;\r\n    //         out[7] = 0;\r\n    //         out[8] = 0;\r\n    //         out[9] = 0;\r\n    //         out[10] = 2 * nf;\r\n    //         out[11] = 0;\r\n    //         out[12] = (left + right) * lr;\r\n    //         out[13] = (top + bottom) * bt;\r\n    //         out[14] = (far + near) * nf;\r\n    //         out[15] = 1;\r\n    //         return out;\r\n    //       }\r\n    public static projectOrthoLH(width: number, height: number, near: number, far: number, out: Mat4): Mat4 {\r\n        let lr = -1 / width;\r\n        let bt = -1 / height;\r\n        let nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n    /**\r\n     * Generates a orthogonal projection matrix with the given bounds\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param znear 近视点\r\n     * @param zfar 远视点\r\n     * @param out\r\n     */\r\n    // static project_OrthoLH(width: number, height: number, znear: number, zfar: number, out: mat4)\r\n    // {\r\n    //     let hw = 2.0 / width;\r\n    //     let hh = 2.0 / height;\r\n    //     let id = 1.0 / (zfar - znear);\r\n    //     let nid = znear / (znear - zfar);\r\n    //     out[0]=hw;\r\n    //     out[5]=hh;\r\n    //     out[10]=id;\r\n    //     out[11]=nid;\r\n    //     out[15]=1;\r\n    //     out[1]=out[2]=out[3]=out[4]=out[6]=out[7]=out[8]=out[8]=out[12]=out[13]=out[14]=0;\r\n    // }\r\n\r\n    /** ----------copy glmatrix\r\n     * Creates a matrix from a Quaternion rotation, vector translation and vector scale\r\n     *  This is equivalent to (but much faster than):\r\n     * mat4.identity(dest);\r\n     * mat4.translate(dest, vec);\r\n     * let QuatMat = mat4.create();\r\n     * Quat4.toMat4(Quat, QuatMat);\r\n     * mat4.multiply(dest, QuatMat);\r\n     * mat4.scale(dest, scale)\r\n     *\r\n     * @param pos Translation vector\r\n     * @param scale Scaling vector\r\n     * @param rot Rotation Quaternion\r\n     * @param out\r\n     */\r\n    static RTS(pos: Vec3, scale: Vec3, rot: Quat, out: Mat4): Mat4 {\r\n        let x = rot[0],\r\n            y = rot[1],\r\n            z = rot[2],\r\n            w = rot[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n        let sx = scale[0];\r\n        let sy = scale[1];\r\n        let sz = scale[2];\r\n\r\n        out[0] = (1 - (yy + zz)) * sx;\r\n        out[1] = (xy + wz) * sx;\r\n        out[2] = (xz - wy) * sx;\r\n        out[3] = 0;\r\n        out[4] = (xy - wz) * sy;\r\n        out[5] = (1 - (xx + zz)) * sy;\r\n        out[6] = (yz + wx) * sy;\r\n        out[7] = 0;\r\n        out[8] = (xz + wy) * sz;\r\n        out[9] = (yz - wx) * sz;\r\n        out[10] = (1 - (xx + yy)) * sz;\r\n        out[11] = 0;\r\n        out[12] = pos[0];\r\n        out[13] = pos[1];\r\n        out[14] = pos[2];\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n    /**----copy glmatrix\r\n     * Creates a matrix from a Quaternion rotation and vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.translate(dest, vec);\r\n     *     let QuatMat = mat4.create();\r\n     *     Quat4.toMat4(Quat, QuatMat);\r\n     *     mat4.multiply(dest, QuatMat);\r\n     *\r\n     * @param out mat4 receiving operation result\r\n     * @param q Rotation Quaternion\r\n     * @param v Translation vector\r\n     * @returns out\r\n     */\r\n    public static RT(q: Quat, v: Vec3, out: Mat4): Mat4 {\r\n        // Quaternion math\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        out[0] = 1 - (yy + zz);\r\n        out[1] = xy + wz;\r\n        out[2] = xz - wy;\r\n        out[3] = 0;\r\n        out[4] = xy - wz;\r\n        out[5] = 1 - (xx + zz);\r\n        out[6] = yz + wx;\r\n        out[7] = 0;\r\n        out[8] = xz + wy;\r\n        out[9] = yz - wx;\r\n        out[10] = 1 - (xx + yy);\r\n        out[11] = 0;\r\n        out[12] = v[0];\r\n        out[13] = v[1];\r\n        out[14] = v[2];\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n    /**use glmatrix separate function\r\n     * Returns the translation、scale、rotation  component  of a transformation\r\n     *\r\n     * @param src\r\n     * @param scale\r\n     * @param rotation\r\n     * @param translation\r\n     */\r\n    static decompose(src: Mat4, scale: Vec3, rotation: Quat, translation: Vec3) {\r\n        Mat4.getTranslationing(src, translation);\r\n        Mat4.getScaling(src, scale);\r\n        Mat4.getRotationing(src, rotation, scale);\r\n    }\r\n\r\n    /**\r\n     * get normalize Quaternion with the given rotation matrix values\r\n     * @param matrix defines the source matrix\r\n     * @param result defines the target Quaternion\r\n     */\r\n    public static getRotationing(matrix: Mat4, result: Quat, scale: Vec3 = null) {\r\n        let scalex = 1,\r\n            scaley = 1,\r\n            scalez = 1;\r\n        if (scale == null) {\r\n            scalex = Math.sqrt(matrix[0] * matrix[0] + matrix[1] * matrix[1] + matrix[2] * matrix[2]);\r\n            scaley = Math.sqrt(matrix[4] * matrix[4] + matrix[5] * matrix[5] + matrix[6] * matrix[6]);\r\n            scalez = Math.sqrt(matrix[8] * matrix[8] + matrix[9] * matrix[9] + matrix[10] * matrix[10]);\r\n        } else {\r\n            scalex = scale[0];\r\n            scaley = scale[1];\r\n            scalez = scale[2];\r\n        }\r\n        if (scale.x === 0 || scale.y === 0 || scale.z === 0) {\r\n            result[0] = 0;\r\n            result[1] = 0;\r\n            result[2] = 0;\r\n            result[3] = 1;\r\n            return;\r\n        }\r\n        // var data = matrix.m;\r\n        let m11 = matrix[0] / scalex,\r\n            m12 = matrix[4] / scaley,\r\n            m13 = matrix[8] / scalez;\r\n        let m21 = matrix[1] / scalex,\r\n            m22 = matrix[5] / scaley,\r\n            m23 = matrix[9] / scalez;\r\n        let m31 = matrix[2] / scalex,\r\n            m32 = matrix[6] / scaley,\r\n            m33 = matrix[10] / scalez;\r\n        let trace = m11 + m22 + m33;\r\n        let s;\r\n\r\n        if (trace > 0) {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n            result[3] = 0.25 / s;\r\n            result[0] = (m32 - m23) * s;\r\n            result[1] = (m13 - m31) * s;\r\n            result[2] = (m21 - m12) * s;\r\n        } else if (m11 > m22 && m11 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\r\n            result[3] = (m32 - m23) / s;\r\n            result[0] = 0.25 * s;\r\n            result[1] = (m12 + m21) / s;\r\n            result[2] = (m13 + m31) / s;\r\n        } else if (m22 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\r\n            result[3] = (m13 - m31) / s;\r\n            result[0] = (m12 + m21) / s;\r\n            result[1] = 0.25 * s;\r\n            result[2] = (m23 + m32) / s;\r\n        } else {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\r\n            result[3] = (m21 - m12) / s;\r\n            result[0] = (m13 + m31) / s;\r\n            result[1] = (m23 + m32) / s;\r\n            result[2] = 0.25 * s;\r\n        }\r\n    }\r\n}\r\n","import { RenderLayerEnum } from \"../ec/ec\";\r\nimport { Camera } from \"../ec/components/camera\";\r\nimport { Vec3 } from \"../mathD/vec3\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { Irenderable } from \"../scene/frameState\";\r\n\r\n/**\r\n * @private\r\n */\r\nexport class RenderList {\r\n    private layerLists: { [layer: number]: RenderContainer } = {};\r\n    constructor(camera: Camera) {\r\n        this.layerLists[RenderLayerEnum.Background] = new RenderContainer(\"Background\");\r\n        this.layerLists[RenderLayerEnum.Geometry] = new RenderContainer(\"Geometry\");\r\n        this.layerLists[RenderLayerEnum.AlphaTest] = new RenderContainer(\"AlphaTest\");\r\n        this.layerLists[RenderLayerEnum.Transparent] = new RenderContainer(\"Transparent\", (arr: Irenderable[]) => {\r\n            arr.sort((a, b) => {\r\n                let aRenderQueue = a.material.layer + a.material.queue;\r\n                let bRenderQueue = b.material.layer + b.material.queue;\r\n                if (aRenderQueue != bRenderQueue) {\r\n                    return aRenderQueue - bRenderQueue;\r\n                } else {\r\n                    let viewmat = camera.ViewMatrix;\r\n                    let aWorldPos = Mat4.getTranslationing(a.modelMatrix, Vec3.create());\r\n                    let bWorldPos = Mat4.getTranslationing(b.modelMatrix, Vec3.create());\r\n\r\n                    let aView = Mat4.transformPoint(aWorldPos, viewmat, Vec3.create());\r\n                    let bView = Mat4.transformPoint(bWorldPos, viewmat, Vec3.create());\r\n                    let out = aView[2] - bView[2];\r\n\r\n                    Vec3.recycle(aWorldPos);\r\n                    Vec3.recycle(bWorldPos);\r\n                    Vec3.recycle(aView);\r\n                    Vec3.recycle(bView);\r\n                    return out;\r\n                }\r\n            });\r\n            return arr;\r\n        });\r\n        this.layerLists[RenderLayerEnum.Overlay] = new RenderContainer(\"Overlay\");\r\n    }\r\n    clear() {\r\n        for (let key in this.layerLists) {\r\n            this.layerLists[key].clear();\r\n        }\r\n    }\r\n    addRenderer(renderer: Irenderable) {\r\n        this.layerLists[renderer.material.layer].addRender(renderer);\r\n    }\r\n\r\n    sort() {\r\n        for (const key in this.layerLists) {\r\n            this.layerLists[key].sort();\r\n        }\r\n        return this;\r\n    }\r\n    foreach(func: (value: Irenderable) => void) {\r\n        this.layerLists[RenderLayerEnum.Background].foreach(func);\r\n        this.layerLists[RenderLayerEnum.Geometry].foreach(func);\r\n        this.layerLists[RenderLayerEnum.AlphaTest].foreach(func);\r\n        this.layerLists[RenderLayerEnum.Transparent].foreach(func);\r\n        this.layerLists[RenderLayerEnum.Overlay].foreach(func);\r\n    }\r\n}\r\n\r\nexport class RenderContainer {\r\n    private layer: string;\r\n\r\n    private renderArr: Irenderable[] = [];\r\n\r\n    addRender(render: Irenderable) {\r\n        this.renderArr.push(render);\r\n    }\r\n\r\n    constructor(layerType: string, queueSortFunc: (arr: Irenderable[]) => Irenderable[] = null) {\r\n        this.layer = layerType;\r\n        this._queueSortFunc = queueSortFunc || RenderContainer.defaultSortFunc;\r\n    }\r\n    private _queueSortFunc: (arr: Irenderable[]) => Irenderable[];\r\n\r\n    sort() {\r\n        this.renderArr = this._queueSortFunc(this.renderArr);\r\n        return this;\r\n    }\r\n    foreach(fuc: (value: Irenderable) => void) {\r\n        for (let i = 0; i < this.renderArr.length; i++) {\r\n            fuc(this.renderArr[i]);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.renderArr.length = 0;\r\n    }\r\n\r\n    private static defaultSortFunc = (arr: Irenderable[]) => {\r\n        arr.sort((a, b) => {\r\n            let aRenderQueue = a.material.layer + a.material.queue;\r\n            let bRenderQueue = b.material.layer + b.material.queue;\r\n            if (aRenderQueue != bRenderQueue) {\r\n                return aRenderQueue - bRenderQueue;\r\n            } else {\r\n                return a.material.guid - b.material.guid;\r\n            }\r\n        });\r\n        return arr;\r\n    };\r\n}\r\n\r\n/**\r\n * 按照Geometry-》AlphaTest-》Background-》Transparent-》Overlay的顺序进行渲染\r\n * 非透明物体/透明物体都要按照queue排序\r\n * 非透明物体暂时没发现需要按照距离排序（近到远）\r\n * 透明物体按照距离排序（远到近）\r\n */\r\n","export class Rect extends Float32Array {\r\n    get x() {\r\n        return this[0];\r\n    }\r\n    set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n    set z(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    get width() {\r\n        return this[2];\r\n    }\r\n\r\n    get height() {\r\n        return this[3];\r\n    }\r\n    get w() {\r\n        return this[3];\r\n    }\r\n    set w(value: number) {\r\n        this[3] = value;\r\n    }\r\n\r\n    constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n        super(4);\r\n\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = w;\r\n        this[3] = h;\r\n    }\r\n\r\n    private static Recycle: Rect[] = [];\r\n    public static create(x: number = 0, y: number = 0, w: number = 0, h: number = 0): Rect {\r\n        if (Rect.Recycle && Rect.Recycle.length > 0) {\r\n            let item = Rect.Recycle.pop();\r\n            item[0] = x;\r\n            item[1] = y;\r\n            item[2] = w;\r\n            item[3] = h;\r\n            return item;\r\n        } else {\r\n            let item = new Rect(x, y, w, h);\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Rect): Rect {\r\n        if (Rect.Recycle.length > 0) {\r\n            let item = Rect.Recycle.pop();\r\n            Rect.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Rect(from[0], from[1], from[2], from[3]);\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Rect) {\r\n        Rect.Recycle.push(item);\r\n    }\r\n\r\n    public static disposeRecycledItems() {\r\n        Rect.Recycle.length = 0;\r\n    }\r\n\r\n    public static copy(a: Rect, out: Rect): Rect {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    public static euqal(a: Rect, b: Rect): boolean {\r\n        if (a[0] != b[0]) return false;\r\n        if (a[1] != b[1]) return false;\r\n        if (a[2] != b[2]) return false;\r\n        if (a[3] != b[3]) return false;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function rectSetOne(out: Rect) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 1;\r\n    out[3] = 1;\r\n}\r\n\r\nexport function rectSetZero(out: Rect) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n}\r\n\r\nexport function rectEqul(src1: Rect, src2: Rect): boolean {\r\n    return !(src1[0] != src2[0] || src1[1] != src2[1] || src1[2] != src2[2] || src1[3] != src2[3]);\r\n}\r\n\r\nexport function rectInner(x: number, y: number, src: Rect): boolean {\r\n    if (x < src[0] || x > src[0] + src[2] || y < src[1] || y > src[1] + src[3]) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import { clamp, EPSILON } from \"./common\";\r\n\r\nexport class Color extends Float32Array {\r\n    static readonly WHITE: Color = new Color(1, 1, 1, 1);\r\n\r\n    get r() {\r\n        return this[0];\r\n    }\r\n    set r(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get g() {\r\n        return this[1];\r\n    }\r\n    set g(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get b() {\r\n        return this[2];\r\n    }\r\n    set b(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    get a() {\r\n        return this[3];\r\n    }\r\n    set a(value: number) {\r\n        this[3] = value;\r\n    }\r\n    private static Recycle: Color[] = [];\r\n    public static create(r: number = 1, g: number = 1, b: number = 1, a: number = 1): Color {\r\n        if (Color.Recycle && Color.Recycle.length > 0) {\r\n            let item = Color.Recycle.pop() as Color;\r\n            item[0] = r;\r\n            item[1] = g;\r\n            item[2] = b;\r\n            item[3] = a;\r\n            return item;\r\n        } else {\r\n            let item = new Color(r, g, b, a);\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Color): Color {\r\n        if (Color.Recycle.length > 0) {\r\n            let item = Color.Recycle.pop() as Color;\r\n            Color.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Color(from[0], from[1], from[2], from[3]);\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Color) {\r\n        Color.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Color.Recycle.length = 0;\r\n    }\r\n    private constructor(r: number = 1, g: number, b: number = 1, a: number = 1) {\r\n        super(4);\r\n        this[0] = r;\r\n        this[1] = g;\r\n        this[2] = b;\r\n        this[3] = a;\r\n    }\r\n    static setWhite(out: Color): Color {\r\n        out[0] = 1;\r\n        out[1] = 1;\r\n        out[2] = 1;\r\n        out[3] = 1;\r\n        return out;\r\n    }\r\n    static setBlack(out: Color) {\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 1;\r\n    }\r\n    static setGray(out: Color) {\r\n        out[0] = 0.5;\r\n        out[1] = 0.5;\r\n        out[2] = 0.5;\r\n        out[3] = 1;\r\n    }\r\n\r\n    static multiply(srca: Color, srcb: Color, out: Color) {\r\n        out[0] = srca[0] * srcb[0];\r\n        out[1] = srca[1] * srcb[1];\r\n        out[2] = srca[2] * srcb[2];\r\n        out[3] = srca[3] * srcb[3];\r\n    }\r\n\r\n    static scaleToRef(src: Color, scale: number, out: Color) {\r\n        out[0] = src[0] * scale;\r\n        out[1] = src[1] * scale;\r\n        out[2] = src[2] * scale;\r\n        out[3] = src[3] * scale;\r\n    }\r\n\r\n    static lerp(srca: Color, srcb: Color, t: number, out: Color) {\r\n        t = clamp(t);\r\n        out[0] = t * (srcb[0] - srca[0]) + srca[0];\r\n        out[1] = t * (srcb[1] - srca[1]) + srca[1];\r\n        out[2] = t * (srcb[2] - srca[2]) + srca[2];\r\n        out[3] = t * (srcb[3] - srca[3]) + srca[3];\r\n    }\r\n    /**\r\n     * Copy the values from one color to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(a: Color, out: Color): Color {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same color.\r\n     *\r\n     * @param {vec4} a The first vector.\r\n     * @param {vec4} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Color, b: Color): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3))\r\n        );\r\n    }\r\n}\r\n","/**\r\n *\r\n * (0,0)-----|\r\n * |         |\r\n * |         |\r\n * |------(w,h)\r\n *\r\n */\r\nexport class GameScreen {\r\n    /**\r\n     * 绘制区域宽/高度 像素单位\r\n     */\r\n    private static canvaswidth: number;\r\n    private static canvasheight: number;\r\n    private static apset: number;\r\n\r\n    /**\r\n     * 屏幕(canvas)高度\r\n     */\r\n    static get Height() {\r\n        return GameScreen.canvasheight;\r\n    }\r\n    /**\r\n     * 屏幕(canvas)宽度\r\n     */\r\n    static get Width() {\r\n        return GameScreen.canvaswidth;\r\n    }\r\n\r\n    private static _windowWidth: number;\r\n    private static _windowHeight: number;\r\n\r\n    /**\r\n     * 窗口宽度,一般用于html\r\n     */\r\n    static get windowWidth() {\r\n        return this._windowWidth;\r\n    }\r\n    /**\r\n     * 窗口高度,一般用于html\r\n     */\r\n    static get windowHeight() {\r\n        return this._windowHeight;\r\n    }\r\n    /**\r\n     * width/height\r\n     */\r\n    static get aspect() {\r\n        return this.apset;\r\n    }\r\n    //#region canvas resize\r\n    private static scale: number = 1;\r\n    /**\r\n     * 修改canvas 缩放\r\n     * 可提升画面效果，消除闪烁(最好用mipmap解决)\r\n     * @param scale\r\n     */\r\n    static SetCanvasSize(scale: number) {\r\n        GameScreen.scale = scale;\r\n        this.OnResizeCanvas();\r\n    }\r\n\r\n    private static canvas: HTMLCanvasElement;\r\n    // static divcontiner: HTMLDivElement;\r\n    static init(canvas: HTMLCanvasElement) {\r\n        this.canvas = canvas;\r\n        this.OnResizeCanvas();\r\n        // window.onresize = () => {\r\n        //     this.OnResizeCanvas();\r\n        // };\r\n\r\n        // let divcontiner = document.createElement(\"div\");\r\n        // divcontiner.className = \"divContiner\";\r\n        // divcontiner.style.overflow = \"hidden\";\r\n        // divcontiner.style.left = \"0px\";\r\n        // divcontiner.style.top = \"0px\";\r\n        // canvas.parentElement.appendChild(divcontiner);\r\n        // this.divcontiner = divcontiner;\r\n    }\r\n    private static OnResizeCanvas() {\r\n        console.warn(\"canvas resize!\");\r\n        // this._windowWidth = window.innerWidth;\r\n        // this._windowHeight = window.innerHeight;\r\n        this._windowWidth = this.canvas.clientWidth;\r\n        this._windowHeight = this.canvas.clientHeight;\r\n\r\n        let pixelRatio = window.devicePixelRatio || 1;\r\n        this.canvaswidth = pixelRatio * this.scale * this._windowWidth;\r\n        this.canvasheight = pixelRatio * this.scale * this._windowHeight;\r\n\r\n        this.canvas.width = this.canvaswidth;\r\n        this.canvas.height = this.canvasheight;\r\n\r\n        this.apset = this.canvaswidth / this.canvasheight;\r\n        for (let i = 0; i < this.resizeListenerArr.length; i++) {\r\n            let fuc = this.resizeListenerArr[i];\r\n            fuc();\r\n        }\r\n    }\r\n    private static resizeListenerArr: Function[] = [];\r\n    static addListenertoCanvasResize(fuc: () => void) {\r\n        this.resizeListenerArr.push(fuc);\r\n    }\r\n\r\n    // static windowToCanvas(windowx:number,windowy:number,screenPos:MathD.vec2)\r\n    // {\r\n    //     let bbox = this.canvas.getBoundingClientRect();\r\n    //     screenPos.x=windowx- bbox.left - (bbox.width - this.canvas.width) / 2;\r\n    //     screenPos.y=windowy- bbox.top - (bbox.height - this.canvas.height) / 2;\r\n    // }\r\n}\r\n","import { Icomponent, Ientity, CullingMask, EC } from \"../ec\";\r\nimport { Rect } from \"../../mathD/rect\";\r\nimport { Color } from \"../../mathD/color\";\r\nimport { IframeState } from \"../../scene/frameState\";\r\nimport { Mat4 } from \"../../mathD/mat4\";\r\nimport { Transform } from \"./transform\";\r\nimport { GameScreen } from \"../../gameScreen\";\r\n\r\nexport enum ProjectionEnum {\r\n    PERSPECTIVE,\r\n    ORTHOGRAPH,\r\n}\r\n\r\nexport enum ClearEnum {\r\n    COLOR = 0b001,\r\n    DEPTH = 0b010,\r\n    STENCIL = 0b100,\r\n}\r\n\r\n@EC.RegComp\r\nexport class Camera implements Icomponent {\r\n    entity: Ientity;\r\n    projectionType: ProjectionEnum = ProjectionEnum.ORTHOGRAPH;\r\n    //perspective 透视投影\r\n    fov: number = Math.PI * 0.25; //透视投影的fov//verticle field of view\r\n\r\n    /**\r\n     * height\r\n     */\r\n    size: number = 2;\r\n\r\n    private _near: number = 0.01;\r\n    get near(): number {\r\n        return this._near;\r\n    }\r\n    set near(val: number) {\r\n        if (this.projectionType == ProjectionEnum.PERSPECTIVE && val < 0.01) {\r\n            val = 0.01;\r\n        }\r\n        if (val >= this.far) val = this.far - 0.01;\r\n        this._near = val;\r\n    }\r\n    private _far: number = 1000;\r\n    get far(): number {\r\n        return this._far;\r\n    }\r\n    set far(val: number) {\r\n        if (val <= this.near) val = this.near + 0.01;\r\n        this._far = val;\r\n    }\r\n    viewport: Rect = Rect.create(0, 0, 1, 1);\r\n    clearFlag: ClearEnum = ClearEnum.COLOR | ClearEnum.DEPTH;\r\n    backgroundColor: Color = Color.create(0.3, 0.3, 0.3, 1);\r\n    dePthValue: number = 1.0;\r\n    stencilValue: number = 0;\r\n\r\n    priority: number = 0;\r\n    cullingMask: CullingMask = CullingMask.default;\r\n    update(frameState: IframeState): void {\r\n        frameState.cameraList.push(this);\r\n        this.restToDirty();\r\n    }\r\n\r\n    private _viewMatrix: Mat4 = Mat4.create();\r\n    get ViewMatrix(): Mat4 {\r\n        if (this.needComputeViewMat) {\r\n            let camworld = (this.entity.getCompByName(\"Transform\") as Transform).worldMatrix;\r\n            //视矩阵刚好是摄像机世界矩阵的逆\r\n            Mat4.invert(camworld, this._viewMatrix);\r\n            this.needComputeViewMat = false;\r\n        }\r\n        return this._viewMatrix;\r\n    }\r\n    /**\r\n     * 计算相机投影矩阵\r\n     */\r\n    private _Projectmatrix: Mat4 = Mat4.create();\r\n    get ProjectMatrix(): Mat4 {\r\n        if (this.needcomputeProjectMat) {\r\n            if (this.projectionType == ProjectionEnum.PERSPECTIVE) {\r\n                Mat4.projectPerspectiveLH(this.fov, GameScreen.aspect, this.near, this.far, this._Projectmatrix);\r\n            } else {\r\n                Mat4.projectOrthoLH(this.size * GameScreen.aspect, this.size, this.near, this.far, this._Projectmatrix);\r\n            }\r\n            this.needcomputeProjectMat = false;\r\n        }\r\n        return this._Projectmatrix;\r\n    }\r\n    // private ohMat:Mat4=Mat4.create();\r\n    // getOrthoLH_ProjectMatrix():Mat4\r\n    // {\r\n    //     Mat4.project_OrthoLH(this.PixelHeight * GameScreen.aspect, this.PixelHeight, this.near, this.far, this.ohMat);\r\n    //     return this.ohMat;\r\n    // }\r\n    private _viewProjectMatrix: Mat4 = Mat4.create();\r\n    get ViewProjectMatrix(): Mat4 {\r\n        if (this.needcomputeViewProjectMat) {\r\n            Mat4.multiply(this.ProjectMatrix, this.ViewMatrix, this._viewProjectMatrix);\r\n            this.needcomputeViewProjectMat = false;\r\n        }\r\n        return this._viewProjectMatrix;\r\n    }\r\n\r\n    private restToDirty() {\r\n        this.needComputeViewMat = true;\r\n        this.needcomputeProjectMat = true;\r\n        this.needcomputeViewProjectMat = true;\r\n    }\r\n    private needComputeViewMat: boolean = true;\r\n    private needcomputeProjectMat: boolean = true;\r\n    private needcomputeViewProjectMat: boolean = true;\r\n\r\n    dispose(): void {}\r\n}\r\n","import { Rect } from \"../mathD/rect\";\r\nimport { Texture } from \"../resources/assets/texture\";\r\nimport { Camera } from \"../ec/components/camera\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { Irenderable } from \"../scene/frameState\";\r\n\r\nexport class RenderContext {\r\n    activeTexCount: number = 0;\r\n\r\n    viewPortPixel: Rect = new Rect(0, 0, 0, 0); //像素的viewport\r\n    // campos: vec3;\r\n\r\n    get matrixModel(): Mat4 {\r\n        return this.curRender.modelMatrix;\r\n    }\r\n    private _matrixNormalToworld: Mat4 = Mat4.create();\r\n    get matrixNormalToworld(): Mat4 {\r\n        Mat4.invert(this.matrixModel, this._matrixNormalToworld);\r\n        Mat4.transpose(this._matrixNormalToworld, this._matrixNormalToworld);\r\n        return this._matrixNormalToworld;\r\n    }\r\n    private _matrixMV: Mat4 = Mat4.create();\r\n    get matrixModelView(): Mat4 {\r\n        return Mat4.multiply(this.curCamera.ViewProjectMatrix, this.matrixModel, this._matrixMV);\r\n    }\r\n    private _matMVP: Mat4 = Mat4.create();\r\n    get matrixModelViewProject(): Mat4 {\r\n        return Mat4.multiply(this.curCamera.ViewProjectMatrix, this.matrixModel, this._matMVP);\r\n    }\r\n\r\n    get matrixView(): Mat4 {\r\n        return this.curCamera.ViewMatrix;\r\n    }\r\n\r\n    get matrixProject(): Mat4 {\r\n        return this.curCamera.ProjectMatrix;\r\n    }\r\n    get matrixViewProject(): Mat4 {\r\n        return this.curCamera.ViewProjectMatrix;\r\n    }\r\n    //matrixNormal: matrix = new matrix();\r\n    //最多8灯，再多不管\r\n    intLightCount: number = 0;\r\n    vec4LightPos: Float32Array = new Float32Array(32);\r\n    vec4LightDir: Float32Array = new Float32Array(32);\r\n    floatLightSpotAngleCos: Float32Array = new Float32Array(8);\r\n\r\n    lightmap: Texture[] = null;\r\n    // lightmapUV: number = 1;\r\n    // lightmapOffset: vec4 = vec4.create(1, 1, 0, 0);\r\n    curRender: Irenderable;\r\n    curCamera: Camera;\r\n}\r\n","import { RenderContext } from \"./renderContext\";\r\n\r\nexport class AutoUniform {\r\n    private uniformDic: { [name: string]: () => any } = {};\r\n    private renderContext: RenderContext;\r\n    constructor(renderContext: RenderContext) {\r\n        this.renderContext = renderContext;\r\n        this.init();\r\n    }\r\n    private init() {\r\n        this.uniformDic[\"u_mat_model\"] = () => {\r\n            return this.renderContext.matrixModel;\r\n        };\r\n        this.uniformDic[\"u_mat_view\"] = () => {\r\n            return this.renderContext.matrixView;\r\n        };\r\n        this.uniformDic[\"u_mat_project\"] = () => {\r\n            return this.renderContext.matrixProject;\r\n        };\r\n        this.uniformDic[\"u_mat_ModelView\"] = () => {\r\n            return this.renderContext.matrixModelView;\r\n        };\r\n        this.uniformDic[\"u_mat_viewproject\"] = () => {\r\n            return this.renderContext.matrixViewProject;\r\n        };\r\n        this.uniformDic[\"u_mat_mvp\"] = () => {\r\n            return this.renderContext.matrixModelViewProject;\r\n        };\r\n\r\n        this.uniformDic[\"u_mat_normal\"] = () => {\r\n            return this.renderContext.matrixNormalToworld;\r\n        };\r\n\r\n        // this.AutoUniformDic[\"u_timer\"] = () => {\r\n        //     return GameTimer.Time;\r\n        // };\r\n\r\n        // this.AutoUniformDic[\"u_campos\"] = () => {\r\n        //     return renderContext.campos;\r\n        // };\r\n        // this.AutoUniformDic[\"u_LightmapTex\"] = () => {\r\n        //     return renderContext.lightmap[renderContext.lightmapIndex];\r\n        // };\r\n        // this.AutoUniformDic[\"u_lightmapOffset\"] = () => {\r\n        //     return renderContext.lightmapTilingOffset;\r\n        // };\r\n        // this.AutoUniformDic[\"u_lightposs\"] = () => {\r\n        //     return renderContext.vec4LightPos;\r\n        // };\r\n        // this.AutoUniformDic[\"u_lightdirs\"] = () => {\r\n        //     return renderContext.vec4LightDir;\r\n        // };\r\n        // this.AutoUniformDic[\"u_spotangelcoss\"] = () => {\r\n        //     return renderContext.floatLightSpotAngleCos;\r\n        // };\r\n        // this.AutoUniformDic[\"u_jointMatirx\"] = () => {\r\n        //     return renderContext.jointMatrixs;\r\n        // };\r\n    }\r\n\r\n    get autoUniforms() {\r\n        return this.uniformDic;\r\n    }\r\n}\r\n","import { GlRender } from \"./glRender\";\r\nimport { IframeState, Irenderable } from \"../scene/frameState\";\r\nimport { RenderList } from \"./renderList\";\r\nimport { ClearEnum } from \"../ec/components/camera\";\r\nimport { RenderContext } from \"./renderContext\";\r\nimport { AutoUniform } from \"./autoUniform\";\r\n\r\nexport class RenderMachine {\r\n    private rendercontext: RenderContext;\r\n    constructor(cancvas: HTMLCanvasElement) {\r\n        this.rendercontext = new RenderContext();\r\n        GlRender.autoUniform = new AutoUniform(this.rendercontext);\r\n        GlRender.init(cancvas);\r\n    }\r\n    private camRenderList: { [cameraId: number]: RenderList } = {};\r\n    frameRender(frameState: IframeState) {\r\n        let camerlist = frameState.cameraList;\r\n        let renderList = frameState.renderList;\r\n        camerlist.sort((a, b) => {\r\n            return a.priority - b.priority;\r\n        });\r\n\r\n        for (let i = 0; i < camerlist.length; i++) {\r\n            let cam = camerlist[i];\r\n\r\n            if (this.camRenderList[cam.entity.guid] == null) {\r\n                this.camRenderList[cam.entity.guid] = new RenderList(cam);\r\n            }\r\n            let camrenderList = this.camRenderList[cam.entity.guid];\r\n\r\n            // let newList = this.filterRenderByCamera(renderList, cam);\r\n            for (let i = 0; i < renderList.length; i++) {\r\n                if (renderList[i].maskLayer & cam.cullingMask) {\r\n                    camrenderList.addRenderer(renderList[i]);\r\n                }\r\n            }\r\n\r\n            //----------- set global State\r\n            GlRender.setViewPort(cam.viewport);\r\n            GlRender.setClear(\r\n                cam.clearFlag & ClearEnum.DEPTH ? true : false,\r\n                cam.clearFlag & ClearEnum.COLOR ? cam.backgroundColor : null,\r\n                cam.clearFlag & ClearEnum.STENCIL ? true : false,\r\n            );\r\n            //-----------camera render before\r\n            this.rendercontext.curCamera = cam;\r\n            //-----------camera render ing\r\n            camrenderList.sort().foreach((item: Irenderable) => {\r\n                this.rendercontext.curRender = item;\r\n                let shader=item.material.shader;\r\n                if(shader!=null)\r\n                {\r\n                    let passes=shader.passes&&shader.passes[\"base\"];\r\n                    if(passes!=null)\r\n                    {\r\n                        for (let i = 0; i < passes.length; i++) {\r\n                            GlRender.drawObject(item.geometry.data, passes[i], item.material.uniforms,shader.mapUniformDef);\r\n                        }\r\n                    }\r\n                }\r\n            });\r\n            //-----------canera render end\r\n        }\r\n    }\r\n}\r\n\r\n\r\nexport enum DrawTypeEnum {\r\n    BASE = 0,\r\n    SKIN = 1,\r\n    LIGHTMAP = 2,\r\n    FOG = 4,\r\n    INSTANCe = 8,\r\n\r\n    NOFOG = 3,\r\n    NOLIGHTMAP = 5,\r\n}\r\n\r\n","import { Mat4 } from \"./mat4\";\r\nimport { Vec2 } from \"./vec2\";\r\nimport { Mat2d } from \"./mat2d\";\r\nimport { EPSILON } from \"./common\";\r\nimport { Quat } from \"./quat\";\r\n\r\nexport class Mat3 extends Float32Array {\r\n    private static Recycle: Mat3[] = [];\r\n    public static create(): Mat3 {\r\n        if (Mat3.Recycle && Mat3.Recycle.length > 0) {\r\n            let item = Mat3.Recycle.pop();\r\n            Mat3.identity(item);\r\n            return item;\r\n        } else {\r\n            let item = new Float32Array(9);\r\n            item[0] = 1;\r\n            item[4] = 1;\r\n            item[8] = 1;\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Mat3): Mat3 {\r\n        if (Mat3.Recycle.length > 0) {\r\n            let item = Mat3.Recycle.pop();\r\n            Mat3.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let out = new Float32Array(9);\r\n            out[0] = from[0];\r\n            out[1] = from[1];\r\n            out[2] = from[2];\r\n            out[3] = from[3];\r\n            out[4] = from[4];\r\n            out[5] = from[5];\r\n            out[6] = from[6];\r\n            out[7] = from[7];\r\n            out[8] = from[8];\r\n            return out;\r\n        }\r\n    }\r\n    public static recycle(item: Mat3) {\r\n        Mat3.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Mat3.Recycle.length = 0;\r\n    }\r\n    // public constructor()\r\n    // {\r\n    //     super(9);\r\n    //     this[0]=1;\r\n    //     this[4]=1;\r\n    //     this[8]=1;\r\n    // }\r\n\r\n    /**\r\n     * Copies the upper-left 3x3 values into the given mat3.\r\n     *\r\n     * @param {Mat3} out the receiving 3x3 matrix\r\n     * @param {mat4} a   the source 4x4 matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromMat4(a: Mat4, out: Mat3) {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[4];\r\n        out[4] = a[5];\r\n        out[5] = a[6];\r\n        out[6] = a[8];\r\n        out[7] = a[9];\r\n        out[8] = a[10];\r\n        return out;\r\n    }\r\n    /**\r\n     * Copy the values from one mat3 to another\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static copy(a: Mat3, out: Mat3) {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        out[4] = a[4];\r\n        out[5] = a[5];\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Set a mat3 to the identity matrix\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static identity(out: Mat3) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Transpose the values of a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static transpose(a: Mat3, out: Mat3) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1],\r\n                a02 = a[2],\r\n                a12 = a[5];\r\n            out[1] = a[3];\r\n            out[2] = a[6];\r\n            out[3] = a01;\r\n            out[5] = a[7];\r\n            out[6] = a02;\r\n            out[7] = a12;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[3];\r\n            out[2] = a[6];\r\n            out[3] = a[1];\r\n            out[4] = a[4];\r\n            out[5] = a[7];\r\n            out[6] = a[2];\r\n            out[7] = a[5];\r\n            out[8] = a[8];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Inverts a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static invert(a: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        let b01 = a22 * a11 - a12 * a21;\r\n        let b11 = -a22 * a10 + a12 * a20;\r\n        let b21 = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = b01 * det;\r\n        out[1] = (-a22 * a01 + a02 * a21) * det;\r\n        out[2] = (a12 * a01 - a02 * a11) * det;\r\n        out[3] = b11 * det;\r\n        out[4] = (a22 * a00 - a02 * a20) * det;\r\n        out[5] = (-a12 * a00 + a02 * a10) * det;\r\n        out[6] = b21 * det;\r\n        out[7] = (-a21 * a00 + a01 * a20) * det;\r\n        out[8] = (a11 * a00 - a01 * a10) * det;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the adjugate of a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static adjoint(a: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        out[0] = a11 * a22 - a12 * a21;\r\n        out[1] = a02 * a21 - a01 * a22;\r\n        out[2] = a01 * a12 - a02 * a11;\r\n        out[3] = a12 * a20 - a10 * a22;\r\n        out[4] = a00 * a22 - a02 * a20;\r\n        out[5] = a02 * a10 - a00 * a12;\r\n        out[6] = a10 * a21 - a11 * a20;\r\n        out[7] = a01 * a20 - a00 * a21;\r\n        out[8] = a00 * a11 - a01 * a10;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the determinant of a mat3\r\n     *\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Number} determinant of a\r\n     */\r\n    public static determinant(a: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * Multiplies two mat3's\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @returns {Mat3} out\r\n     */\r\n    public static multiply(a: Mat3, b: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        let b00 = b[0],\r\n            b01 = b[1],\r\n            b02 = b[2];\r\n        let b10 = b[3],\r\n            b11 = b[4],\r\n            b12 = b[5];\r\n        let b20 = b[6],\r\n            b21 = b[7],\r\n            b22 = b[8];\r\n\r\n        out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n        out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n        out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Translate a mat3 by the given vector\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to translate\r\n     * @param {vec2} v vector to translate by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static translate(a: Mat3, v: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5],\r\n            a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8],\r\n            x = v[0],\r\n            y = v[1];\r\n\r\n        out[0] = a00;\r\n        out[1] = a01;\r\n        out[2] = a02;\r\n\r\n        out[3] = a10;\r\n        out[4] = a11;\r\n        out[5] = a12;\r\n\r\n        out[6] = x * a00 + y * a10 + a20;\r\n        out[7] = x * a01 + y * a11 + a21;\r\n        out[8] = x * a02 + y * a12 + a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a mat3 by the given angle\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to rotate\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static rotate(a: Mat3, rad: number, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5],\r\n            a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8],\r\n            s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n\r\n        out[0] = c * a00 + s * a10;\r\n        out[1] = c * a01 + s * a11;\r\n        out[2] = c * a02 + s * a12;\r\n\r\n        out[3] = c * a10 - s * a00;\r\n        out[4] = c * a11 - s * a01;\r\n        out[5] = c * a12 - s * a02;\r\n\r\n        out[6] = a20;\r\n        out[7] = a21;\r\n        out[8] = a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales the mat3 by the dimensions in the given vec2\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to rotate\r\n     * @param {vec2} v the vec2 to scale the matrix by\r\n     * @returns {Mat3} out\r\n     **/\r\n    public static scale(a: Mat3, v: Vec2, out: Mat3) {\r\n        let x = v[0],\r\n            y = v[1];\r\n\r\n        out[0] = x * a[0];\r\n        out[1] = x * a[1];\r\n        out[2] = x * a[2];\r\n\r\n        out[3] = y * a[3];\r\n        out[4] = y * a[4];\r\n        out[5] = y * a[5];\r\n\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat3.identity(dest);\r\n     *     mat3.translate(dest, dest, vec);\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {vec2} v Translation vector\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromTranslation(v: Vec2, out: Mat3) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = v[0];\r\n        out[7] = v[1];\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a given angle\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat3.identity(dest);\r\n     *     mat3.rotate(dest, dest, rad);\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromRotation(rad: number, out: Mat3) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n\r\n        out[0] = c;\r\n        out[1] = s;\r\n        out[2] = 0;\r\n\r\n        out[3] = -s;\r\n        out[4] = c;\r\n        out[5] = 0;\r\n\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector scaling\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat3.identity(dest);\r\n     *     mat3.scale(dest, dest, vec);\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {vec2} v Scaling vector\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromScaling(v: Vec2, out: Mat3) {\r\n        out[0] = v[0];\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n\r\n        out[3] = 0;\r\n        out[4] = v[1];\r\n        out[5] = 0;\r\n\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Copies the values from a mat2d into a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {mat2d} a the matrix to copy\r\n     * @returns {Mat3} out\r\n     **/\r\n    public static fromMat2d(a: Mat2d, out: Mat3) {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = 0;\r\n\r\n        out[3] = a[2];\r\n        out[4] = a[3];\r\n        out[5] = 0;\r\n\r\n        out[6] = a[4];\r\n        out[7] = a[5];\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 3x3 matrix from the given quaternion\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {quat} q Quaternion to create matrix from\r\n     *\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromQuat(q: Quat, out: Mat3) {\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let yx = y * x2;\r\n        let yy = y * y2;\r\n        let zx = z * x2;\r\n        let zy = z * y2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        out[0] = 1 - yy - zz;\r\n        out[3] = yx - wz;\r\n        out[6] = zx + wy;\r\n\r\n        out[1] = yx + wz;\r\n        out[4] = 1 - xx - zz;\r\n        out[7] = zy - wx;\r\n\r\n        out[2] = zx - wy;\r\n        out[5] = zy + wx;\r\n        out[8] = 1 - xx - yy;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {mat4} a Mat4 to derive the normal matrix from\r\n     *\r\n     * @returns {Mat3} out\r\n     */\r\n    public static normalFromMat4(a: Mat4, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a 2D projection matrix with the given bounds\r\n     *\r\n     * @param {Mat3} out mat3 frustum matrix will be written into\r\n     * @param {number} width Width of your gl context\r\n     * @param {number} height Height of gl context\r\n     * @returns {Mat3} out\r\n     */\r\n    public static projection(width: number, height: number, out: Mat3) {\r\n        out[0] = 2 / width;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = -2 / height;\r\n        out[5] = 0;\r\n        out[6] = -1;\r\n        out[7] = 1;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a mat3\r\n     *\r\n     * @param {Mat3} a matrix to represent as a string\r\n     * @returns {String} string representation of the matrix\r\n     */\r\n    public static str(a: Mat3) {\r\n        return (\r\n            \"mat3(\" +\r\n            a[0] +\r\n            \", \" +\r\n            a[1] +\r\n            \", \" +\r\n            a[2] +\r\n            \", \" +\r\n            a[3] +\r\n            \", \" +\r\n            a[4] +\r\n            \", \" +\r\n            a[5] +\r\n            \", \" +\r\n            a[6] +\r\n            \", \" +\r\n            a[7] +\r\n            \", \" +\r\n            a[8] +\r\n            \")\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns Frobenius norm of a mat3\r\n     *\r\n     * @param {Mat3} a the matrix to calculate Frobenius norm of\r\n     * @returns {Number} Frobenius norm\r\n     */\r\n    public static frob(a: Mat3) {\r\n        return Math.sqrt(\r\n            Math.pow(a[0], 2) +\r\n                Math.pow(a[1], 2) +\r\n                Math.pow(a[2], 2) +\r\n                Math.pow(a[3], 2) +\r\n                Math.pow(a[4], 2) +\r\n                Math.pow(a[5], 2) +\r\n                Math.pow(a[6], 2) +\r\n                Math.pow(a[7], 2) +\r\n                Math.pow(a[8], 2),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds two mat3's\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @returns {Mat3} out\r\n     */\r\n    public static add(a: Mat3, b: Mat3, out: Mat3) {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        out[4] = a[4] + b[4];\r\n        out[5] = a[5] + b[5];\r\n        out[6] = a[6] + b[6];\r\n        out[7] = a[7] + b[7];\r\n        out[8] = a[8] + b[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @returns {Mat3} out\r\n     */\r\n    public static subtract(a: Mat3, b: Mat3, out: Mat3) {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        out[2] = a[2] - b[2];\r\n        out[3] = a[3] - b[3];\r\n        out[4] = a[4] - b[4];\r\n        out[5] = a[5] - b[5];\r\n        out[6] = a[6] - b[6];\r\n        out[7] = a[7] - b[7];\r\n        out[8] = a[8] - b[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiply each element of the matrix by a scalar.\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to scale\r\n     * @param {Number} b amount to scale the matrix's elements by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static multiplyScalar(a: Mat3, b: number, out: Mat3) {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        out[4] = a[4] * b;\r\n        out[5] = a[5] * b;\r\n        out[6] = a[6] * b;\r\n        out[7] = a[7] * b;\r\n        out[8] = a[8] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n     *\r\n     * @param {Mat3} out the receiving vector\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @param {Number} scale the amount to scale b's elements by before adding\r\n     * @returns {Mat3} out\r\n     */\r\n    public static multiplyScalarAndAdd(a: Mat3, b: Mat3, scale: number, out: Mat3) {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        out[2] = a[2] + b[2] * scale;\r\n        out[3] = a[3] + b[3] * scale;\r\n        out[4] = a[4] + b[4] * scale;\r\n        out[5] = a[5] + b[5] * scale;\r\n        out[6] = a[6] + b[6] * scale;\r\n        out[7] = a[7] + b[7] * scale;\r\n        out[8] = a[8] + b[8] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Mat3} a The first matrix.\r\n     * @param {Mat3} b The second matrix.\r\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Mat3, b: Mat3) {\r\n        return (\r\n            a[0] === b[0] &&\r\n            a[1] === b[1] &&\r\n            a[2] === b[2] &&\r\n            a[3] === b[3] &&\r\n            a[4] === b[4] &&\r\n            a[5] === b[5] &&\r\n            a[6] === b[6] &&\r\n            a[7] === b[7] &&\r\n            a[8] === b[8]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have approximately the same elements in the same position.\r\n     *\r\n     * @param {Mat3} a The first matrix.\r\n     * @param {Mat3} b The second matrix.\r\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static equals(a: Mat3, b: Mat3) {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3],\r\n            a4 = a[4],\r\n            a5 = a[5],\r\n            a6 = a[6],\r\n            a7 = a[7],\r\n            a8 = a[8];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3],\r\n            b4 = b[4],\r\n            b5 = b[5],\r\n            b6 = b[6],\r\n            b7 = b[7],\r\n            b8 = b[8];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON &&\r\n            Math.abs(a1 - b1) <= EPSILON &&\r\n            Math.abs(a2 - b2) <= EPSILON &&\r\n            Math.abs(a3 - b3) <= EPSILON &&\r\n            Math.abs(a4 - b4) <= EPSILON &&\r\n            Math.abs(a5 - b5) <= EPSILON &&\r\n            Math.abs(a6 - b6) <= EPSILON &&\r\n            Math.abs(a7 - b7) <= EPSILON &&\r\n            Math.abs(a8 - b8) <= EPSILON\r\n        );\r\n    }\r\n}\r\n","import { Vec3 } from \"./vec3\";\r\nimport { Mat3 } from \"./Mat3\";\r\nimport { clamp, EPSILON } from \"./common\";\r\n\r\nexport class Quat extends Float32Array {\r\n    get x() {\r\n        return this[0];\r\n    }\r\n    set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n    set z(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    get w() {\r\n        return this[3];\r\n    }\r\n    set w(value: number) {\r\n        this[3] = value;\r\n    }\r\n\r\n    private static Recycle: Quat[] = [];\r\n    public static readonly norot = Quat.create();\r\n    public static create() {\r\n        if (Quat.Recycle && Quat.Recycle.length > 0) {\r\n            let item = Quat.Recycle.pop() as Quat;\r\n            Quat.identity(item);\r\n            return item;\r\n        } else {\r\n            let item = new Quat();\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Quat): Quat {\r\n        if (Quat.Recycle.length > 0) {\r\n            let item = Quat.Recycle.pop() as Quat;\r\n            Quat.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Quat();\r\n            item[0] = from[0];\r\n            item[1] = from[1];\r\n            item[2] = from[2];\r\n            item[3] = from[3];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Quat) {\r\n        Quat.Recycle.push(item);\r\n    }\r\n\r\n    public static disposeRecycledItems() {\r\n        Quat.Recycle.length = 0;\r\n    }\r\n    private constructor() {\r\n        super(4);\r\n        // this[0]=0;\r\n        // this[1]=0;\r\n        // this[2]=0;\r\n        this[3] = 1;\r\n    }\r\n\r\n    /**\r\n     * Copy the values from one Quat to another\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the source Quaternion\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static copy(a: Quat | number[], out: Quat): Quat {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Set a Quat to the identity Quaternion\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @returns out\r\n     */\r\n    public static identity(out: Quat): Quat {\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Gets the rotation axis and angle for a given\r\n     *  Quaternion. If a Quaternion is created with\r\n     *  setAxisAngle, this method will return the same\r\n     *  values as providied in the original parameter list\r\n     *  OR functionally equivalent values.\r\n     * Example: The Quaternion formed by axis [0, 0, 1] and\r\n     *  angle -90 is the same as the Quaternion formed by\r\n     *  [0, 0, 1] and 270. This method favors the latter.\r\n     * @param  {Vec3} axis  Vector receiving the axis of rotation\r\n     * @param  {Quat} q     Quaternion to be decomposed\r\n     * @return {number}     Angle, in radians, of the rotation\r\n     */\r\n    public static getAxisAngle(axis: Vec3, q: Quat): number {\r\n        let rad = Math.acos(q[3]) * 2.0;\r\n        let s = Math.sin(rad / 2.0);\r\n        if (s != 0.0) {\r\n            axis[0] = q[0] / s;\r\n            axis[1] = q[1] / s;\r\n            axis[2] = q[2] / s;\r\n        } else {\r\n            // If s is zero, return any axis (no rotation - axis does not matter)\r\n            axis[0] = 1;\r\n            axis[1] = 0;\r\n            axis[2] = 0;\r\n        }\r\n        return rad;\r\n    }\r\n\r\n    /**\r\n     * Adds two Quat's\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static add(a: Quat, b: Quat, out: Quat): Quat {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two Quat's\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Quat, b: Quat, out: Quat): Quat {\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bx = b[0],\r\n            by = b[1],\r\n            bz = b[2],\r\n            bw = b[3];\r\n\r\n        out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n        out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n        out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n        out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a Quat by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static scale(a: Quat, b: number, out: Quat): Quat {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a Quat\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     * @function\r\n     */\r\n    public static length_(a: Quat): number {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared length of a Quat\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     * @function\r\n     */\r\n    public static squaredLength(a: Quat): number {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * Normalize a Quat\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param src Quaternion to normalize\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static normalize(src: Quat, out: Quat): Quat {\r\n        let x = src[0];\r\n        let y = src[1];\r\n        let z = src[2];\r\n        let w = src[3];\r\n        let len = x * x + y * y + z * z + w * w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = x * len;\r\n            out[1] = y * len;\r\n            out[2] = z * len;\r\n            out[3] = w * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two Quat's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     * @function\r\n     */\r\n    public static dot(a: Quat, b: Quat): number {\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two Quat's\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param t interpolation amount between the two inputs\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static lerp(a: Quat, b: Quat, t: number, out: Quat): Quat {\r\n        let ax = a[0];\r\n        let ay = a[1];\r\n        let az = a[2];\r\n        let aw = a[3];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        out[2] = az + t * (b[2] - az);\r\n        out[3] = aw + t * (b[3] - aw);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a spherical linear interpolation between two Quat\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param t interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static slerp(a: Quat, b: Quat, t: number, out: Quat): Quat {\r\n        // benchmarks:\r\n        //    http://jsperf.com/Quaternion-slerp-implementations\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bx = b[0],\r\n            by = b[1],\r\n            bz = b[2],\r\n            bw = b[3];\r\n\r\n        let omega: number = void 0,\r\n            cosom: number = void 0,\r\n            sinom: number = void 0,\r\n            scale0: number = void 0,\r\n            scale1: number = void 0;\r\n\r\n        // calc cosine\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary)\r\n        if (cosom < 0.0) {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients\r\n        if (1.0 - cosom > 0.000001) {\r\n            // standard case (slerp)\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else {\r\n            // \"from\" and \"to\" Quaternions are very close\r\n            //  ... so we can do a linear interpolation\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a spherical linear interpolation with two control points\r\n     *\r\n     * @param {Quat} out the receiving Quaternion\r\n     * @param {Quat} a the first operand\r\n     * @param {Quat} b the second operand\r\n     * @param {Quat} c the third operand\r\n     * @param {Quat} d the fourth operand\r\n     * @param {number} t interpolation amount\r\n     * @returns {Quat} out\r\n     */\r\n    public static sqlerp(a: Quat, b: Quat, c: Quat, d: Quat, t: number, out: Quat): Quat {\r\n        let temp1 = Quat.create();\r\n        let temp2 = Quat.create();\r\n\r\n        Quat.slerp(a, d, t, temp1);\r\n        Quat.slerp(b, c, t, temp2);\r\n        Quat.slerp(temp1, temp2, 2 * t * (1 - t), out);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the inverse of a Quat\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a Quat to calculate inverse of\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Quat, out: Quat): Quat {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        let invDot = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n        out[0] = -a0 * invDot;\r\n        out[1] = -a1 * invDot;\r\n        out[2] = -a2 * invDot;\r\n        out[3] = a3 * invDot;\r\n        return out;\r\n    }\r\n    /**\r\n     * Calculates the conjugate of a Quat\r\n     * If the Quaternion is normalized, this function is faster than Quat.inverse and produces the same result.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a Quat to calculate conjugate of\r\n     * @returns out\r\n     */\r\n    public static conjugate(out: Quat, a: Quat): Quat {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        out[2] = -a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a Quaternion\r\n     *\r\n     * @param a Quat to represent as a string\r\n     * @returns string representation of the Quat\r\n     */\r\n    public static str(a: Quat): string {\r\n        return \"Quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Rotates a Quaternion by the given angle about the X axis\r\n     *\r\n     * @param out Quat receiving operation result\r\n     * @param a Quat to rotate\r\n     * @param rad angle (in radians) to rotate\r\n     * @returns out\r\n     */\r\n    public static rotateX(a: Quat, rad: number, out: Quat): Quat {\r\n        rad *= 0.5;\r\n\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bx = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n\r\n        out[0] = ax * bw + aw * bx;\r\n        out[1] = ay * bw + az * bx;\r\n        out[2] = az * bw - ay * bx;\r\n        out[3] = aw * bw - ax * bx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a Quaternion by the given angle about the Y axis\r\n     *\r\n     * @param out Quat receiving operation result\r\n     * @param a Quat to rotate\r\n     * @param rad angle (in radians) to rotate\r\n     * @returns out\r\n     */\r\n    public static rotateY(a: Quat, rad: number, out: Quat): Quat {\r\n        rad *= 0.5;\r\n\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let by = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n\r\n        out[0] = ax * bw - az * by;\r\n        out[1] = ay * bw + aw * by;\r\n        out[2] = az * bw + ax * by;\r\n        out[3] = aw * bw - ay * by;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a Quaternion by the given angle about the Z axis\r\n     *\r\n     * @param out Quat receiving operation result\r\n     * @param a Quat to rotate\r\n     * @param rad angle (in radians) to rotate\r\n     * @returns out\r\n     */\r\n    public static rotateZ(a: Quat, rad: number, out: Quat): Quat {\r\n        rad *= 0.5;\r\n\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bz = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n\r\n        out[0] = ax * bw + ay * bz;\r\n        out[1] = ay * bw - ax * bz;\r\n        out[2] = az * bw + aw * bz;\r\n        out[3] = aw * bw - az * bz;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a Quaternion from the given 3x3 rotation matrix.\r\n     *\r\n     * NOTE: The resultant Quaternion is not normalized, so you should be sure\r\n     * to renormalize the Quaternion yourself where necessary.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param m rotation matrix\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static fromMat3(m: Mat3, out: Quat): Quat {\r\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n        // article \"Quaternion Calculus and Fast Animation\".\r\n        let fTrace = m[0] + m[4] + m[8];\r\n        let fRoot: number = void 0;\r\n\r\n        if (fTrace > 0.0) {\r\n            // |w| > 1/2, may as well choose w > 1/2\r\n            fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n            out[3] = 0.5 * fRoot;\r\n            fRoot = 0.5 / fRoot; // 1/(4w)\r\n            out[0] = (m[5] - m[7]) * fRoot;\r\n            out[1] = (m[6] - m[2]) * fRoot;\r\n            out[2] = (m[1] - m[3]) * fRoot;\r\n        } else {\r\n            // |w| <= 1/2\r\n            let i = 0;\r\n            if (m[4] > m[0]) i = 1;\r\n            if (m[8] > m[i * 3 + i]) i = 2;\r\n            let j = (i + 1) % 3;\r\n            let k = (i + 2) % 3;\r\n\r\n            fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n            out[i] = 0.5 * fRoot;\r\n            fRoot = 0.5 / fRoot;\r\n            out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n            out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n            out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Sets the specified Quaternion with values corresponding to the given\r\n     * axes. Each axis is a Vec3 and is expected to be unit length and\r\n     * perpendicular to all other specified axes.\r\n     *\r\n     * @param out the receiving Quat\r\n     * @param view  the vector representing the viewing direction\r\n     * @param right the vector representing the local \"right\" direction\r\n     * @param up    the vector representing the local \"up\" direction\r\n     * @returns out\r\n     */\r\n    public static setAxes(view: Vec3, right: Vec3, up: Vec3, out: Quat): Quat {\r\n        let matr = Mat3.create();\r\n\r\n        matr[0] = right[0];\r\n        matr[3] = right[1];\r\n        matr[6] = right[2];\r\n\r\n        matr[1] = up[0];\r\n        matr[4] = up[1];\r\n        matr[7] = up[2];\r\n\r\n        matr[2] = -view[0];\r\n        matr[5] = -view[1];\r\n        matr[8] = -view[2];\r\n        Quat.fromMat3(matr, out);\r\n        matr = null;\r\n\r\n        return Quat.normalize(out, out);\r\n    }\r\n\r\n    /**\r\n     * Calculates the W component of a Quat from the X, Y, and Z components.\r\n     * Assumes that Quaternion is 1 unit in length.\r\n     * Any existing W component will be ignored.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a Quat to calculate W component of\r\n     * @returns out\r\n     */\r\n    public static calculateW(a: Quat, out: Quat): Quat {\r\n        let x = a[0],\r\n            y = a[1],\r\n            z = a[2];\r\n\r\n        out[0] = x;\r\n        out[1] = y;\r\n        out[2] = z;\r\n        out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the Quaternions have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Quat} a The first vector.\r\n     * @param {Quat} b The second vector.\r\n     * @returns {boolean} True if the Quaternions are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Quat, b: Quat): boolean {\r\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n    }\r\n\r\n    // /**\r\n    //  * Returns whether or not the Quaternions have approximately the same elements in the same position.\r\n    //  *\r\n    //  * @param {Quat} a The first vector.\r\n    //  * @param {Quat} b The second vector.\r\n    //  * @returns {boolean} True if the Quaternions are equal, false otherwise.\r\n    //  */\r\n    // public static equals (a: Quat, b: Quat): boolean{\r\n    //     let a0 = a[0],\r\n    //     a1 = a[1],\r\n    //     a2 = a[2],\r\n    //     a3 = a[3];\r\n    // let b0 = b[0],\r\n    //     b1 = b[1],\r\n    //     b2 = b[2],\r\n    //     b3 = b[3];\r\n    // return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n\r\n    // }\r\n    static fromYawPitchRoll(yaw: number, pitch: number, roll: number, result: Quat): void {\r\n        // Produces a Quaternion from Euler angles in the z-y-x orientation (Tait-Bryan angles)\r\n        let halfRoll = roll * 0.5;\r\n        let halfPitch = pitch * 0.5;\r\n        let halfYaw = yaw * 0.5;\r\n\r\n        let sinRoll = Math.sin(halfRoll);\r\n        let cosRoll = Math.cos(halfRoll);\r\n        let sinPitch = Math.sin(halfPitch);\r\n        let cosPitch = Math.cos(halfPitch);\r\n        let sinYaw = Math.sin(halfYaw);\r\n        let cosYaw = Math.cos(halfYaw);\r\n\r\n        result[0] = cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll;\r\n        result[1] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;\r\n        result[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;\r\n        result[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;\r\n    }\r\n    /**舍弃glmatrix 的fromeuler  （坐标系不同算法不同）\r\n     * Creates a Quaternion from the given euler angle x, y, z.\r\n     * rot order： z-y-x\r\n     * @param {x} Angle to rotate around X axis in degrees.\r\n     * @param {y} Angle to rotate around Y axis in degrees.\r\n     * @param {z} Angle to rotate around Z axis in degrees.\r\n     * @param {Quat} out the receiving Quaternion\r\n     * @returns {Quat} out\r\n     * @function\r\n     */\r\n    static FromEuler(x: number, y: number, z: number, out: Quat): Quat {\r\n        x *= (0.5 * Math.PI) / 180;\r\n        y *= (0.5 * Math.PI) / 180;\r\n        z *= (0.5 * Math.PI) / 180;\r\n\r\n        let cosX: number = Math.cos(x),\r\n            sinX: number = Math.sin(x);\r\n        let cosY: number = Math.cos(y),\r\n            sinY: number = Math.sin(y);\r\n        let cosZ: number = Math.cos(z),\r\n            sinZ: number = Math.sin(z);\r\n\r\n        out[0] = sinX * cosY * cosZ + cosX * sinY * sinZ;\r\n        out[1] = cosX * sinY * cosZ - sinX * cosY * sinZ;\r\n        out[2] = cosX * cosY * sinZ - sinX * sinY * cosZ;\r\n        out[3] = cosX * cosY * cosZ + sinX * sinY * sinZ;\r\n\r\n        this.normalize(out, out);\r\n        return out;\r\n    }\r\n    static ToEuler(src: Quat, out: Vec3) {\r\n        let x = src[0],\r\n            y = src[1],\r\n            z = src[2],\r\n            w = src[3];\r\n        let temp: number = 2.0 * (w * x - y * z);\r\n        temp = clamp(temp, -1.0, 1.0);\r\n        out[0] = Math.asin(temp);\r\n        out[1] = Math.atan2(2.0 * (w * y + z * x), 1.0 - 2.0 * (y * y + x * x));\r\n        out[2] = Math.atan2(2.0 * (w * z + y * x), 1.0 - 2.0 * (x * x + z * z));\r\n\r\n        out[0] /= Math.PI / 180;\r\n        out[1] /= Math.PI / 180;\r\n        out[2] /= Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * Sets a Quat from the given angle and rotation axis,\r\n     * then returns it.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param axis the axis around which to rotate\r\n     * @param rad （弧度）the angle in radians\r\n     * @returns out\r\n     **/\r\n    public static AxisAngle(axis: Vec3, rad: number, out: Quat): Quat {\r\n        rad = rad * 0.5;\r\n        let s = Math.sin(rad);\r\n        out[0] = s * axis[0];\r\n        out[1] = s * axis[1];\r\n        out[2] = s * axis[2];\r\n        out[3] = Math.cos(rad);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Sets a Quaternion to represent the shortest rotation from one\r\n     * vector to another.\r\n     *\r\n     * Both vectors are assumed to be unit length.\r\n     *\r\n     * @param out the receiving Quaternion.\r\n     * @param from the initial vector\r\n     * @param to the destination vector\r\n     * @returns out\r\n     */\r\n    public static rotationTo(from: Vec3, to: Vec3, out: Quat): Quat {\r\n        let tmpVec3 = Vec3.create();\r\n        let xUnitVec3 = Vec3.RIGHT;\r\n        let yUnitVec3 = Vec3.UP;\r\n\r\n        let dot = Vec3.dot(from, to);\r\n        if (dot < -0.999999) {\r\n            Vec3.cross(tmpVec3, xUnitVec3, from);\r\n            if (Vec3.magnitude(tmpVec3) < 0.000001) Vec3.cross(tmpVec3, yUnitVec3, from);\r\n            Vec3.normalize(tmpVec3, tmpVec3);\r\n            Quat.AxisAngle(tmpVec3, Math.PI, out);\r\n            return out;\r\n        } else if (dot > 0.999999) {\r\n            out[0] = 0;\r\n            out[1] = 0;\r\n            out[2] = 0;\r\n            out[3] = 1;\r\n            return out;\r\n        } else {\r\n            Vec3.cross(tmpVec3, from, to);\r\n            out[0] = tmpVec3[0];\r\n            out[1] = tmpVec3[1];\r\n            out[2] = tmpVec3[2];\r\n            out[3] = 1 + dot;\r\n            return Quat.normalize(out, out);\r\n        }\r\n    }\r\n    static myLookRotation(dir: Vec3, out: Quat, up: Vec3 = Vec3.UP) {\r\n        if (Vec3.exactEquals(dir, Vec3.ZERO)) {\r\n            console.log(\"Zero direction in MyLookRotation\");\r\n            return Quat.norot;\r\n        }\r\n        if (!Vec3.exactEquals(dir, up)) {\r\n            let tempv = Vec3.create();\r\n            Vec3.scale(up, Vec3.dot(up, dir), tempv);\r\n            Vec3.subtract(dir, tempv, tempv);\r\n            let qu = Quat.create();\r\n            this.rotationTo(Vec3.FORWARD, tempv, qu);\r\n            let qu2 = Quat.create();\r\n            this.rotationTo(tempv, dir, qu2);\r\n            Quat.multiply(qu, qu2, out);\r\n        } else {\r\n            this.rotationTo(Vec3.FORWARD, dir, out);\r\n        }\r\n    }\r\n    // /**\r\n    //  *\r\n    //  * @param pos transform self pos\r\n    //  * @param targetpos targetpos\r\n    //  * @param out\r\n    //  * @param up\r\n    //  */\r\n    // static lookat(pos: Vec3, targetpos: Vec3, out: Quat,up:Vec3=Vec3.UP)\r\n    // {\r\n    //     let baseDir=Vec3.BACKWARD;\r\n\r\n    //     let dir = Vec3.create();\r\n    //     Vec3.subtract(targetpos, pos, dir);\r\n    //     Vec3.normalize(dir, dir);\r\n    //     let dot = Vec3.dot(baseDir, dir);\r\n    //     if (Math.abs(dot - (-1.0)) < 0.000001)\r\n    //     {\r\n    //         this.AxisAngle(Vec3.UP, Math.PI, out);\r\n    //     }else if(Math.abs(dot - 1.0) < 0.000001)\r\n    //     {\r\n    //         Quat.identity(out);\r\n    //     }else\r\n    //     {\r\n    //         dot = clamp(dot, -1, 1);\r\n    //         let rotangle = Math.acos(dot);\r\n    //         let rotAxis = Vec3.create();\r\n    //         Vec3.cross(baseDir, dir, rotAxis);\r\n    //         Vec3.normalize(rotAxis,rotAxis);\r\n    //         Quat.AxisAngle(rotAxis, rotangle, out);\r\n    //     }\r\n\r\n    //     let targetdirx:Vec3=Vec3.create();\r\n    //     Vec3.cross(up,out,targetdirx);\r\n    //     let dotx = Vec3.dot(targetdirx,Vec3.RIGHT);\r\n    //     let rot2=Quat.create();\r\n    //     if (Math.abs(dotx - 1.0) < 0.000001)\r\n    //     {\r\n    //     }else if(Math.abs(dotx - 1.0) < 0.000001)\r\n    //     {\r\n    //         this.AxisAngle(Vec3.FORWARD, Math.PI, rot2);\r\n    //         Quat.multiply(out,rot2,out);\r\n    //     }else\r\n    //     {\r\n    //         let rotAxis=Vec3.create();\r\n    //         Vec3.cross(Vec3.RIGHT,targetdirx,rotAxis);\r\n    //         dotx = clamp(dotx, -1, 1);\r\n    //         let rotangle = Math.acos(dotx);\r\n    //         Quat.AxisAngle(rotAxis, rotangle, rot2);\r\n    //         Quat.multiply(out,rot2,out);\r\n    //     }\r\n\r\n    //     Vec3.recycle(dir);\r\n    //     // Vec3.recycle(rotAxis);\r\n\r\n    //     // let dir = Vec3.create();\r\n    //     // Vec3.subtract(targetpos, pos, dir);\r\n    //     // Vec3.normalize(dir, dir);\r\n    //     // this.rotationTo(Vec3.BACKWARD,dir,out);\r\n    // }\r\n\r\n    static LookRotation(lookAt: Vec3, up: Vec3 = Vec3.UP) {\r\n        /*Vector forward = lookAt.Normalized();\r\n            Vector right = Vector::Cross(up.Normalized(), forward);\r\n            Vector up = Vector::Cross(forward, right);*/\r\n\r\n        // Vector forward = lookAt.Normalized();\r\n        // Vector::OrthoNormalize(&up, &forward); // Keeps up the same, make forward orthogonal to up\r\n        // Vector right = Vector::Cross(up, forward);\r\n\r\n        // Quaternion ret;\r\n        // ret.w = sqrtf(1.0f + right.x + up.y + forward.z) * 0.5f;\r\n        // float w4_recip = 1.0f / (4.0f * ret.w);\r\n        // ret.x = (forward.y - up.z) * w4_recip;\r\n        // ret.y = (right.z - forward.x) * w4_recip;\r\n        // ret.z = (up.x - right.y) * w4_recip;\r\n\r\n        // return ret;\r\n\r\n        let forward = Vec3.create();\r\n        Vec3.normalize(lookAt, forward);\r\n        let right = Vec3.create();\r\n        Vec3.cross(up, forward, right);\r\n    }\r\n\r\n    static transformVector(src: Quat, vector: Vec3, out: Vec3) {\r\n        var x1: number, y1: number, z1: number, w1: number;\r\n        var x2: number = vector[0],\r\n            y2: number = vector[1],\r\n            z2: number = vector[2];\r\n\r\n        w1 = -src[0] * x2 - src[1] * y2 - src[2] * z2;\r\n        x1 = src[3] * x2 + src[1] * z2 - src[2] * y2;\r\n        y1 = src[3] * y2 - src[0] * z2 + src[2] * x2;\r\n        z1 = src[3] * z2 + src[0] * y2 - src[1] * x2;\r\n\r\n        out.x = -w1 * src[0] + x1 * src[3] - y1 * src[2] + z1 * src[1];\r\n        out.y = -w1 * src[1] + x1 * src[2] + y1 * src[3] - z1 * src[0];\r\n        out.z = -w1 * src[2] - x1 * src[1] + y1 * src[0] + z1 * src[3];\r\n    }\r\n    static unitxyzToRotation(xAxis: Vec3, yAxis: Vec3, zAxis: Vec3, out: Quat) {\r\n        var m11 = xAxis[0],\r\n            m12 = yAxis[0],\r\n            m13 = zAxis[0];\r\n        var m21 = xAxis[1],\r\n            m22 = yAxis[1],\r\n            m23 = zAxis[1];\r\n        var m31 = xAxis[2],\r\n            m32 = yAxis[2],\r\n            m33 = zAxis[2];\r\n        var trace = m11 + m22 + m33;\r\n        var s;\r\n        if (trace > 0) {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n            out.w = 0.25 / s;\r\n            out.x = (m32 - m23) * s;\r\n            out.y = (m13 - m31) * s;\r\n            out.z = (m21 - m12) * s;\r\n        } else if (m11 > m22 && m11 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\r\n            out.w = (m32 - m23) / s;\r\n            out.x = 0.25 * s;\r\n            out.y = (m12 + m21) / s;\r\n            out.z = (m13 + m31) / s;\r\n        } else if (m22 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\r\n            out.w = (m13 - m31) / s;\r\n            out.x = (m12 + m21) / s;\r\n            out.y = 0.25 * s;\r\n            out.z = (m23 + m32) / s;\r\n        } else {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\r\n            out.w = (m21 - m12) / s;\r\n            out.x = (m13 + m31) / s;\r\n            out.y = (m23 + m32) / s;\r\n            out.z = 0.25 * s;\r\n        }\r\n    }\r\n    static lookat(pos: Vec3, targetpos: Vec3, out: Quat, up: Vec3 = Vec3.UP) {\r\n        // let baseDir=Vec3.BACKWARD;\r\n        let dirz = Vec3.create();\r\n        Vec3.subtract(pos, targetpos, dirz);\r\n        Vec3.normalize(dirz, dirz);\r\n\r\n        let dirx: Vec3 = Vec3.create();\r\n        Vec3.cross(up, dirz, dirx);\r\n        Vec3.normalize(dirx, dirx);\r\n\r\n        let diry: Vec3 = Vec3.create();\r\n        Vec3.cross(dirz, dirx, diry);\r\n        // Vec3.normalize(diry, diry);\r\n\r\n        this.unitxyzToRotation(dirx, diry, dirz, out);\r\n\r\n        Vec3.recycle(dirx);\r\n        Vec3.recycle(diry);\r\n        Vec3.recycle(dirz);\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same Quat.\r\n     *\r\n     * @param {vec4} a The first vector.\r\n     * @param {vec4} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Quat, b: Quat): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON &&\r\n            Math.abs(a1 - b1) <= EPSILON &&\r\n            Math.abs(a2 - b2) <= EPSILON &&\r\n            Math.abs(a3 - b3) <= EPSILON\r\n        );\r\n    }\r\n    /**\r\n     *\r\n     * @param from\r\n     * @param to\r\n     * @param out\r\n     */\r\n    static fromToRotation(from: Vec3, to: Vec3, out: Quat) {\r\n        let dir1 = Vec3.create();\r\n        let dir2 = Vec3.create();\r\n\r\n        Vec3.normalize(from, dir1);\r\n        Vec3.normalize(to, dir2);\r\n\r\n        let dir = Vec3.create();\r\n        Vec3.cross(dir1, dir2, dir);\r\n        if (Vec3.magnitude(dir) < 0.001) {\r\n            Quat.identity(out);\r\n        } else {\r\n            let dot = Vec3.dot(dir1, dir2);\r\n            Vec3.normalize(dir, dir);\r\n            Quat.AxisAngle(dir, Math.acos(dot), out);\r\n        }\r\n        Vec3.recycle(dir);\r\n        Vec3.recycle(dir1);\r\n        Vec3.recycle(dir2);\r\n    }\r\n}\r\n","import { Input } from \"./Inputmgr\";\r\n\r\nexport enum MouseKeyEnum {\r\n    Left = \"MouseLeft\",\r\n    Middle = \"MouseMiddle\",\r\n    Right = \"MouseRight\", //\r\n    None = \"MouseNone\",\r\n}\r\nexport enum MouseEventEnum {\r\n    Up = \"mouseUp\",\r\n    Down = \"mouseDown\",\r\n    Move = \"mouseMove\",\r\n    Rotate = \"mouseRotate\",\r\n}\r\n\r\nexport class ClickEvent {\r\n    /**\r\n     * 屏幕坐标 posx\r\n     */\r\n    pointx: number;\r\n    /**\r\n     * 屏幕坐标 posy\r\n     */\r\n    pointy: number;\r\n    /**\r\n     * 滚轮\r\n     */\r\n    rotateDelta?: number;\r\n\r\n    movementX: number;\r\n    movementY: number;\r\n}\r\n\r\nexport class Mouse {\r\n    static StateInfo: { [key: string]: boolean } = {};\r\n    static MouseEvent: { [key: string]: { [type: string]: Function[] } } = {};\r\n\r\n    private static readonly keyDic: { [key: number]: MouseKeyEnum } = {};\r\n    static init(canvas: HTMLCanvasElement) {\r\n        this.keyDic[0] = MouseKeyEnum.Left;\r\n        this.keyDic[1] = MouseKeyEnum.Middle;\r\n        this.keyDic[2] = MouseKeyEnum.Right;\r\n\r\n        /**\r\n         * 屏蔽网页原生鼠标事件\r\n         */\r\n        document.oncontextmenu = e => {\r\n            return false;\r\n        };\r\n\r\n        // canvas.onmousedown=(ev: MouseEvent) => {\r\n        //     this.OnMouseDown(ev);\r\n        // };\r\n        // canvas.onmouseup=(ev: MouseEvent) => {\r\n        //     this.OnMouseUp(ev);\r\n        // };\r\n        // canvas.onmousemove=(ev: MouseEvent) => {\r\n        //     this.OnMouseMove(ev);\r\n        // };\r\n        // canvas.onmousewheel=(ev: MouseEvent) => {\r\n        //     this.OnMouseWheel(ev);\r\n        // };\r\n        // canvas.onmouseout=(ev: MouseEvent) => {\r\n        //     this.OnMouseOut(ev);\r\n        // };\r\n\r\n        // canvas.onmouseenter=(ev: MouseEvent) => {\r\n        //     this.OnMouseEnter(ev);\r\n        // };\r\n\r\n        canvas.addEventListener(\"mousedown\", (ev: MouseEvent) => {\r\n            let key = ev.button;\r\n            let keyEnum = this.keyDic[key];\r\n            this.StateInfo[keyEnum] = true;\r\n\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.executeMouseEvent(keyEnum, MouseEventEnum.Down, event);\r\n            this.executeMouseEvent(MouseKeyEnum.None, MouseEventEnum.Up, event);\r\n        });\r\n\r\n        canvas.addEventListener(\"mouseup\", (ev: MouseEvent) => {\r\n            let key = ev.button;\r\n            let keyEnum = this.keyDic[key];\r\n            this.StateInfo[keyEnum] = false;\r\n\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.executeMouseEvent(keyEnum, MouseEventEnum.Up, event);\r\n            this.executeMouseEvent(MouseKeyEnum.None, MouseEventEnum.Up, event);\r\n        });\r\n\r\n        canvas.addEventListener(\"mousemove\", (ev: MouseEvent) => {\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.executeMouseEvent(MouseKeyEnum.None, MouseEventEnum.Move, event);\r\n        });\r\n\r\n        canvas.addEventListener(\"mousewheel\", (ev: any) => {\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.executeMouseEvent(MouseKeyEnum.None, MouseEventEnum.Rotate, event);\r\n        });\r\n    }\r\n\r\n    private static executeMouseEvent(key: MouseKeyEnum, event: MouseEventEnum, ev: ClickEvent) {\r\n        if (this.MouseEvent[key] == null) return;\r\n        let funcArr = this.MouseEvent[key][event];\r\n        if (funcArr == null) return;\r\n        for (let key in funcArr) {\r\n            let func = funcArr[key];\r\n            func(ev);\r\n        }\r\n    }\r\n\r\n    private static getClickEventByMouseEvent(ev: any): ClickEvent {\r\n        let event = new ClickEvent();\r\n        event.pointx = ev.offsetX; //鼠标指针相对于目标节点内边位置的X坐标\r\n        event.pointy = ev.offsetY; //鼠标指针相对于目标节点内边位置的Y坐标\r\n\r\n        // Input.mousePosition.x = ev.offsetX;\r\n        // Input.mousePosition.y = ev.offsetY;\r\n\r\n        event.movementX = ev.movementX;\r\n        event.movementY = ev.movementY;\r\n\r\n        event.rotateDelta = ev.detail | ev.wheelDelta;\r\n        return event;\r\n    }\r\n}\r\n","export enum KeyCodeEnum {\r\n    A = \"A\",\r\n    B = \"B\",\r\n    C = \"C\",\r\n    D = \"D\",\r\n    E = \"E\",\r\n    F = \"F\",\r\n    G = \"G\",\r\n    H = \"H\",\r\n    I = \"I\",\r\n    J = \"J\",\r\n    K = \"K\",\r\n    L = \"L\",\r\n    M = \"M\",\r\n    N = \"N\",\r\n    O = \"O\",\r\n    P = \"P\",\r\n    Q = \"Q\",\r\n    R = \"R\",\r\n    S = \"S\",\r\n    T = \"T\",\r\n    U = \"U\",\r\n    V = \"V\",\r\n    W = \"W\",\r\n    X = \"X\",\r\n    Y = \"Y\",\r\n    Z = \"Z\",\r\n    SPACE = \" \",\r\n    ESC = \"ESC\",\r\n}\r\nexport enum KeyCodeEventEnum {\r\n    Up = \"KeyUp\",\r\n    Down = \"KeyDown\",\r\n}\r\n\r\nexport class Keyboard {\r\n    private static readonly KeyCodeDic: { [keycode: number]: string } = {};\r\n\r\n    static StateInfo: { [key: string]: boolean } = {};\r\n    static KeyEvent: { [key: string]: { [evetType: string]: Function[] } } = {};\r\n    static anyKeyEvent: { [evetType: string]: Function[] } = {};\r\n\r\n    private static keyDic: { [key: number]: string } = {};\r\n    static init() {\r\n        this.initKeyCodeMap();\r\n\r\n        document.onkeydown = (ev: KeyboardEvent) => {\r\n            this.OnKeyDown(ev);\r\n        };\r\n        document.onkeyup = (ev: KeyboardEvent) => {\r\n            this.OnKeyUp(ev);\r\n        };\r\n\r\n        // document.addEventListener(\"keydown\", (ev: KeyboardEvent) => {\r\n        //     this.OnKeyDown(ev);\r\n        // }, false);\r\n        // document.addEventListener(\"keyup\", (ev: KeyboardEvent) => {\r\n        //     this.OnKeyUp(ev);\r\n        // }, false);\r\n    }\r\n\r\n    private static OnKeyDown(ev: KeyboardEvent) {\r\n        let key = ev.keyCode;\r\n        let keystr = ev.key.toUpperCase(); //safari浏览器不支持keypress事件中的key属性\r\n        this.StateInfo[keystr] = true;\r\n        this.executeKeyboardEvent(keystr, KeyCodeEventEnum.Down, ev);\r\n\r\n        this.excuteAnyKeyEvent(KeyCodeEventEnum.Down, ev);\r\n    }\r\n\r\n    private static OnKeyUp(ev: KeyboardEvent) {\r\n        let key = ev.keyCode;\r\n        let keystr = ev.key.toUpperCase(); //safari浏览器不支持keypress事件中的key属性\r\n        this.StateInfo[keystr] = false;\r\n        this.executeKeyboardEvent(keystr, KeyCodeEventEnum.Up, ev);\r\n\r\n        this.excuteAnyKeyEvent(KeyCodeEventEnum.Up, ev);\r\n    }\r\n\r\n    private static executeKeyboardEvent(key: string, event: KeyCodeEventEnum, ev: KeyboardEvent) {\r\n        if (this.KeyEvent[key] == null) return;\r\n        let funcArr = this.KeyEvent[key][event];\r\n        for (let key in funcArr) {\r\n            let func = funcArr[key];\r\n            func(ev);\r\n        }\r\n    }\r\n    private static excuteAnyKeyEvent(event: KeyCodeEventEnum, ev: KeyboardEvent) {\r\n        let fucArr = this.anyKeyEvent[event];\r\n        if (fucArr == null) return;\r\n        for (let key in fucArr) {\r\n            let func = fucArr[key];\r\n            func(ev);\r\n        }\r\n    }\r\n    private static initKeyCodeMap() {\r\n        this.KeyCodeDic[65] = \"A\";\r\n        this.KeyCodeDic[66] = \"B\";\r\n        this.KeyCodeDic[67] = \"C\";\r\n        this.KeyCodeDic[68] = \"D\";\r\n        this.KeyCodeDic[69] = \"E\";\r\n        this.KeyCodeDic[70] = \"F\";\r\n        this.KeyCodeDic[71] = \"G\";\r\n        this.KeyCodeDic[72] = \"H\";\r\n        this.KeyCodeDic[73] = \"I\";\r\n        this.KeyCodeDic[74] = \"J\";\r\n        this.KeyCodeDic[75] = \"K\";\r\n        this.KeyCodeDic[76] = \"L\";\r\n        this.KeyCodeDic[77] = \"M\";\r\n        this.KeyCodeDic[78] = \"N\";\r\n        this.KeyCodeDic[79] = \"O\";\r\n        this.KeyCodeDic[80] = \"P\";\r\n        this.KeyCodeDic[81] = \"Q\";\r\n        this.KeyCodeDic[82] = \"R\";\r\n        this.KeyCodeDic[83] = \"S\";\r\n        this.KeyCodeDic[84] = \"T\";\r\n        this.KeyCodeDic[85] = \"U\";\r\n        this.KeyCodeDic[86] = \"V\";\r\n        this.KeyCodeDic[87] = \"W\";\r\n        this.KeyCodeDic[88] = \"X\";\r\n        this.KeyCodeDic[89] = \"Y\";\r\n        this.KeyCodeDic[90] = \"Z\";\r\n        this.KeyCodeDic[32] = \"SPACE\";\r\n        this.KeyCodeDic[27] = \"ESC\";\r\n    }\r\n}\r\n","import { Vec2 } from \"../mathD/vec2\";\r\nimport { Mouse, MouseKeyEnum, MouseEventEnum, ClickEvent } from \"./mouse\";\r\nimport { Keyboard, KeyCodeEnum, KeyCodeEventEnum } from \"./keyboard\";\r\n\r\n/**\r\n * 对应mouseevent 的button\r\n */\r\n\r\nexport class Input {\r\n    // static mousePosition: Vec2 = Vec2.create();\r\n    static init(canvas: HTMLCanvasElement) {\r\n        Mouse.init(canvas);\r\n        Keyboard.init();\r\n    }\r\n    static getKeyDown(key: KeyCodeEnum): boolean {\r\n        let state = Keyboard.StateInfo[key];\r\n        return state || false;\r\n    }\r\n    static getMouseDown(key: MouseKeyEnum): boolean {\r\n        let state = Mouse.StateInfo[key];\r\n        return state || false;\r\n    }\r\n\r\n    static addMouseEventListener(\r\n        eventType: MouseEventEnum,\r\n        func: (ev: ClickEvent) => void,\r\n        key: MouseKeyEnum = MouseKeyEnum.None,\r\n    ) {\r\n        if (Mouse.MouseEvent[key] == null) {\r\n            Mouse.MouseEvent[key] = {};\r\n        }\r\n        if (Mouse.MouseEvent[key][eventType] == null) {\r\n            Mouse.MouseEvent[key][eventType] = [];\r\n        }\r\n        Mouse.MouseEvent[key][eventType].push(func);\r\n    }\r\n\r\n    //    static addMouseWheelEventListener(func:(ev:MouseWheelEvent)=>void)\r\n    //    {\r\n    //        let key=MouseKeyEnum.None;\r\n    //        let ev=MouseEventEnum.Rotate;\r\n    //        if(Mouse.MouseEvent[key]==null)\r\n    //        {\r\n    //            Mouse.MouseEvent[key]={};\r\n    //        }\r\n    //        if(Mouse.MouseEvent[key][ev]==null)\r\n    //        {\r\n    //            Mouse.MouseEvent[key][ev]=[];\r\n    //        }\r\n    //        Mouse.MouseEvent[key][ev].push(func);\r\n    //    }\r\n\r\n    static addKeyCodeEventListener(\r\n        eventType: KeyCodeEventEnum,\r\n        func: (ev: KeyboardEvent) => void,\r\n        key: KeyCodeEnum = null,\r\n    ) {\r\n        if (key == null) {\r\n            if (Keyboard.anyKeyEvent[eventType] == null) {\r\n                Keyboard.anyKeyEvent[eventType] = [];\r\n            }\r\n            Keyboard.anyKeyEvent[eventType].push(func);\r\n        } else {\r\n            if (Keyboard.KeyEvent[key] == null) {\r\n                Keyboard.KeyEvent[key] = {};\r\n            }\r\n            if (Keyboard.KeyEvent[key][eventType] == null) {\r\n                Keyboard.KeyEvent[key][eventType] = [];\r\n            }\r\n            Keyboard.KeyEvent[key][eventType].push(func);\r\n        }\r\n    }\r\n}\r\n","import { Icomponent, Ientity, EC } from \"../ec\";\r\nimport { IframeState } from \"../../scene/frameState\";\r\nimport { Entity } from \"../entity\";\r\nimport { Quat } from \"../../mathD/quat\";\r\nimport { Input } from \"../../input/Inputmgr\";\r\nimport { MouseEventEnum, MouseKeyEnum, ClickEvent } from \"../../input/mouse\";\r\nimport { GameTimer } from \"../../gameTimer\";\r\nimport { KeyCodeEventEnum, KeyCodeEnum } from \"../../input/keyboard\";\r\nimport { Camera } from \"./camera\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\n\r\n@EC.RegComp\r\nexport class CameraController implements Icomponent {\r\n    entity: Entity;\r\n    update(frameState: IframeState): void {\r\n        this.doMove(frameState.deltaTime);\r\n    }\r\n    dispose(): void {}\r\n\r\n    moveSpeed: number = 0.2;\r\n    movemul: number = 5;\r\n    wheelSpeed: number = 1;\r\n    rotateSpeed: number = 0.1;\r\n    keyMap: { [id: number]: boolean } = {};\r\n    beRightClick: boolean = false;\r\n\r\n    rotAngle: Vec3 = Vec3.create();\r\n    active() {\r\n        Quat.ToEuler(this.entity.transform.localRotation, this.rotAngle);\r\n        Input.addMouseEventListener(MouseEventEnum.Move, ev => {\r\n            if (Input.getMouseDown(MouseKeyEnum.Right)) {\r\n                this.doRotate(ev.movementX, ev.movementY);\r\n            }\r\n        });\r\n        Input.addKeyCodeEventListener(KeyCodeEventEnum.Up, ev => {\r\n            this.moveSpeed = 0.2;\r\n        });\r\n        Input.addMouseEventListener(MouseEventEnum.Rotate, ev => {\r\n            this.doMouseWheel(ev);\r\n        });\r\n        // Input.addMouseWheelEventListener((ev)=>{\r\n        //     this.doMouseWheel(ev);\r\n        // })\r\n    }\r\n    private inverseDir: number = -1;\r\n    private moveVector: Vec3 = Vec3.create();\r\n    doMove(delta: number) {\r\n        if (this.entity.getCompByName(\"Camera\") == null) return;\r\n        if (Input.getMouseDown(MouseKeyEnum.Right)) {\r\n            if (Input.getKeyDown(KeyCodeEnum.A)) {\r\n                this.moveSpeed += this.movemul * delta;\r\n                this.entity.transform.getRightInWorld(this.moveVector);\r\n                Vec3.scale(this.moveVector, -1 * this.moveSpeed * delta, this.moveVector);\r\n                // vec3.scale(this.moveVector,this.inverseDir,this.moveVector);\r\n                Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n            }\r\n            if (Input.getKeyDown(KeyCodeEnum.D)) {\r\n                this.moveSpeed += this.movemul * delta;\r\n                this.entity.transform.getRightInWorld(this.moveVector);\r\n                Vec3.scale(this.moveVector, this.moveSpeed * delta, this.moveVector);\r\n                // vec3.scale(this.moveVector,this.inverseDir,this.moveVector);\r\n                Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n            }\r\n            if (Input.getKeyDown(KeyCodeEnum.W)) {\r\n                this.moveSpeed += this.movemul * delta;\r\n                this.entity.transform.getForwardInWorld(this.moveVector);\r\n                Vec3.scale(this.moveVector, this.moveSpeed * delta, this.moveVector);\r\n                Vec3.scale(this.moveVector, this.inverseDir, this.moveVector);\r\n                Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n            }\r\n            if (Input.getKeyDown(KeyCodeEnum.S)) {\r\n                this.moveSpeed += this.movemul * delta;\r\n                this.entity.transform.getForwardInWorld(this.moveVector);\r\n                Vec3.scale(this.moveVector, -1 * this.moveSpeed * delta, this.moveVector);\r\n                Vec3.scale(this.moveVector, this.inverseDir, this.moveVector);\r\n                Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n            }\r\n            if (Input.getKeyDown(KeyCodeEnum.E)) {\r\n                this.moveSpeed += this.movemul * delta;\r\n                Vec3.scale(Vec3.UP, this.moveSpeed * delta, this.moveVector);\r\n                Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n            }\r\n            if (Input.getKeyDown(KeyCodeEnum.Q)) {\r\n                this.moveSpeed += this.movemul * delta;\r\n                Vec3.scale(Vec3.DOWN, this.moveSpeed * delta, this.moveVector);\r\n                Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n            }\r\n            this.entity.transform.markDirty();\r\n        }\r\n    }\r\n    private camrot = Quat.create();\r\n    doRotate(rotateX: number, rotateY: number) {\r\n        // this.rotAngle[0] += rotateY * this.rotateSpeed;\r\n        // this.rotAngle[1] += rotateX * this.rotateSpeed;\r\n        // this.rotAngle[0] %= 360;\r\n        // this.rotAngle[1] %= 360;\r\n        Quat.FromEuler(0, rotateX * this.rotateSpeed * this.inverseDir, 0, this.camrot);\r\n        Quat.multiply(this.camrot, this.entity.transform.localRotation, this.entity.transform.localRotation);\r\n        Quat.FromEuler(rotateY * this.rotateSpeed * this.inverseDir, 0, 0, this.camrot);\r\n        Quat.multiply(this.entity.transform.localRotation, this.camrot, this.entity.transform.localRotation);\r\n        this.entity.transform.markDirty();\r\n    }\r\n    private doMouseWheel(ev: ClickEvent) {\r\n        if (this.entity.getCompByName(\"Camera\") == null) return;\r\n        this.entity.transform.getForwardInWorld(this.moveVector);\r\n        Vec3.scale(this.moveVector, this.wheelSpeed * ev.rotateDelta * 0.01 * this.inverseDir, this.moveVector);\r\n        Vec3.add(this.entity.transform.localPosition, this.moveVector, this.entity.transform.localPosition);\r\n        this.entity.transform.markDirty();\r\n    }\r\n    Dispose() {}\r\n}\r\n","import { Transform } from \"./components/transform\";\r\nimport { Ientity, Icomponent, EC, Irender, CullingMask } from \"./ec\";\r\n\r\nexport class Entity implements Ientity {\r\n    maskLayer: CullingMask = CullingMask.default;\r\n    name: string;\r\n    readonly guid: number;\r\n    beActive: boolean;\r\n    components: { [name: string]: Icomponent } = {};\r\n\r\n    constructor(name: string = null, compsArr: string[] = null) {\r\n        this.guid = newId();\r\n        this.name = name != null ? name : \"newEntity\";\r\n        this.beActive = true;\r\n\r\n        if (compsArr != null) {\r\n            for (let i = 0; i < compsArr.length; i++) {\r\n                this.addCompByName(compsArr[i]);\r\n            }\r\n        }\r\n        if (this.components[\"Transform\"] == null) {\r\n            this.addCompByName(\"Transform\");\r\n        }\r\n    }\r\n\r\n    get transform(): Transform {\r\n        return this.getCompByName(\"Transform\") as Transform;\r\n    }\r\n\r\n    addCompByName(name: string): Icomponent {\r\n        let comp = EC.NewComponent(name);\r\n        this.components[name] = comp;\r\n        comp.entity = this;\r\n        return comp;\r\n    }\r\n    getCompByName(compName: string): Icomponent {\r\n        return this.components[compName];\r\n    }\r\n    addComp(comp: Icomponent): Icomponent {\r\n        this.components[comp.constructor.name] = comp;\r\n        comp.entity = this;\r\n        return comp;\r\n    }\r\n    removeCompByName(name: string) {\r\n        if (this.components[name]) {\r\n            this.components[name].dispose();\r\n            delete this.components[name];\r\n        }\r\n    }\r\n\r\n    dispose(): void {\r\n        for (let key in this.components) {\r\n            this.components[key].dispose();\r\n        }\r\n        this.components = null;\r\n    }\r\n}\r\n\r\nfunction newId(): number {\r\n    return newId.prototype.id++;\r\n}\r\nnewId.prototype.id = -1;\r\n\r\nexport * from \"./components/cameracontroller\";\r\n","import { EC, Icomponent, Ientity } from \"../ec\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\nimport { Quat } from \"../../mathD/quat\";\r\nimport { Mat4 } from \"../../mathD/mat4\";\r\nimport { IframeState } from \"../../scene/frameState\";\r\nimport { Entity } from \"../entity\";\r\n\r\nenum DirtyFlagEnum {\r\n    WWORLD_POS = 0b000100,\r\n    WORLD_ROTATION = 0b001000,\r\n    WORLD_SCALE = 0b010000,\r\n    LOCALMAT = 0b000001,\r\n    WORLDMAT = 0b000010,\r\n}\r\n\r\n@EC.RegComp\r\nexport class Transform implements Icomponent {\r\n    entity: Entity;\r\n    parent: Transform;\r\n    children: Transform[] = [];\r\n    dirtyFlag: number = 0;\r\n\r\n    //------------------------local属性-------------------------------------------------------------\r\n    //----------------------------------------------------------------------------------------------\r\n    //localposition/localrot/localscale修改之后，markDirty 一下\r\n    //----------------------------------------------------------------------------------------------\r\n    localPosition: Vec3 = Vec3.create();\r\n    localRotation: Quat = Quat.create();\r\n    localScale: Vec3 = Vec3.create(1, 1, 1);\r\n    private _localMatrix: Mat4 = Mat4.create();\r\n    set localMatrix(value: Mat4) {\r\n        this._localMatrix = value;\r\n        Mat4.decompose(this._localMatrix, this.localScale, this.localRotation, this.localPosition);\r\n        this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.LOCALMAT;\r\n        this.dirtyFlag = this.dirtyFlag | DirtyFlagEnum.WORLDMAT;\r\n\r\n        Transform.NotifyChildSelfDirty(this);\r\n    }\r\n\r\n    get localMatrix() {\r\n        if (this.dirtyFlag & DirtyFlagEnum.LOCALMAT) {\r\n            Mat4.RTS(this.localPosition, this.localScale, this.localRotation, this._localMatrix);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.LOCALMAT;\r\n        }\r\n        return this._localMatrix;\r\n    }\r\n\r\n    //-------------------------world属性--------------------------------------------------------------\r\n    //------------------------------------------------------------------------------------------------\r\n    //得到worldmatrix后，不会立刻decompse得到worldpos/worldscale/worldort,而是dirty标记起来.\r\n    //setworld属性都是转换到setlocal属性\r\n    //------------------------------------------------------------------------------------------------\r\n    private _worldPosition: Vec3 = Vec3.create();\r\n    get worldPosition(): Vec3 {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.WWORLD_POS)) {\r\n            Mat4.getTranslationing(this.worldMatrix, this._worldPosition);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WWORLD_POS;\r\n        }\r\n        return this._worldPosition;\r\n    }\r\n    set worldPosition(value: Vec3) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            this.localPosition = value;\r\n        } else {\r\n            let invparentworld = Mat4.create();\r\n            Mat4.invert(this.parent.worldMatrix, invparentworld);\r\n            Mat4.transformPoint(value, invparentworld, this.localPosition);\r\n            Mat4.recycle(invparentworld);\r\n        }\r\n        this.markDirty();\r\n    }\r\n\r\n    private _worldRotation: Quat = Quat.create();\r\n    get worldRotation() {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.WORLD_ROTATION)) {\r\n            Mat4.getRotationing(this.worldMatrix, this._worldRotation, this.worldScale);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLD_ROTATION;\r\n        }\r\n        return this._worldRotation;\r\n    }\r\n    set worldRotation(value: Quat) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            this.localRotation = value;\r\n        } else {\r\n            let invparentworldrot = Quat.create();\r\n            Quat.inverse(this.parent.worldRotation, invparentworldrot);\r\n            Quat.multiply(invparentworldrot, value, this.localRotation);\r\n            Quat.recycle(invparentworldrot);\r\n        }\r\n        this.markDirty();\r\n    }\r\n\r\n    private _worldScale: Vec3 = Vec3.create(1, 1, 1);\r\n    get worldScale(): Vec3 {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.WORLD_SCALE)) {\r\n            Mat4.getScaling(this.worldMatrix, this._worldScale);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLD_SCALE;\r\n        }\r\n        return this._worldScale;\r\n    }\r\n    set worldScale(value: Vec3) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            this.localScale = value;\r\n        } else {\r\n            Vec3.divide(value, this.parent.worldScale, this.localScale);\r\n        }\r\n        this.markDirty();\r\n    }\r\n\r\n    private _worldMatrix: Mat4 = Mat4.create();\r\n    get worldMatrix(): Mat4 {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.LOCALMAT)) {\r\n            Mat4.multiply(this.parent.worldMatrix, this.localMatrix, this._worldMatrix);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLDMAT;\r\n            this.dirtyFlag =\r\n                this.dirtyFlag | DirtyFlagEnum.WORLD_ROTATION | DirtyFlagEnum.WORLD_SCALE | DirtyFlagEnum.WWORLD_POS;\r\n        }\r\n        return this._worldMatrix;\r\n    }\r\n    set worldMatrix(value: Mat4) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            Mat4.copy(value, this._localMatrix);\r\n            this.localMatrix = this._localMatrix;\r\n        } else {\r\n            let invparentworld = Mat4.create();\r\n            Mat4.invert(this.parent.worldMatrix, invparentworld);\r\n            Mat4.multiply(invparentworld, value, this._localMatrix);\r\n            this.localMatrix = this._localMatrix;\r\n            Mat4.recycle(invparentworld);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLDMAT;\r\n            this.dirtyFlag =\r\n                this.dirtyFlag | DirtyFlagEnum.WORLD_ROTATION | DirtyFlagEnum.WORLD_SCALE | DirtyFlagEnum.WWORLD_POS;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 获取世界坐标系下当前z轴的朝向\r\n     */\r\n    getForwardInWorld(out: Vec3) {\r\n        Mat4.transformVector3(Vec3.FORWARD, this.worldMatrix, out);\r\n        Vec3.normalize(out, out);\r\n    }\r\n    getRightInWorld(out: Vec3) {\r\n        Mat4.transformVector3(Vec3.RIGHT, this.worldMatrix, out);\r\n        Vec3.normalize(out, out);\r\n    }\r\n    getUpInWorld(out: Vec3) {\r\n        Mat4.transformVector3(Vec3.UP, this.worldMatrix, out);\r\n        Vec3.normalize(out, out);\r\n    }\r\n\r\n    /**\r\n     * 通知子节点需要计算worldmatrix\r\n     * @param node\r\n     */\r\n    private static NotifyChildSelfDirty(node: Transform) {\r\n        for (let key in node.children) {\r\n            let child = node.children[key];\r\n            if (!(child.dirtyFlag & DirtyFlagEnum.WORLDMAT)) {\r\n                child.dirtyFlag = child.dirtyFlag | DirtyFlagEnum.WORLDMAT;\r\n                this.NotifyChildSelfDirty(child);\r\n            }\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 修改local属性后，标记dirty\r\n     */\r\n    markDirty() {\r\n        this.dirtyFlag = this.dirtyFlag | DirtyFlagEnum.LOCALMAT | DirtyFlagEnum.WORLDMAT;\r\n        Transform.NotifyChildSelfDirty(this);\r\n    }\r\n\r\n    ///------------------------------------------父子结构\r\n    /**\r\n     * 添加子物体实例\r\n     */\r\n    addChild(node: Transform) {\r\n        if (node.parent != null) {\r\n            node.parent.removeChild(node);\r\n        }\r\n        this.children.push(node);\r\n        node.parent = this;\r\n\r\n        node.markDirty();\r\n    }\r\n    /**\r\n     * 移除所有子物体\r\n     */\r\n    removeAllChild() {\r\n        //if(this.children==undefined||this.children.length==0) return;\r\n        if (this.children.length == 0) return;\r\n        for (let i = 0, len = this.children.length; i < len; i++) {\r\n            this.children[i].parent = null;\r\n        }\r\n        this.children.length = 0;\r\n    }\r\n    /**\r\n     * 移除指定子物体\r\n     */\r\n    removeChild(node: Transform) {\r\n        if (node.parent != this || this.children.length == 0) {\r\n            throw new Error(\"not my child.\");\r\n        }\r\n        let i = this.children.indexOf(node);\r\n        if (i >= 0) {\r\n            this.children.splice(i, 1);\r\n            node.parent = null;\r\n        }\r\n    }\r\n\r\n    update(frameState: IframeState): void {}\r\n    dispose(): void {\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\r\n","import { Camera } from \"../ec/components/camera\";\r\n\r\nimport { IgeometryInfo, IprogramInfo } from \"../render/glRender\";\r\nimport { Geometry } from \"../resources/assets/geometry\";\r\nimport { Material } from \"../resources/assets/material\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { CullingMask } from \"../ec/ec\";\r\n\r\nexport interface IframeState {\r\n    renderList: Irenderable[];\r\n    cameraList: Camera[];\r\n    deltaTime: number;\r\n}\r\n\r\nexport interface Irenderable {\r\n    maskLayer: CullingMask;\r\n    geometry: Geometry;\r\n    // program: IprogramInfo;\r\n    // uniforms: { [name: string]: any };\r\n    material: Material;\r\n    modelMatrix: Mat4;\r\n}\r\n\r\nexport class FrameState implements IframeState {\r\n    deltaTime: number;\r\n    renderList: Irenderable[] = [];\r\n    cameraList: Camera[] = [];\r\n\r\n    reInit() {\r\n        this.renderList.length = 0;\r\n        this.cameraList.length = 0;\r\n    }\r\n}\r\n","import { Entity } from \"../ec/entity\";\r\nimport { Transform } from \"../ec/components/transform\";\r\nimport { FrameState, IframeState } from \"./frameState\";\r\nimport { RenderMachine } from \"../render/renderMachine\";\r\n\r\nexport class Scene {\r\n    private root: Transform = new Transform();\r\n    private frameState: FrameState = new FrameState();\r\n    private render: RenderMachine;\r\n    constructor(render: RenderMachine) {\r\n        this.render = render;\r\n    }\r\n    newEntity(name: string = null, compsArr: string[] = null): Entity {\r\n        let newobj = new Entity(name, compsArr);\r\n        this.addEntity(newobj);\r\n        return newobj;\r\n    }\r\n\r\n    addEntity(entity: Entity) {\r\n        this.root.addChild(entity.getCompByName(\"Transform\") as Transform);\r\n    }\r\n\r\n    foreachRootNodes(func: (rootItem: Transform) => void) {\r\n        for (let i = 0; i < this.root.children.length; i++) {\r\n            func(this.root.children[i]);\r\n        }\r\n    }\r\n\r\n    update(deltatime: number) {\r\n        this.frameState.reInit();\r\n        this.frameState.deltaTime = deltatime;\r\n        this.foreachRootNodes(node => {\r\n            this._updateNode(node, this.frameState);\r\n        });\r\n        this.render.frameRender(this.frameState);\r\n    }\r\n\r\n    private _updateNode(node: Transform, frameState: IframeState) {\r\n        let entity = node.entity;\r\n        if (!entity.beActive) return;\r\n\r\n        for (const key in node.entity.components) {\r\n            node.entity.components[key].update(frameState);\r\n        }\r\n        for (let i = 0, len = node.children.length; i < len; i++) {\r\n            this._updateNode(node.children[i], frameState);\r\n        }\r\n    }\r\n}\r\n","import { Icomponent, Ientity, Irender, CullingMask, EC } from \"../ec\";\r\nimport { Material } from \"../../resources/assets/material\";\r\nimport { Geometry } from \"../../resources/assets/geometry\";\r\nimport { IframeState, Irenderable } from \"../../scene/frameState\";\r\nimport { Transform } from \"./transform\";\r\n\r\n@EC.RegComp\r\nexport class Mesh implements Irender {\r\n    entity: Ientity;\r\n    mask: CullingMask = CullingMask.default;\r\n\r\n    private _renderDirty: boolean;\r\n\r\n    private _geometry: Geometry;\r\n    get geometry(): Geometry {\r\n        return this._geometry;\r\n    }\r\n    set geometry(value: Geometry) {\r\n        this._geometry = value;\r\n        this._renderDirty = true;\r\n    }\r\n\r\n    private _material: Material;\r\n    get material() {\r\n        return this._material;\r\n    }\r\n    set material(value: Material) {\r\n        this._material = value;\r\n        this._renderDirty = true;\r\n    }\r\n    private render: Irenderable;\r\n    update(frameState: IframeState): void {\r\n        let currentRender = (this.render && this.updateRender()) || {\r\n            maskLayer: this.entity.maskLayer,\r\n            geometry: this._geometry,\r\n            // program: this._material.program,\r\n            // uniforms: this._material.uniforms,\r\n            material: this._material,\r\n            modelMatrix: (this.entity.getCompByName(\"Transform\") as Transform).worldMatrix,\r\n        };\r\n        frameState.renderList.push(currentRender);\r\n    }\r\n    private updateRender(): Irenderable {\r\n        if (this._renderDirty) {\r\n            this.render.geometry = this._geometry;\r\n            // this.render.program = this._material.program;\r\n            // this.render.uniforms = this._material.uniforms;\r\n            this.render.material = this._material;\r\n            this._renderDirty = false;\r\n        }\r\n        this.render.maskLayer = this.entity.maskLayer;\r\n        return this.render;\r\n    }\r\n    dispose(): void {}\r\n}\r\n","import { Resource, AssetLoader } from \"./resources/resource\";\r\n// import { IassetMgr } from \"./resources/type\";\r\nimport { RenderMachine } from \"./render/renderMachine\";\r\nimport { GameScreen } from \"./gameScreen\";\r\nimport { Scene } from \"./scene/scene\";\r\nimport { GlRender } from \"./render/glRender\";\r\nimport { Input } from \"./input/Inputmgr\";\r\nexport class ToyGL {\r\n    private loop: Iloop;\r\n    // assetMgr: IassetMgr;\r\n    scene: Scene;\r\n    // setupRender(canvas: HTMLCanvasElement) {}\r\n\r\n    initByHtmlElement(element: HTMLDivElement | HTMLCanvasElement) {\r\n        let canvas: HTMLCanvasElement;\r\n        if (element instanceof HTMLDivElement) {\r\n            canvas = document.createElement(\"canvas\");\r\n            canvas.width = element.clientWidth;\r\n            canvas.width = element.clientHeight;\r\n\r\n            element.appendChild(canvas);\r\n            canvas.style.width = \"100%\";\r\n            canvas.style.height = \"100%\";\r\n        } else {\r\n            canvas = element;\r\n        }\r\n        Input.init(canvas);\r\n        let render = new RenderMachine(canvas);\r\n        this.scene = new Scene(render);\r\n        GameScreen.init(canvas);\r\n\r\n        this.loop = new Loop();\r\n        this.loop.update = deltaTime => {\r\n            if (this.preUpdate) {\r\n                this.preUpdate(deltaTime);\r\n            }\r\n            this.frameUpdate(deltaTime);\r\n        };\r\n    }\r\n    preUpdate: (deltaTime: number) => void;\r\n    private frameUpdate = (deltaTime: number) => {\r\n        this.scene.update(deltaTime);\r\n    };\r\n}\r\n\r\nexport class Loop implements Iloop {\r\n    active() {\r\n        this.beActive = true;\r\n    }\r\n    disActive() {\r\n        this.beActive = false;\r\n    }\r\n    update: (deltaTime: number) => void = () => {};\r\n\r\n    private beActive: boolean = false;\r\n    private _lastTime: number;\r\n    constructor() {\r\n        let func = () => {\r\n            let now = Date.now();\r\n            let deltaTime = now - this._lastTime || now;\r\n            this._lastTime = now;\r\n            if (this.beActive) {\r\n                this.update(deltaTime);\r\n            }\r\n            requestAnimationFrame(func);\r\n        };\r\n        func();\r\n        this.beActive = true;\r\n    }\r\n}\r\n\r\nexport interface Iloop {\r\n    active(): void;\r\n    disActive(): void;\r\n    update: (deltaTime: number) => void;\r\n}\r\n\r\nexport * from \"./ec/components/mesh\";\r\n","export enum LoadEnum {\r\n    Success = \"Success\",\r\n    Failed = \"Failed\",\r\n    Loading = \"Loading\",\r\n    None = \"None\",\r\n}\r\n","//通过url获取资源的名称(包含尾缀)\r\nexport function getFileName(url: string): string {\r\n    let filei = url.lastIndexOf(\"/\");\r\n    let file = url.substr(filei + 1);\r\n    return file;\r\n}\r\nexport function getFileNameWithoutExtralName(url: string): string {\r\n    let filei = url.lastIndexOf(\"/\");\r\n    let file = url.substr(filei + 1);\r\n\r\n    let index = file.indexOf(\".\", 0);\r\n    let name = file.substr(0, index);\r\n    return name;\r\n}\r\n// static getAssetExtralType(url: string): AssetExtralEnum {\r\n//     let index = url.lastIndexOf(\"/\");\r\n//     let filename = url.substr(index + 1);\r\n//     index = filename.indexOf(\".\", 0);\r\n//     let extname = filename.substr(index);\r\n//     let type = this.ExtendNameDic[extname];\r\n//     if (type == null) {\r\n//         console.warn(\"Load Asset Failed.type:(\" + type + \") not have loader yet\");\r\n//     }\r\n//     return type;\r\n// }\r\nexport function getAssetExtralName(url: string): string {\r\n    let index = url.lastIndexOf(\"/\");\r\n    let filename = url.substr(index + 1);\r\n    index = filename.indexOf(\".\", 0);\r\n    let extname = filename.substr(index);\r\n    return extname;\r\n}\r\n\r\nexport function getAssetFlode(url: string): string {\r\n    let filei = url.lastIndexOf(\"/\");\r\n    let file = url.substr(0, filei);\r\n    return file;\r\n}\r\n","import { IassetLoader, IassetLoadInfo, Iasset } from \"./type\";\r\nimport { LoadEnum } from \"./base/loadEnum\";\r\nimport { IprogramInfo } from \"../render/glRender\";\r\nimport { getAssetExtralName } from \"./base/helper\";\r\n/**\r\n * 资源都继承web3dAsset 实现Iasset接口,有唯一ID\r\n *\r\n * assetmgr仅仅管理load进来的资源\r\n * load过的资源再次load不会造成重复加载\r\n * 所有的资源都是从资源管理器load（url）出来，其他接口全部封闭\r\n * 资源的来源有三种：new、load、内置资源\r\n * bundle包不会shared asset,bundle不会相互依赖。即如果多个bundle引用同一个asset,每个包都包含一份该资源.\r\n *\r\n *\r\n * 资源释放：\r\n * gameobject（new或instance的）通过dispose 销毁自己的内存，不销毁引用的asset\r\n * asset 可以通过dispose 销毁自己的内存。包释放(prefab/scene/gltfbundle)也属于asset的释放,包会释放自己依赖的asset。\r\n *\r\n */\r\n\r\nexport class AssetLoader {\r\n    static RegisterAssetLoader(extral: string, factory: IassetLoader) {\r\n        // this.ExtendNameDic[extral] = type;\r\n        console.warn(\"loader type:\", extral);\r\n        this.RESLoadDic[extral] = factory;\r\n    }\r\n    //private static ExtendNameDic: { [name: string]: AssetExtralEnum } = {};\r\n    private static RESLoadDic: { [ExtralName: string]: IassetLoader } = {};\r\n\r\n    static getAssetLoader(url: string): IassetLoader {\r\n        let extralType = getAssetExtralName(url);\r\n        let factory = this.RESLoadDic[extralType];\r\n        return factory;\r\n    }\r\n    // //-------------------资源加载拓展\r\n    // static RegisterAssetExtensionLoader(extral: string, factory: () => IassetLoader) {\r\n    //     this.RESExtensionLoadDic[extral] = factory;\r\n    // }\r\n\r\n    // private static RESExtensionLoadDic: { [ExtralName: string]: () => IassetLoader } = {};\r\n\r\n    static async addLoader() {\r\n        await import(\"./loader/loadTxt\").then(mod => {\r\n            this.RegisterAssetLoader(\".txt\", new mod.LoadTxt());\r\n        });\r\n        await import(\"./loader/loadShader\").then(mod => {\r\n            this.RegisterAssetLoader(\".shader.json\", new mod.LoadShader());\r\n        });\r\n        await import(\"./loader/loadTexture\").then(mod => {\r\n            this.RegisterAssetLoader(\".png\", new mod.LoadTextureSample());\r\n            this.RegisterAssetLoader(\".jpg\", new mod.LoadTextureSample());\r\n        });\r\n        await import(\"./glTF/loadglTF\").then(mod => {\r\n            this.RegisterAssetLoader(\".gltf\", new mod.LoadGlTF());\r\n        });\r\n    }\r\n}\r\n\r\nexport class Resource {\r\n    //#endregion\r\n    /**\r\n     * 调用load方法就会塞到这里面来\r\n     */\r\n    private static loadMap: {\r\n        [url: string]: { asset: Iasset | null; loadinfo: IassetLoadInfo | null };\r\n    } = {};\r\n    /**\r\n     * load同一个资源监听回调\r\n     */\r\n    private static loadingUrl: { [url: string]: ((asset: Iasset | null, loadInfo?: IassetLoadInfo) => void)[] } = {}; //\r\n\r\n    static getAssetLoadInfo(url: string): IassetLoadInfo | null {\r\n        if (this.loadMap[url]) {\r\n            return this.loadMap[url].loadinfo;\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n\r\n    /**\r\n     * 加载资源\r\n     * @param url 地址\r\n     * @param onFinish  load回调]\r\n     */\r\n    static load(\r\n        url: string,\r\n        onFinish: ((asset: Iasset | null, loadInfo?: IassetLoadInfo) => void) | null = null,\r\n        onProgress: (progress: number) => void = null,\r\n    ): Iasset | null {\r\n        if (this.loadMap[url]) {\r\n            if (onFinish) {\r\n                switch (this.loadMap[url].loadinfo.loadState) {\r\n                    case LoadEnum.Success:\r\n                    case LoadEnum.Failed:\r\n                        onFinish(this.loadMap[url].asset, this.loadMap[url].loadinfo);\r\n                        break;\r\n                    case LoadEnum.Loading:\r\n                        if (this.loadingUrl[url] == null) {\r\n                            this.loadingUrl[url] = [];\r\n                        }\r\n                        this.loadingUrl[url].push(onFinish);\r\n                        break;\r\n                    default:\r\n                    case LoadEnum.None:\r\n                        console.error(\"load error 为啥出现这种情况！\");\r\n                        break;\r\n                }\r\n            }\r\n            return this.loadMap[url].asset;\r\n        } else {\r\n            let factory: IassetLoader = AssetLoader.getAssetLoader(url);\r\n            let _state: IassetLoadInfo = { url: url, loadState: LoadEnum.None };\r\n            this.loadMap[url] = { asset: null, loadinfo: _state };\r\n\r\n            if (factory == null) {\r\n                let errorMsg =\r\n                    \"ERROR: load Asset error. INfo: not have Load Func to handle (\" +\r\n                    getAssetExtralName(url) +\r\n                    \") type File.  load URL:\" +\r\n                    url;\r\n                _state.err = new Error(errorMsg);\r\n                console.error(errorMsg);\r\n                if (onFinish) {\r\n                    onFinish(null, _state);\r\n                }\r\n                return null;\r\n            } else {\r\n                let asset = factory.load(\r\n                    url,\r\n                    (asset, state) => {\r\n                        //-------------------------------存进资源存储map\r\n                        _state.loadState = state.loadState;\r\n                        //---------------------回调事件\r\n                        if (onFinish) {\r\n                            onFinish(asset, state);\r\n                        }\r\n                        //------------------监听此资源loadfinish的事件\r\n                        let arr = this.loadingUrl[url];\r\n                        this.loadingUrl[url] = null;\r\n                        delete this.loadingUrl[url]; //set loadingUrl null\r\n                        if (arr) {\r\n                            arr.forEach(func => {\r\n                                func(asset, state);\r\n                            });\r\n                        }\r\n                    },\r\n                    onProgress,\r\n                );\r\n                _state.loadState = LoadEnum.Loading;\r\n                this.loadMap[url].asset = asset;\r\n                return asset;\r\n            }\r\n        }\r\n    }\r\n\r\n    static loadAsync(url: string): Promise<Iasset> {\r\n        return new Promise((resolve, reject) => {\r\n            this.load(url, (asset, loadInfo) => {\r\n                if (loadInfo.loadState == LoadEnum.Success) {\r\n                    resolve(asset);\r\n                } else {\r\n                    reject(new Error(\"Load Failed.\"));\r\n                }\r\n            });\r\n        });\r\n    }\r\n}\r\n\r\n//<<<<<<<--------1.  new出来的自己管理,如果进行管控,assetmgr必然持有该资源的引用。当用该资源的对象被释放,该对象对该资源的引用也就没了,但是assetmgr持有它的引用，资源也就是没被释放;\r\n//释放对象的时候我们又不能对资源进行释放，不然其他对象使用该资源就会报错，对于new出的资源,没被使用就会被系统自动释放或者自己释放-------------------->>>>>>>>>\r\n//<<<<<<<------- 2.  资源的name不作为asset的标识.不然造成一大堆麻烦。如果允许重名资源在assetmgr获取资源的需要通过bundlename /assetname才能正确获取资源,bundlename于asset来说不一定有;\r\n//new asset的时候还要检查重名资源,允许还是不允许都是麻烦—--->>>>>>>>>>>>>>>>>>>>>>>\r\n//<<<<<<<--------3.  资源本身的描述json，不会被作为资源被assetmgr管理起来-->>>\r\n","import { Resource } from \"../src/resources/resource\";\r\nimport { ToyGL } from \"../src/toygl\";\r\nimport { GltfAsset } from \"../src/resources/assets/gltfAsset\";\r\nimport { Entity } from \"../src/ec/entity\";\r\nimport { Transform } from \"../src/ec/components/transform\";\r\nimport { CameraController } from \"../src/ec/components/cameracontroller\";\r\nimport { Quat } from \"../src/mathD/quat\";\r\nexport class LoadGltf {\r\n    static done(toy: ToyGL) {\r\n        let cubeUrl = \"../res/glTF/Cube/Cube.gltf\";\r\n        let apple = \"../res/glTF/apple/AppleTree.gltf\";\r\n        let CesiumMan = \"../res/glTF/CesiumMan/glTF/CesiumMan.gltf\";\r\n        let duck = \"../res/glTF/duck/Duck.gltf\";\r\n        let box = \"../res/glTF/BoxAnimated/glTF/BoxAnimated.gltf\";\r\n        let RiggedSimple = \"../res/glTF/RiggedSimple/glTF/RiggedSimple.gltf\";\r\n\r\n        Resource.loadAsync(CesiumMan).then(model => {\r\n            let gltf = model as GltfAsset;\r\n\r\n            let root = new Entity(\"rootTag\");\r\n            toy.scene.addEntity(root);\r\n            gltf.roots.forEach(item => {\r\n                root.transform.addChild(item.entity.transform);\r\n                // toy.scene.addEntity();\r\n            });\r\n\r\n            let camobj = new Entity(\"cameobj\", [\"Camera\", \"CameraController\"]);\r\n            let camCtr = camobj.getCompByName(\"CameraController\") as CameraController;\r\n            let trans = camobj.getCompByName(\"Transform\") as Transform;\r\n            trans.localPosition.z = 15;\r\n            trans.markDirty();\r\n            toy.scene.addEntity(camobj);\r\n\r\n            camCtr.active();\r\n\r\n            let roty = 0;\r\n            toy.preUpdate = delta => {\r\n                roty += delta * 0.01;\r\n                Quat.FromEuler(0, roty, 0, root.transform.localRotation);\r\n                root.transform.markDirty();\r\n            };\r\n        });\r\n    }\r\n}\r\n","import { Texture } from \"./../src/resources/assets/texture\";\r\nimport { Transform } from \"./../src/ec/components/transform\";\r\nimport { ToyGL } from \"../src/toygl\";\r\nimport { DefGeometry } from \"../src/resources/defGeometry\";\r\nimport { DefShader } from \"../src/resources/defShader\";\r\nimport { Material } from \"../src/resources/assets/material\";\r\nimport { Entity } from \"../src/ec/entity\";\r\nimport { Mesh } from \"../src/ec/components/mesh\";\r\nimport { Color } from \"../src/mathD/color\";\r\nimport { Resource, AssetLoader } from \"../src/resources/resource\";\r\nimport { Shader } from \"../src/resources/assets/shader\";\r\nimport { Base } from \"./bass\";\r\nimport { LoadGltf } from \"./loadGltf\";\r\n\r\nwindow.onload = () => {\r\n    let toy = new ToyGL();\r\n    toy.initByHtmlElement(document.getElementById(\"canvas\") as HTMLCanvasElement);\r\n    AssetLoader.addLoader().then(() => {\r\n        // Base.done(toy);\r\n        LoadGltf.done(toy);\r\n    });\r\n};\r\n","import { Iasset } from \"../type\";\r\n\r\nexport class ResID {\r\n    private static idAll: number = 0;\r\n    static next(): number {\r\n        let next = ResID.idAll;\r\n        ResID.idAll++;\r\n        return next;\r\n    }\r\n}\r\n\r\nexport interface ItoyAsset {\r\n    name?: string;\r\n    URL?: string;\r\n    beDefaultAsset?: boolean;\r\n}\r\n\r\nexport abstract class ToyAsset implements Iasset {\r\n    name: string;\r\n    readonly guid: number;\r\n    readonly URL: string;\r\n    readonly beDefaultAsset: boolean;\r\n    readonly type: string;\r\n\r\n    constructor(param: ItoyAsset) {\r\n        this.guid = ResID.next();\r\n        this.name = (param && param.name) || \"asset_\" + this.guid;\r\n        this.URL = param && param.URL;\r\n        this.beDefaultAsset = (param && param.beDefaultAsset) || false;\r\n    }\r\n    abstract dispose(): void;\r\n}\r\n","import { ToyAsset } from \"../base/toyAsset\";\r\n\r\nexport class TextAsset extends ToyAsset {\r\n    constructor(name: string, url: string) {\r\n        super({ name: name, URL: url });\r\n    }\r\n    content: string = null;\r\n\r\n    dispose() {\r\n        if (this.beDefaultAsset) return;\r\n        this.content = null;\r\n    }\r\n}\r\n","﻿export enum ResponseTypeEnum {\r\n    text = \"text\",\r\n    json = \"json\",\r\n    blob = \"blob\",\r\n    arraybuffer = \"arraybuffer\",\r\n}\r\n\r\n/**\r\n * Load a script (identified by an url). When the url returns, the\r\n * content of this file is added into a new script element, attached to the DOM (body element)\r\n */\r\nexport function LoadScript(scriptUrl: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        var head = document.getElementsByTagName(\"head\")[0];\r\n        var script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.src = scriptUrl;\r\n        head.appendChild(script);\r\n        script.onload = () => {\r\n            resolve();\r\n        };\r\n        script.onerror = e => {\r\n            reject(e);\r\n        };\r\n    });\r\n}\r\ninterface IdownloadInfo {\r\n    loaded: number;\r\n    total: number;\r\n}\r\n\r\nfunction httpRequeset(\r\n    url: string,\r\n    type: ResponseTypeEnum,\r\n    onProgress: (info: IdownloadInfo) => void = null,\r\n): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n        let req = new XMLHttpRequest();\r\n        req.open(\"GET\", url);\r\n        req.responseType = type;\r\n\r\n        req.onprogress = e => {\r\n            if (onProgress) {\r\n                onProgress({ loaded: e.loaded, total: e.total });\r\n            }\r\n        };\r\n        req.onerror = e => {\r\n            reject(e);\r\n        };\r\n        req.send();\r\n\r\n        req.onreadystatechange = () => {\r\n            if (req.readyState == 4) {\r\n                if (req.status == 404) {\r\n                    reject(new Error(\"got a 404:\" + url));\r\n                    return;\r\n                }\r\n                resolve(req.response);\r\n            }\r\n        };\r\n    });\r\n}\r\nexport function loadJson(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<JSON> {\r\n    return httpRequeset(url, ResponseTypeEnum.json, onProgress);\r\n}\r\nexport function loadText(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<string> {\r\n    return httpRequeset(url, ResponseTypeEnum.text, onProgress);\r\n}\r\nexport function loadArrayBuffer(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<ArrayBuffer> {\r\n    return httpRequeset(url, ResponseTypeEnum.arraybuffer, onProgress);\r\n}\r\n\r\nexport function loadBlob(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<Blob> {\r\n    return httpRequeset(url, ResponseTypeEnum.blob, onProgress);\r\n}\r\n\r\nexport function loadImg(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<HTMLImageElement> {\r\n    return new Promise<HTMLImageElement>((resolve, reject) => {\r\n        let img = new Image();\r\n        img.src = url;\r\n        img.onerror = error => {\r\n            reject(error);\r\n        };\r\n        img.onload = () => {\r\n            resolve(img);\r\n        };\r\n        img.onprogress = e => {\r\n            if (onProgress) {\r\n                onProgress({ loaded: e.loaded, total: e.total });\r\n            }\r\n        };\r\n    });\r\n}\r\nexport function arraybufferToImge(data: ArrayBuffer): Promise<HTMLImageElement> {\r\n    return new Promise<HTMLImageElement>((resolve, reject) => {\r\n        var arrayBufferView = new Uint8Array(data);\r\n        var blob = new Blob([arrayBufferView], { type: \"image/jpeg\" });\r\n        var imageUrl = window.URL.createObjectURL(blob);\r\n        let img = new Image();\r\n        img.src = imageUrl;\r\n        img.onerror = error => {\r\n            reject(error);\r\n        };\r\n        img.onload = () => {\r\n            URL.revokeObjectURL(img.src);\r\n            resolve(img);\r\n        };\r\n    });\r\n}\r\n","import { IassetLoader, Iasset, IassetLoadInfo } from \"../type\";\r\nimport { getFileName } from \"../base/helper\";\r\nimport { TextAsset } from \"../assets/textAsset\";\r\nimport { loadText } from \"../../io/loadtool\";\r\nimport { LoadEnum } from \"../base/loadEnum\";\r\n\r\nexport class LoadTxt implements IassetLoader {\r\n    load(\r\n        url: string,\r\n        onFinish: (asset: Iasset, state: IassetLoadInfo) => void,\r\n        onProgress: (progress: number) => void,\r\n    ): Iasset {\r\n        let name = getFileName(url);\r\n        let text = new TextAsset(name, url);\r\n        loadText(url, info => {\r\n            if (onProgress) {\r\n                onProgress(info.loaded / info.total);\r\n            }\r\n        })\r\n            .then(value => {\r\n                text.content = value;\r\n                if (onFinish) {\r\n                    onFinish(text, { url: url, loadState: LoadEnum.Success });\r\n                }\r\n            })\r\n            .catch(error => {\r\n                let errorMsg = \"ERROR:Load Txt/json Error!\\n  Info: LOAD URL: \" + url + \"  LOAD MSG:\" + error.message;\r\n                if (onFinish) {\r\n                    onFinish(text, { url: url, loadState: LoadEnum.Failed, err: new Error(errorMsg) });\r\n                }\r\n            });\r\n        return text;\r\n    }\r\n}\r\n// const _loadtxt: LoadTxt = new LoadTxt();\r\n// AssetMgr.RegisterAssetLoader(\".vs.glsl\", () => _loadtxt);\r\n// AssetMgr.RegisterAssetLoader(\".fs.glsl\", () => _loadtxt);\r\n// AssetMgr.RegisterAssetLoader(\".txt\", () => _loadtxt);\r\n","import { ToyAsset, ItoyAsset } from \"../base/toyAsset\";\r\nimport { IprogramInfo, GlRender } from \"../../render/glRender\";\r\nimport { RenderLayerEnum } from \"../../ec/ec\";\r\nimport { IprogramState, IuniformInfo, IattributeInfo, IprogramOptions } from \"twebgl/dist/types/type\";\r\n\r\nexport class Shader extends ToyAsset {\r\n    layer: RenderLayerEnum = RenderLayerEnum.Geometry;\r\n    queue: number = 0;\r\n    mapUniformDef: { [key: string]: { type: UniformTypeEnum; value: any } };\r\n    passes: { [feature: string]: IprogramInfo[] };\r\n\r\n    constructor(param?: ItoyAsset) {\r\n        super(param);\r\n    }\r\n\r\n    static fromCustomData(data: IshaderOptions) {\r\n        let newAsset = new Shader({ name: \"custom_shader\" });\r\n        newAsset.layer = data.layer || RenderLayerEnum.Geometry;\r\n        newAsset.queue = data.queue != null ? data.queue : 0;\r\n\r\n        let features = data.feature != null ? [...data.feature, \"base\"] : [\"base\"];\r\n        let passes = data.passes;\r\n\r\n        let featurePasses: { [feature: string]: IprogramInfo[] } = {};\r\n        for (let i = 0; i < features.length; i++) {\r\n            let type = features[i];\r\n            let featureStr = getFeaturShderStr(type);\r\n\r\n            let programArr = [];\r\n            for (let i = 0; i < passes.length; i++) {\r\n                let passitem = passes[i];\r\n                let program = GlRender.createProgram({\r\n                    program: {\r\n                        vs: featureStr + (passitem.program as any).vs,\r\n                        fs: featureStr + (passitem.program as any).fs,\r\n                        name: null,\r\n                    },\r\n                    states: passitem.states,\r\n                    uniforms: passitem.uniforms,\r\n                });\r\n                programArr.push(program);\r\n            }\r\n            featurePasses[type] = programArr;\r\n        }\r\n\r\n        newAsset.passes = featurePasses;\r\n        return newAsset;\r\n    }\r\n    dispose(): void {}\r\n}\r\n\r\nexport interface IshaderInfo {\r\n    layer: RenderLayerEnum;\r\n    queue: number;\r\n    mapUniformDef: { [key: string]: { type: UniformTypeEnum; value: any } };\r\n    passes: { [feature: string]: IprogramInfo[] };\r\n}\r\n\r\nexport enum UniformTypeEnum {\r\n    FLOAT,\r\n    FLOAT_VEC2,\r\n    FLOAT_VEC3,\r\n    FLOAT_VEC4,\r\n    TEXTURE,\r\n}\r\n\r\nexport interface IshaderOptions {\r\n    layer?: RenderLayerEnum;\r\n    queue?: number;\r\n    passes: IprogramOptions[];\r\n    feature?: string[];\r\n}\r\n\r\nexport function getFeaturShderStr(type: string) {\r\n    switch (type) {\r\n        case \"base\":\r\n            return \"\";\r\n        case \"fog\":\r\n            return \"#define FOG \\n\";\r\n        case \"skin\":\r\n            return \"#define SKIN \\n\";\r\n        case \"skin_fog\":\r\n            return \"#define SKIN \\n\" + \"#define FOG \\n\";\r\n        case \"lightmap\":\r\n            return \"#define LIGHTMAP \\n\";\r\n        case \"lightmap_fog\":\r\n            return \"#define LIGHTMAP \\n\" + \"#define FOG \\n\";\r\n        case \"instance\":\r\n            return \"#define INSTANCE \\n\";\r\n    }\r\n}\r\n","import { Vec3 } from \"./vec3\";\r\nimport { Mat2d } from \"./mat2d\";\r\nimport { Mat4 } from \"./mat4\";\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Vec2 extends Float32Array {\r\n    get x() {\r\n        return this[0];\r\n    }\r\n    set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    private static Recycle: Vec2[] = [];\r\n    public static create(x: number = 0, y: number = 0) {\r\n        if (Vec2.Recycle && Vec2.Recycle.length > 0) {\r\n            let item = Vec2.Recycle.pop() as Vec2;\r\n            item[0] = x;\r\n            item[1] = y;\r\n            return item;\r\n        } else {\r\n            let item = new Vec2(x, y);\r\n            // item[0]=x;\r\n            // item[1]=y;\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Vec2): Vec2 {\r\n        if (Vec2.Recycle.length > 0) {\r\n            let item = Vec2.Recycle.pop() as Vec2;\r\n            Vec2.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Vec2(from[0], from[1]);\r\n            // item[0]=from[0];\r\n            // item[1]=from[1];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Vec2) {\r\n        Vec2.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Vec2.Recycle.length = 0;\r\n    }\r\n    private constructor(x: number = 0, y: number = 0) {\r\n        super(2);\r\n        this[0] = x;\r\n        this[1] = y;\r\n    }\r\n    /**\r\n     * Copy the values from one vec2 to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(a: Vec2 | number[], out: Vec2): Vec2 {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static add(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts vector b from vector a\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static subtract(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    //public static mul(a: vec2, b: vec2,out: vec2): vec2 { return; }\r\n\r\n    /**\r\n     * Divides two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static divide(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Divides two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    //public static div(a: vec2, b: vec2,out: vec2): vec2 { return; }\r\n\r\n    /**\r\n     * Math.ceil the components of a vec2\r\n     *\r\n     * @param {Vec2} out the receiving vector\r\n     * @param {Vec2} a vector to ceil\r\n     * @returns {Vec2} out\r\n     */\r\n    public static ceil(a: Vec2, out: Vec2): Vec2 {\r\n        out[0] = Math.ceil(a[0]);\r\n        out[1] = Math.ceil(a[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.floor the components of a vec2\r\n     *\r\n     * @param {Vec2} out the receiving vector\r\n     * @param {Vec2} a vector to floor\r\n     * @returns {Vec2} out\r\n     */\r\n    public static floor(a: Vec2, out: Vec2): Vec2 {\r\n        out[0] = Math.floor(a[0]);\r\n        out[1] = Math.floor(a[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum of two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static min(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum of two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static max(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.round the components of a vec2\r\n     *\r\n     * @param {Vec2} out the receiving vector\r\n     * @param {Vec2} a vector to round\r\n     * @returns {Vec2} out\r\n     */\r\n    public static round(a: Vec2, out: Vec2): Vec2 {\r\n        out[0] = Math.round(a[0]);\r\n        out[1] = Math.round(a[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a vec2 by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     */\r\n    public static scale(a: Vec2, b: number, out: Vec2): Vec2 {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        return out;\r\n    }\r\n\r\n    public static scaleByVec2(a: Vec2, b: Vec2, out: Vec2): Vec2 {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        return out;\r\n    }\r\n    /**\r\n     * Adds two vec2's after scaling the second operand by a scalar value\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param scale the amount to scale b by before adding\r\n     * @returns out\r\n     */\r\n    public static scaleAndAdd(a: Vec2, b: Vec2, scale: number, out: Vec2): Vec2 {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    public static distance(a: Vec2, b: Vec2): number {\r\n        let x = b[0] - a[0],\r\n            y = b[1] - a[1];\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    //public static dist(a: vec2, b: vec2): number { return; }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    public static squaredDistance(a: Vec2, b: Vec2): number {\r\n        let x = b[0] - a[0],\r\n            y = b[1] - a[1];\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    //public static sqrDist(a: vec2, b: vec2): number { return; }\r\n\r\n    /**\r\n     * Calculates the length of a vec2\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    public static length_(a: Vec2): number {\r\n        let x = a[0],\r\n            y = a[1];\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a vec2\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    //public static len(a: vec2): number { return; }\r\n\r\n    /**\r\n     * Calculates the squared length of a vec2\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    public static squaredLength(a: Vec2): number {\r\n        let x = a[0],\r\n            y = a[1];\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared length of a vec2\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    //public static sqrLen(a: vec2): number { return; }\r\n\r\n    /**\r\n     * Negates the components of a vec2\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to negate\r\n     * @returns out\r\n     */\r\n    public static negate(a: Vec2, out: Vec2): Vec2 {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of the components of a vec2\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to invert\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Vec2, out: Vec2): Vec2 {\r\n        out[0] = 1.0 / a[0];\r\n        out[1] = 1.0 / a[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Normalize a vec2\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to normalize\r\n     * @returns out\r\n     */\r\n    public static normalize(a: Vec2, out: Vec2): Vec2 {\r\n        let x = a[0],\r\n            y = a[1];\r\n        let len = x * x + y * y;\r\n        if (len > 0) {\r\n            //TODO: evaluate use of glm_invsqrt here?\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = a[0] * len;\r\n            out[1] = a[1] * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     */\r\n    public static dot(a: Vec2, b: Vec2): number {\r\n        return a[0] * b[0] + a[1] * b[1];\r\n    }\r\n\r\n    /**\r\n     * Computes the cross product of two vec2's\r\n     * Note that the cross product must by definition produce a 3D vector\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static cross(a: Vec2, b: Vec2, out: Vec3): Vec2 {\r\n        let z = a[0] * b[1] - a[1] * b[0];\r\n        out[0] = out[1] = 0;\r\n        out[2] = z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param from the first operand\r\n     * @param to the second operand\r\n     * @param lerp interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static lerp(from: Vec2, to: Vec2, lerp: number, out: Vec2): Vec2 {\r\n        let ax = from[0],\r\n            ay = from[1];\r\n        out[0] = ax + lerp * (to[0] - ax);\r\n        out[1] = ay + lerp * (to[1] - ay);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a random vector with the given scale\r\n     *\r\n     * @param out the receiving vector\r\n     * @param scale Length of the resulting vector. If ommitted, a unit vector will be returned\r\n     * @returns out\r\n     */\r\n    public static random(scale: number = 1, out: Vec2): Vec2 {\r\n        scale = scale || 1.0;\r\n        let r = Math.random() * 2.0 * Math.PI;\r\n        out[0] = Math.cos(r) * scale;\r\n        out[1] = Math.sin(r) * scale;\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Transforms the vec2 with a mat2\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat2(out: vec2, a: vec2, m: mat2): vec2 {\r\n    //     let x = a[0],\r\n    //     y = a[1];\r\n    //     out[0] = m[0] * x + m[2] * y;\r\n    //     out[1] = m[1] * x + m[3] * y;\r\n    //     return out;\r\n    // }\r\n\r\n    /**\r\n     * Transforms the vec2 with a Mat2d\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    public static transformMat2d(a: Vec2, m: Mat2d, out: Vec2): Vec2 {\r\n        let x = a[0],\r\n            y = a[1];\r\n        out[0] = m[0] * x + m[2] * y + m[4];\r\n        out[1] = m[1] * x + m[3] * y + m[5];\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Transforms the vec2 with a mat3\r\n    //  * 3rd vector component is implicitly '1'\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat3(out: vec2, a: vec2, m: mat3): vec2 {\r\n    //     let x = a[0],\r\n    //     y = a[1];\r\n    //     out[0] = m[0] * x + m[3] * y + m[6];\r\n    //     out[1] = m[1] * x + m[4] * y + m[7];\r\n    //     return out;\r\n    // }\r\n\r\n    /**\r\n     * Transforms the vec2 with a Mat4\r\n     * 3rd vector component is implicitly '0'\r\n     * 4th vector component is implicitly '1'\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    public static transformMat4(a: Vec2, m: Mat4, out: Vec2): Vec2 {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        out[0] = m[0] * x + m[4] * y + m[12];\r\n        out[1] = m[1] * x + m[5] * y + m[13];\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec2s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec2s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @param arg additional argument to pass to fn\r\n    //  * @returns a\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //     fn: (a: vec2, b: vec2, arg: any) => void, arg: any): Float32Array { return; }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec2s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec2s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @returns a\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //     fn: (a: vec2, b: vec2) => void): Float32Array {\r\n    // }\r\n\r\n    /**\r\n     * Returns a string representation of a vector\r\n     *\r\n     * @param a vector to represent as a string\r\n     * @returns string representation of the vector\r\n     */\r\n    public static str(a: Vec2): string {\r\n        return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Vec2} a The first vector.\r\n     * @param {Vec2} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Vec2, b: Vec2): boolean {\r\n        return a[0] === b[0] && a[1] === b[1];\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     *\r\n     * @param {Vec2} a The first vector.\r\n     * @param {Vec2} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Vec2, b: Vec2): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1];\r\n        let b0 = b[0],\r\n            b1 = b[1];\r\n        return Math.abs(a0 - b0) <= EPSILON && Math.abs(a1 - b1) <= EPSILON;\r\n    }\r\n}\r\n","import { Mat4 } from \"./mat4\";\r\n\r\nimport { Quat } from \"./quat\";\r\n\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Vec4 extends Float32Array {\r\n    get x() {\r\n        return this[0];\r\n    }\r\n    set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n    set z(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    get w() {\r\n        return this[3];\r\n    }\r\n    set w(value: number) {\r\n        this[3] = value;\r\n    }\r\n\r\n    private static Recycle: Vec4[] = [];\r\n    public static create(x: number = 0, y: number = 0, z: number = 0, w: number = 0): Vec4 {\r\n        if (Vec4.Recycle && Vec4.Recycle.length > 0) {\r\n            let item = Vec4.Recycle.pop() as Vec4;\r\n            item[0] = x;\r\n            item[1] = y;\r\n            item[2] = z;\r\n            item[3] = w;\r\n            return item;\r\n        } else {\r\n            let item = new Vec4(x, y, z, w);\r\n            // item[0]=x;\r\n            // item[1]=y;\r\n            // item[2]=z;\r\n            // item[3]=w;\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Vec4): Vec4 {\r\n        if (Vec4.Recycle.length > 0) {\r\n            let item = Vec4.Recycle.pop() as Vec4;\r\n            Vec4.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Vec4(from[0], from[1], from[2], from[3]);\r\n            // item[0]=from[0];\r\n            // item[1]=from[1];\r\n            // item[2]=from[2];\r\n            // item[3]=from[3];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Vec4) {\r\n        Vec4.Recycle.push(item);\r\n    }\r\n\r\n    public static disposeRecycledItems() {\r\n        Vec4.Recycle.length = 0;\r\n    }\r\n    private constructor(x: number = 0, y: number = 0, z: number = 0, w: number = 0) {\r\n        super(4);\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = z;\r\n        this[3] = w;\r\n    }\r\n\r\n    /**\r\n     * Copy the values from one vec4 to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(a: Vec4 | number[], out: Vec4): Vec4 {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec4's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static add(out: Vec4, a: Vec4, b: Vec4): Vec4 {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts vector b from vector a\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param out the receiving vector\r\n     * @returns out\r\n     */\r\n    public static subtract(a: Vec4, b: Vec4, out: Vec4): Vec4 {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        out[2] = a[2] - b[2];\r\n        out[3] = a[3] - b[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two vec4's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param out the receiving vector         *\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Vec4, b: Vec4, out: Vec4): Vec4 {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        out[2] = a[2] * b[2];\r\n        out[3] = a[3] * b[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Divides two vec4's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static divide(a: Vec4, b: Vec4, out: Vec4): Vec4 {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        out[2] = a[2] / b[2];\r\n        out[3] = a[3] / b[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.ceil the components of a vec4\r\n     *\r\n     * @param {Vec4} a vector to ceil\r\n     * @param {Vec4} out the receiving vector\r\n     * @returns {Vec4} out\r\n     */\r\n    public static ceil(a: Vec4, out: Vec4): Vec4 {\r\n        out[0] = Math.ceil(a[0]);\r\n        out[1] = Math.ceil(a[1]);\r\n        out[2] = Math.ceil(a[2]);\r\n        out[3] = Math.ceil(a[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.floor the components of a vec4\r\n     *\r\n     * @param {Vec4} a vector to floor\r\n     * @param {Vec4} out the receiving vector         *\r\n     * @returns {Vec4} out\r\n     */\r\n    public static floor(a: Vec4, out: Vec4): Vec4 {\r\n        out[0] = Math.floor(a[0]);\r\n        out[1] = Math.floor(a[1]);\r\n        out[2] = Math.floor(a[2]);\r\n        out[3] = Math.floor(a[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum of two vec4's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static min(a: Vec4, b: Vec4, out: Vec4): Vec4 {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        out[2] = Math.min(a[2], b[2]);\r\n        out[3] = Math.min(a[3], b[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum of two vec4's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static max(a: Vec4, b: Vec4, out: Vec4): Vec4 {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        out[2] = Math.max(a[2], b[2]);\r\n        out[3] = Math.max(a[3], b[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.round the components of a vec4\r\n     *\r\n     * @param {Vec4} out the receiving vector\r\n     * @param {Vec4} a vector to round\r\n     * @returns {Vec4} out\r\n     */\r\n    public static round(a: Vec4, out: Vec4): Vec4 {\r\n        out[0] = Math.round(a[0]);\r\n        out[1] = Math.round(a[1]);\r\n        out[2] = Math.round(a[2]);\r\n        out[3] = Math.round(a[3]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a vec4 by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     */\r\n    public static scale(a: Vec4, b: number, out: Vec4): Vec4 {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec4's after scaling the second operand by a scalar value\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param scale the amount to scale b by before adding\r\n     * @returns out\r\n     */\r\n    public static scaleAndAdd(a: Vec4, b: Vec4, scale: number, out: Vec4): Vec4 {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        out[2] = a[2] + b[2] * scale;\r\n        out[3] = a[3] + b[3] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec4's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    public static distance(a: Vec4, b: Vec4): number {\r\n        let x = b[0] - a[0];\r\n        let y = b[1] - a[1];\r\n        let z = b[2] - a[2];\r\n        let w = b[3] - a[3];\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec4's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    public static squaredDistance(a: Vec4, b: Vec4): number {\r\n        let x = b[0] - a[0];\r\n        let y = b[1] - a[1];\r\n        let z = b[2] - a[2];\r\n        let w = b[3] - a[3];\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a vec4\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    public static length_(a: Vec4): number {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n    /**\r\n     * Calculates the squared length of a vec4\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    public static squaredLength(a: Vec4): number {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * Negates the components of a vec4\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to negate\r\n     * @returns out\r\n     */\r\n    public static negate(a: Vec4, out: Vec4): Vec4 {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        out[2] = -a[2];\r\n        out[3] = -a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of the components of a vec4\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to invert\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Vec4, out: Vec4): Vec4 {\r\n        out[0] = 1.0 / a[0];\r\n        out[1] = 1.0 / a[1];\r\n        out[2] = 1.0 / a[2];\r\n        out[3] = 1.0 / a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Normalize a vec4\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to normalize\r\n     * @returns out\r\n     */\r\n    public static normalize(a: Vec4, out: Vec4): Vec4 {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        let len = x * x + y * y + z * z + w * w;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = x * len;\r\n            out[1] = y * len;\r\n            out[2] = z * len;\r\n            out[3] = w * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two vec4's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     */\r\n    public static dot(a: Vec4, b: Vec4): number {\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two vec4's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @param lerp interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static lerp(lhs: Vec4, rhs: Vec4, lerp: number, out: Vec4): Vec4 {\r\n        let ax = lhs[0];\r\n        let ay = lhs[1];\r\n        let az = lhs[2];\r\n        let aw = lhs[3];\r\n        out[0] = ax + lerp * (rhs[0] - ax);\r\n        out[1] = ay + lerp * (rhs[1] - ay);\r\n        out[2] = az + lerp * (rhs[2] - az);\r\n        out[3] = aw + lerp * (rhs[3] - aw);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a random vector with the given scale\r\n     *\r\n     * @param out the receiving vector\r\n     * @param scale length of the resulting vector. If ommitted, a unit vector will be returned\r\n     * @returns out\r\n     */\r\n    public static random(scale: number, out: Vec4): Vec4 {\r\n        scale = scale || 1.0;\r\n\r\n        //TODO: This is a pretty awful way of doing this. Find something better.\r\n        out[0] = Math.random();\r\n        out[1] = Math.random();\r\n        out[2] = Math.random();\r\n        out[3] = Math.random();\r\n        Vec4.normalize(out, out);\r\n        Vec4.scale(out, scale, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Transforms the vec4 with a Mat4.\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    public static transformMat4(a: Vec4, m: Mat4, out: Vec4): Vec4 {\r\n        let x = a[0],\r\n            y = a[1],\r\n            z = a[2],\r\n            w = a[3];\r\n        out[0] = m[0] * x + m[4] * y + m[8] * z + m[12] * w;\r\n        out[1] = m[1] * x + m[5] * y + m[9] * z + m[13] * w;\r\n        out[2] = m[2] * x + m[6] * y + m[10] * z + m[14] * w;\r\n        out[3] = m[3] * x + m[7] * y + m[11] * z + m[15] * w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Transforms the vec4 with a Quat\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param q Quaternion to transform with\r\n     * @returns out\r\n     */\r\n\r\n    public static transformQuat(a: Vec4, q: Quat, out: Vec4): Vec4 {\r\n        let x = a[0],\r\n            y = a[1],\r\n            z = a[2];\r\n        let qx = q[0],\r\n            qy = q[1],\r\n            qz = q[2],\r\n            qw = q[3];\r\n\r\n        // calculate Quat * vec\r\n        let ix = qw * x + qy * z - qz * y;\r\n        let iy = qw * y + qz * x - qx * z;\r\n        let iz = qw * z + qx * y - qy * x;\r\n        let iw = -qx * x - qy * y - qz * z;\r\n\r\n        // calculate result * inverse Quat\r\n        out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec4s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec4s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @param arg additional argument to pass to fn\r\n    //  * @returns a\r\n    //  * @function\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //                       fn: (a: vec4, b: vec4, arg: any) => void, arg: any): Float32Array;\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec4s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec4. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec4s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @returns a\r\n    //  * @function\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //                       fn: (a: vec4, b: vec4) => void): Float32Array;\r\n\r\n    /**\r\n     * Returns a string representation of a vector\r\n     *\r\n     * @param a vector to represent as a string\r\n     * @returns string representation of the vector\r\n     */\r\n    public static str(a: Vec4): string {\r\n        return \"vec4(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Vec4} a The first vector.\r\n     * @param {Vec4} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Vec4, b: Vec4): boolean {\r\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     *\r\n     * @param {Vec4} a The first vector.\r\n     * @param {Vec4} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Vec4, b: Vec4): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3))\r\n        );\r\n    }\r\n}\r\n","import { IassetLoader, Iasset, IassetLoadInfo } from \"../type\";\r\nimport { getFileName } from \"../base/helper\";\r\nimport { Shader, UniformTypeEnum, getFeaturShderStr } from \"../assets/shader\";\r\nimport { loadText } from \"../../io/loadtool\";\r\nimport { IprogramState, IprogramInfo, IprogramOptions, IbassProgramInfo } from \"twebgl/dist/types/type\";\r\nimport { RenderLayerEnum } from \"../../ec/ec\";\r\nimport { Vec2 } from \"../../mathD/vec2\";\r\nimport { Vec4 } from \"../../mathD/vec4\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\nimport { GlRender } from \"../../render/glRender\";\r\nimport { DrawTypeEnum } from \"../../render/renderMachine\";\r\nimport { LoadEnum } from \"../base/loadEnum\";\r\n\r\n//instance-fog-lightmap-SKIN\r\n\r\nexport interface IpassJson {\r\n    state?: IprogramState;\r\n    vs: string;\r\n    fs: string;\r\n}\r\n\r\ntype strLayerType = \"Background\" | \"transparent\" | \"Geometry\";\r\nexport interface IshaderJson {\r\n    layer?: strLayerType;\r\n    queue?: number;\r\n    properties?: string[];\r\n    feature?: string[];\r\n    passes: IpassJson[];\r\n}\r\nconst textureRegexp = /([_0-9a-zA-Z]+)[ ]*\\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\\)[ ]*=[ ]*'(.+)'[ ]*\\{[ ]*([a-zA-Z]*)[ ]*([a-zA-Z]*)[ ]*\\}/;\r\nconst vector4regexp = /([_0-9a-zA-Z]+)[ ]*\\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\\)[ ]*=[ ]*\\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\\)/;\r\nconst vector3regexp = /([_0-9a-zA-Z]+)[ ]*\\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\\)[ ]*=[ ]*\\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\\)/;\r\nconst vector2regexp = /([_0-9a-zA-Z]+)[ ]*\\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\\)[ ]*=[ ]*\\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\\)/;\r\nconst floatRegexp = /([_0-9a-zA-Z]+)[ ]*\\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\\)[ ]*=[ ]*([0-9.-]+)/;\r\nconst rangeRegexp = /([_0-9a-zA-Z]+)[ ]*\\([ ]*'(.+)'[ ]*,[ ]*([0-9a-zA-Z]+)[ ]*\\([ ]*([0-9.-]+)[ ]*,[ ]*([0-9.-]+)[ ]*\\)[ ]*\\)[ ]*=[ ]*([0-9.-]+)/;\r\n\r\nfunction getShaderLayerFromStr(strLayer: strLayerType) {\r\n    switch (strLayer) {\r\n        case \"Background\":\r\n            return RenderLayerEnum.Background;\r\n        case \"transparent\":\r\n            return RenderLayerEnum.Transparent;\r\n        case \"Geometry\":\r\n            return RenderLayerEnum.Geometry;\r\n    }\r\n}\r\nexport class LoadShader implements IassetLoader {\r\n    private static drawtypeDic: { [type: string]: number } = {};\r\n    constructor() {\r\n        LoadShader.drawtypeDic[\"base\"] = DrawTypeEnum.BASE;\r\n        LoadShader.drawtypeDic[\"fog\"] = DrawTypeEnum.FOG;\r\n        LoadShader.drawtypeDic[\"skin\"] = DrawTypeEnum.SKIN;\r\n        LoadShader.drawtypeDic[\"skin_fog\"] = DrawTypeEnum.SKIN | DrawTypeEnum.FOG;\r\n        LoadShader.drawtypeDic[\"lightmap\"] = DrawTypeEnum.LIGHTMAP;\r\n        LoadShader.drawtypeDic[\"lightmap_fog\"] = DrawTypeEnum.LIGHTMAP | DrawTypeEnum.FOG;\r\n        LoadShader.drawtypeDic[\"instance\"] = DrawTypeEnum.INSTANCe;\r\n    }\r\n    load(\r\n        url: string,\r\n        onFinish: (asset: Iasset, state: IassetLoadInfo) => void,\r\n        onProgress: (progress: number) => void,\r\n    ): Iasset {\r\n        let name = getFileName(url);\r\n\r\n        let shader: Shader = new Shader({ name: name, URL: url });\r\n        loadText(url)\r\n            .then(txt => {\r\n                let json = JSON.parse(txt) as IshaderJson;\r\n                let layer = getShaderLayerFromStr(json.layer || \"Geometry\");\r\n                let queue = json.queue != null ? json.queue : 0;\r\n                let defUniform = LoadShader.parseProperties(json.properties, name);\r\n                let features = json.feature != null ? [...json.feature, \"base\"] : [\"base\"];\r\n\r\n                let index = url.lastIndexOf(\"/\");\r\n                let shaderurl = url.substring(0, index + 1);\r\n                LoadShader.ParseShaderPass(features, json.passes, shaderurl, name)\r\n                    .then(progamArr => {\r\n                        shader.layer = layer;\r\n                        shader.queue = queue;\r\n                        shader.mapUniformDef = defUniform;\r\n                        shader.passes = progamArr;\r\n\r\n                        if (onFinish) {\r\n                            onFinish(shader, { url: url, loadState: LoadEnum.Success });\r\n                        }\r\n                    })\r\n                    .catch(error => {\r\n                        let errorMsg =\r\n                            \"ERROR: parse shader Error!\\n Info: LOAD URL: \" + url + \"  LOAD MSG:\" + error.message;\r\n                        if (onFinish) {\r\n                            onFinish(shader, { url: url, loadState: LoadEnum.Failed, err: new Error(errorMsg) });\r\n                        }\r\n                    });\r\n            })\r\n            .catch(err => {\r\n                let errorMsg = \"ERROR: Load shader Error!\\n Info: LOAD URL: \" + url + \"  LOAD MSG:\" + err.message;\r\n                if (onFinish) {\r\n                    onFinish(shader, { url: url, loadState: LoadEnum.Failed, err: new Error(errorMsg) });\r\n                }\r\n            });\r\n        return shader;\r\n    }\r\n\r\n    private static parseProperties(\r\n        properties: any,\r\n        name: string,\r\n    ): { [key: string]: { type: UniformTypeEnum; value: any } } {\r\n        let mapUniformDef: { [key: string]: { type: UniformTypeEnum; value: any } } = {};\r\n        for (let index in properties) {\r\n            let property = properties[index] as string;\r\n\r\n            //检测字符串格式有无错误\r\n            let words = property.match(floatRegexp);\r\n            if (words == null) words = property.match(rangeRegexp);\r\n            if (words == null) words = property.match(vector4regexp);\r\n            if (words == null) words = property.match(vector3regexp);\r\n            if (words == null) words = property.match(vector2regexp);\r\n            if (words == null) words = property.match(textureRegexp);\r\n            if (words == null) {\r\n                let errorMsg =\r\n                    \"ERROR:  parse shader(\" +\r\n                    name +\r\n                    \" )Property json Error! \\n\" +\r\n                    \" Info:\" +\r\n                    property +\r\n                    \"check match failed.\";\r\n                console.error(errorMsg);\r\n                return null;\r\n            }\r\n\r\n            if (words != null && words.length >= 4) {\r\n                let key = words[1];\r\n                let showName = words[2];\r\n                let type = words[3].toLowerCase();\r\n                switch (type) {\r\n                    case \"float\":\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.FLOAT, value: parseFloat(words[4]) };\r\n                        break;\r\n                    case \"range\":\r\n                        //this.mapUniformDef[key] = { type: type, min: parseFloat(words[4]), max: parseFloat(words[5]), value: parseFloat(words[6]) };\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.FLOAT, value: parseFloat(words[6]) };\r\n                        break;\r\n                    case \"vector2\":\r\n                        let vector2 = Vec2.create(parseFloat(words[4]), parseFloat(words[5]));\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.FLOAT_VEC2, value: vector2 };\r\n                        break;\r\n                    case \"vector3\":\r\n                        let vector3 = Vec3.create(parseFloat(words[4]), parseFloat(words[5]), parseFloat(words[6]));\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.FLOAT_VEC3, value: vector3 };\r\n                        break;\r\n                    case \"vector4\":\r\n                    case \"color\":\r\n                        let _vector = Vec4.create(\r\n                            parseFloat(words[4]),\r\n                            parseFloat(words[5]),\r\n                            parseFloat(words[6]),\r\n                            parseFloat(words[7]),\r\n                        );\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.FLOAT_VEC4, value: _vector };\r\n                        break;\r\n                    case \"texture\":\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.TEXTURE, value: null }; //words[4]\r\n                        break;\r\n                    case \"cubetexture\":\r\n                        mapUniformDef[key] = { type: UniformTypeEnum.TEXTURE, value: null };\r\n                        break;\r\n                    default:\r\n                        let errorMsg =\r\n                            \"ERROR: parse shader(\" +\r\n                            name +\r\n                            \" )Property json Error! \\n\" +\r\n                            \"Info: unknown type : \" +\r\n                            type;\r\n                        console.error(errorMsg);\r\n                        return null;\r\n                }\r\n            }\r\n        }\r\n        return mapUniformDef;\r\n    }\r\n\r\n    private static ParseShaderPass(features: string[], json: IpassJson[], shaderFolderUrl: string, name: string) {\r\n        let passes: { [feature: string]: IprogramInfo[] } = {};\r\n\r\n        let featureArr: Promise<void>[] = [];\r\n        for (let i = 0; i < features.length; i++) {\r\n            let type = features[i];\r\n            let featureStr = getFeaturShderStr(type);\r\n            let taskArr: Promise<IprogramInfo>[] = [];\r\n\r\n            for (let i = 0; i < json.length; i++) {\r\n                let passJson = json[i];\r\n                let vsurl = shaderFolderUrl + passJson.vs + \".vs.glsl\";\r\n                let fsurl = shaderFolderUrl + passJson.fs + \".fs.glsl\";\r\n\r\n                let vstask = loadText(vsurl);\r\n                let fstask = loadText(fsurl);\r\n                let protask = Promise.all([vstask, fstask]).then(str => {\r\n                    let vsStr = featureStr + str[0];\r\n                    let fsStr = featureStr + str[1];\r\n\r\n                    return GlRender.createProgram({\r\n                        program: {\r\n                            vs: vsStr,\r\n                            fs: fsStr,\r\n                            name: passJson.vs + \"_\" + passJson.fs,\r\n                        },\r\n                        states: passJson.state,\r\n                    });\r\n                });\r\n                taskArr.push(protask);\r\n            }\r\n            let feature = Promise.all(taskArr).then(programArr => {\r\n                passes[type] = programArr;\r\n            });\r\n            featureArr.push(feature);\r\n        }\r\n        return Promise.all(featureArr).then(() => passes);\r\n    }\r\n}\r\n","import { ToyAsset, ItoyAsset } from \"../base/toyAsset\";\r\nimport { ItextureInfo, ItexImageDataOption } from \"../../render/glRender\";\r\n\r\nexport class Texture extends ToyAsset implements ItextureInfo {\r\n    texture: WebGLTexture;\r\n    texDes: ItexImageDataOption;\r\n    imageData: TexImageSource;\r\n    width: number = 0;\r\n    height: number = 0;\r\n\r\n    // samplerInfo: TextureOption = new TextureOption();\r\n    constructor(param?: ItoyAsset) {\r\n        super(param);\r\n    }\r\n    dispose() {}\r\n}\r\n","import { GlRender } from \"./../../render/glRender\";\r\nimport { IassetLoader, IassetLoadInfo, Iasset } from \"../type\";\r\nimport { getFileName } from \"../base/helper\";\r\nimport { Texture } from \"../assets/texture\";\r\nimport { loadImg, loadText } from \"../../io/loadtool\";\r\nimport { LoadEnum } from \"../base/loadEnum\";\r\n\r\nexport class LoadTextureSample implements IassetLoader {\r\n    load(\r\n        url: string,\r\n        onFinish: (asset: Iasset, state: IassetLoadInfo) => void,\r\n        onProgress: (progress: number) => void,\r\n    ): Iasset {\r\n        let name = getFileName(url);\r\n        let texture: Texture = new Texture({ name: name, URL: url });\r\n        loadImg(url)\r\n            .then(img => {\r\n                texture.width = img.width;\r\n                texture.height = img.height;\r\n                let imaginfo = GlRender.createTextureFromImg(img);\r\n                texture.texture = imaginfo.texture;\r\n                texture.texDes = imaginfo.texDes;\r\n\r\n                if (onFinish) {\r\n                    onFinish(texture, { url: url, loadState: LoadEnum.Success });\r\n                }\r\n            })\r\n            .catch(err => {\r\n                let errorMsg = \"ERROR: Load Image Error!\\n Info: LOAD URL: \" + url + \"  LOAD MSG:\" + err.message;\r\n                if (onFinish) {\r\n                    onFinish(texture, { url: url, loadState: LoadEnum.Failed, err: new Error(errorMsg) });\r\n                }\r\n            });\r\n        return texture;\r\n    }\r\n}\r\n\r\nexport interface ItextureDesJson {\r\n    texture: string;\r\n}\r\nexport class LoadTextureDes implements IassetLoader {\r\n    load(\r\n        url: string,\r\n        onFinish: (asset: Iasset, state: IassetLoadInfo) => void,\r\n        onProgress: (progress: number) => void,\r\n    ): Iasset {\r\n        let name = getFileName(url);\r\n        let texture: Texture = new Texture({ name: name, URL: url });\r\n        //-------------load image des\r\n        loadText(url)\r\n            .then(txt => {\r\n                let desjson = JSON.parse(txt);\r\n                let imgName = desjson.texture;\r\n                let desname = getFileName(url);\r\n\r\n                let imgurl = url.replace(desname, imgName);\r\n                loadImg(imgurl)\r\n                    .then(img => {\r\n                        texture.width = img.width;\r\n                        texture.height = img.height;\r\n                        let imaginfo = GlRender.createTextureFromImg(img);\r\n                        texture.texture = imaginfo.texture;\r\n                        texture.texDes = imaginfo.texDes;\r\n\r\n                        if (onFinish) {\r\n                            onFinish(texture, { url: url, loadState: LoadEnum.Success });\r\n                        }\r\n                    })\r\n                    .catch(err => {\r\n                        let errorMsg =\r\n                            \"ERROR: Load Image Error!\\n Info: LOAD URL: \" + url + \"  LOAD MSG:\" + err.message;\r\n                        if (onFinish) {\r\n                            onFinish(texture, { url: url, loadState: LoadEnum.Failed, err: new Error(errorMsg) });\r\n                        }\r\n                    });\r\n            })\r\n            .catch(err => {\r\n                let errorMsg = \"ERROR: Load Image Des Error!\\n Info: LOAD URL: \" + url + \"  LOAD MSG:\" + err.message;\r\n            });\r\n        return texture;\r\n    }\r\n\r\n    // private static parse(tex: Texture, image: HTMLImageElement, Desjson: any, keepOrigeData = true) {\r\n    //     let texop = this.getFromDesJson(Desjson);\r\n    //     texop.data = image;\r\n    //     texop.width = image.width;\r\n    //     texop.height = image.height;\r\n\r\n    //     tex.samplerInfo = texop;\r\n\r\n    //     tex.imageData = image;\r\n    //     tex.applyToGLTarget();\r\n    // }\r\n\r\n    // static getFromDesJson(json: any): webGraph.TextureOption {\r\n    //     let op = new webGraph.TextureOption();\r\n    //     //---------------暂时先这样\r\n    //     if (json.flip_y) {\r\n    //         op.flip_y = json.flip_y;\r\n    //     }\r\n    //     if (json.filterMode) {\r\n    //         switch (json.filterMode) {\r\n    //             case \"Bilinear\":\r\n    //             case \"Trilinear\":\r\n    //                 op.max_filter = webGraph.TexFilterEnum.linear;\r\n    //                 break;\r\n    //             case \"Point\":\r\n    //                 op.max_filter = webGraph.TexFilterEnum.nearest;\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    //     if (json.wrapMode) {\r\n    //         switch (json.wrapMode) {\r\n    //             case \"Clamp\":\r\n    //                 op.wrap_s = webGraph.TexWrapEnum.clampToEdge;\r\n    //                 op.wrap_t = webGraph.TexWrapEnum.clampToEdge;\r\n    //                 break;\r\n    //             case \"Repeat\":\r\n    //                 op.wrap_s = webGraph.TexWrapEnum.repeat;\r\n    //                 op.wrap_t = webGraph.TexWrapEnum.repeat;\r\n    //                 break;\r\n    //         }\r\n    //     }\r\n    //     if (json.premultiplyAlpha) {\r\n    //         op.preMultiply_alpha = json.premultiplyAlpha;\r\n    //     }\r\n    //     if (json.flip_y) {\r\n    //         op.flip_y = json.flip_y;\r\n    //     }\r\n    //     return op;\r\n    // }\r\n}\r\n","import { ToyAsset, ItoyAsset } from \"../base/toyAsset\";\r\nimport { Transform } from \"../../ec/components/transform\";\r\n\r\nexport class GltfAsset extends ToyAsset {\r\n    constructor(param?: ItoyAsset) {\r\n        super(param);\r\n    }\r\n\r\n    roots: Transform[];\r\n    dispose(): void {}\r\n}\r\n","﻿export class BinReader {\r\n    private _data: DataView;\r\n    private _arrayBuffer: ArrayBuffer;\r\n    constructor(buf: ArrayBuffer, seek: number = 0) {\r\n        this._arrayBuffer = buf;\r\n        this._byteOffset = seek;\r\n        this._data = new DataView(buf, seek);\r\n    }\r\n    private _byteOffset: number;\r\n\r\n    seek(seek: number) {\r\n        this._byteOffset = seek;\r\n    }\r\n    peek(): number {\r\n        return this._byteOffset;\r\n    }\r\n    getPosition(): number {\r\n        return this._byteOffset;\r\n    }\r\n    getLength(): number {\r\n        return this._data.byteLength;\r\n    }\r\n    canread(): number {\r\n        //LogManager.Warn(this._buf.byteLength + \"  &&&&&&&&&&&   \" + this._seek + \"    \" + this._buf.buffer.byteLength);\r\n        return this._data.byteLength - this._byteOffset;\r\n    }\r\n    skipBytes(len: number) {\r\n        this._byteOffset += len;\r\n    }\r\n    readString(): string {\r\n        let slen = this._data.getUint8(this._byteOffset);\r\n        this._byteOffset++;\r\n        let bs = \"\";\r\n        for (let i = 0; i < slen; i++) {\r\n            bs += String.fromCharCode(this._data.getUint8(this._byteOffset));\r\n            this._byteOffset++;\r\n        }\r\n        return bs;\r\n    }\r\n    readStrLenAndContent(): string {\r\n        let leng = this.readByte();\r\n        return this.readUint8ArrToString(leng);\r\n    }\r\n    private static _decodeBufferToText(buffer: Uint8Array): string {\r\n        let result = \"\";\r\n        const length = buffer.byteLength;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            result += String.fromCharCode(buffer[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static utf8ArrayToString(array: Uint8Array | number[]): string {\r\n        let ret: string[] = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let cc = array[i];\r\n            if (cc == 0) break;\r\n            let ct = 0;\r\n            if (cc > 0xe0) {\r\n                ct = (cc & 0x0f) << 12;\r\n                cc = array[++i];\r\n                ct |= (cc & 0x3f) << 6;\r\n                cc = array[++i];\r\n                ct |= cc & 0x3f;\r\n                ret.push(String.fromCharCode(ct));\r\n            } else if (cc > 0xc0) {\r\n                ct = (cc & 0x1f) << 6;\r\n                cc = array[++i];\r\n                ct |= (cc & 0x3f) << 6;\r\n                ret.push(String.fromCharCode(ct));\r\n            } else if (cc > 0x80) {\r\n                throw new Error(\"InvalidCharacterError\");\r\n            } else {\r\n                ret.push(String.fromCharCode(array[i]));\r\n            }\r\n        }\r\n        return ret.join(\"\");\r\n\r\n        //                let b = array[i];\r\n        //    if (b > 0 && b < 16)\r\n        //    {\r\n        //        uri += '%0' + b.toString(16);\r\n        //    }\r\n        //    else if (b > 16)\r\n        //    {\r\n        //        uri += '%' + b.toString(16);\r\n        //    }\r\n        //}\r\n        //return decodeURIComponent(uri);\r\n    }\r\n    // readStringUtf8(): string\r\n    // {\r\n    //     let length = this._data.getInt8(this._byteOffset);\r\n    //     this._byteOffset++;\r\n    //     let arr = new Uint8Array(length);\r\n    //     this.readUint8Array(arr);\r\n    //     return binReader.utf8ArrayToString(arr);\r\n    // }\r\n    readUint8ArrToString(length: number): string {\r\n        let arr = this.readUint8Array(length);\r\n        return BinReader._decodeBufferToText(arr);\r\n    }\r\n    readSingle(): number {\r\n        let num = this._data.getFloat32(this._byteOffset, true);\r\n        this._byteOffset += 4;\r\n        return num;\r\n    }\r\n    readDouble(): number {\r\n        let num = this._data.getFloat64(this._byteOffset, true);\r\n        this._byteOffset += 8;\r\n        return num;\r\n    }\r\n    readInt8(): number {\r\n        let num = this._data.getInt8(this._byteOffset);\r\n        this._byteOffset += 1;\r\n        return num;\r\n    }\r\n    readUInt8(): number {\r\n        //LogManager.Warn(this._data.byteLength + \"  @@@@@@@@@@@@@@@@@  \" + this._seek);\r\n        let num = this._data.getUint8(this._byteOffset);\r\n        this._byteOffset += 1;\r\n        return num;\r\n    }\r\n    readInt16(): number {\r\n        //LogManager.Log(this._seek + \"   \" + this.length());\r\n        let num = this._data.getInt16(this._byteOffset, true);\r\n        this._byteOffset += 2;\r\n        return num;\r\n    }\r\n    readUInt16(): number {\r\n        let num = this._data.getUint16(this._byteOffset, true);\r\n        this._byteOffset += 2;\r\n        //LogManager.Warn(\"readUInt16 \" + this._seek);\r\n        return num;\r\n    }\r\n    readInt32(): number {\r\n        let num = this._data.getInt32(this._byteOffset, true);\r\n        this._byteOffset += 4;\r\n        return num;\r\n    }\r\n    readUint32(): number {\r\n        let num = this._data.getUint32(this._byteOffset, true);\r\n        this._byteOffset += 4;\r\n        return num;\r\n    }\r\n    readUint8Array(length: number): Uint8Array {\r\n        const value = new Uint8Array(this._arrayBuffer, this._byteOffset, length);\r\n        this._byteOffset += length;\r\n        return value;\r\n    }\r\n\r\n    readUint8ArrayByOffset(target: Uint8Array, offset: number, length: number = 0): Uint8Array {\r\n        if (length < 0) length = target.length;\r\n        for (let i = 0; i < length; i++) {\r\n            target[i] = this._data.getUint8(offset);\r\n            offset++;\r\n        }\r\n        return target;\r\n    }\r\n\r\n    public set position(value: number) {\r\n        this.seek(value);\r\n    }\r\n    public get position(): number {\r\n        return this.peek();\r\n    }\r\n\r\n    readBoolean(): boolean {\r\n        return this.readUInt8() > 0;\r\n    }\r\n    readByte(): number {\r\n        return this.readUInt8();\r\n    }\r\n\r\n    // readBytes(target: Uint8Array = null, length: number = -1): Uint8Array\r\n    // {\r\n    //     return this.readUint8Array(target, length);\r\n    // }\r\n\r\n    readUnsignedShort(): number {\r\n        return this.readUInt16();\r\n    }\r\n\r\n    readUnsignedInt(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    readFloat(): number {\r\n        return this.readSingle();\r\n    }\r\n\r\n    /// <summary>\r\n    /// 有符号 Byte\r\n    /// </summary>\r\n    readSymbolByte(): number {\r\n        return this.readInt8();\r\n    }\r\n\r\n    readShort(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    readInt(): number {\r\n        return this.readInt32();\r\n    }\r\n}\r\nexport class BinWriter {\r\n    _buf: Uint8Array;\r\n    private _data: DataView;\r\n    private _length: number;\r\n    private _seek: number;\r\n\r\n    constructor() {\r\n        let buf = new ArrayBuffer(1024);\r\n        this._length = 0;\r\n        this._buf = new Uint8Array(buf);\r\n        this._data = new DataView(this._buf.buffer);\r\n        this._seek = 0;\r\n    }\r\n    private sureData(addlen: number): void {\r\n        let nextlen = this._buf.byteLength;\r\n        while (nextlen < this._length + addlen) {\r\n            nextlen += 1024;\r\n        }\r\n        if (nextlen != this._buf.byteLength) {\r\n            let newbuf = new Uint8Array(nextlen);\r\n            for (let i = 0; i < this._length; i++) {\r\n                newbuf[i] = this._buf[i];\r\n            }\r\n            this._buf = newbuf;\r\n            this._data = new DataView(this._buf.buffer);\r\n        }\r\n        this._length += addlen;\r\n    }\r\n    getLength(): number {\r\n        return length;\r\n    }\r\n    getBuffer(): ArrayBuffer {\r\n        return this._buf.buffer.slice(0, this._length);\r\n    }\r\n    seek(seek: number) {\r\n        this._seek = seek;\r\n    }\r\n    peek(): number {\r\n        return this._seek;\r\n    }\r\n    writeInt8(num: number): void {\r\n        this.sureData(1);\r\n        this._data.setInt8(this._seek, num);\r\n        this._seek++;\r\n    }\r\n    writeUInt8(num: number): void {\r\n        this.sureData(1);\r\n        this._data.setUint8(this._seek, num);\r\n        this._seek++;\r\n    }\r\n    writeInt16(num: number): void {\r\n        this.sureData(2);\r\n        this._data.setInt16(this._seek, num, true);\r\n        this._seek += 2;\r\n    }\r\n    writeUInt16(num: number): void {\r\n        this.sureData(2);\r\n        this._data.setUint16(this._seek, num, true);\r\n        this._seek += 2;\r\n    }\r\n    writeInt32(num: number): void {\r\n        this.sureData(4);\r\n        this._data.setInt32(this._seek, num, true);\r\n        this._seek += 4;\r\n    }\r\n    writeUInt32(num: number): void {\r\n        this.sureData(4);\r\n        this._data.setUint32(this._seek, num, true);\r\n        this._seek += 4;\r\n    }\r\n    writeSingle(num: number): void {\r\n        this.sureData(4);\r\n        this._data.setFloat32(this._seek, num, true);\r\n        this._seek += 4;\r\n    }\r\n    writeDouble(num: number): void {\r\n        this.sureData(8);\r\n        this._data.setFloat64(this._seek, num, true);\r\n        this._seek += 8;\r\n    }\r\n    writeStringAnsi(str: string): void {\r\n        let slen = str.length;\r\n        this.sureData(slen + 1);\r\n        this._data.setUint8(this._seek, slen);\r\n        this._seek++;\r\n        for (let i = 0; i < slen; i++) {\r\n            this._data.setUint8(this._seek, str.charCodeAt(i));\r\n            this._seek++;\r\n        }\r\n    }\r\n    writeStringUtf8(str: string) {\r\n        let bstr = BinWriter.stringToUtf8Array(str);\r\n        this.writeUInt8(bstr.length);\r\n        this.writeUint8Array(bstr);\r\n    }\r\n    static stringToUtf8Array(str: string): number[] {\r\n        let bstr: number[] = [];\r\n        for (let i = 0; i < str.length; i++) {\r\n            let c = str.charAt(i);\r\n            let cc = c.charCodeAt(0);\r\n            if (cc > 0xffff) {\r\n                throw new Error(\"InvalidCharacterError\");\r\n            }\r\n            if (cc > 0x80) {\r\n                if (cc < 0x07ff) {\r\n                    let c1 = (cc >>> 6) | 0xc0;\r\n                    let c2 = (cc & 0x3f) | 0x80;\r\n                    bstr.push(c1, c2);\r\n                } else {\r\n                    let c1 = (cc >>> 12) | 0xe0;\r\n                    let c2 = ((cc >>> 6) & 0x3f) | 0x80;\r\n                    let c3 = (cc & 0x3f) | 0x80;\r\n                    bstr.push(c1, c2, c3);\r\n                }\r\n            } else {\r\n                bstr.push(cc);\r\n            }\r\n        }\r\n        return bstr;\r\n    }\r\n    writeStringUtf8DataOnly(str: string) {\r\n        let bstr = BinWriter.stringToUtf8Array(str);\r\n        this.writeUint8Array(bstr);\r\n    }\r\n    writeUint8Array(array: Uint8Array | number[], offset: number = 0, length: number = -1) {\r\n        if (length < 0) length = array.length;\r\n        this.sureData(length);\r\n        for (let i = offset; i < offset + length; i++) {\r\n            this._data.setUint8(this._seek, array[i]);\r\n            this._seek++;\r\n        }\r\n    }\r\n\r\n    public get length(): number {\r\n        return this._seek;\r\n    }\r\n\r\n    writeByte(num: number): void {\r\n        this.writeUInt8(num);\r\n    }\r\n\r\n    writeBytes(array: Uint8Array | number[], offset: number = 0, length: number = 0) {\r\n        this.writeUint8Array(array, offset, length);\r\n    }\r\n\r\n    writeUnsignedShort(num: number): void {\r\n        this.writeUInt16(num);\r\n    }\r\n\r\n    writeUnsignedInt(num: number): void {\r\n        this.writeUInt32(num);\r\n    }\r\n\r\n    writeFloat(num: number): void {\r\n        this.writeSingle(num);\r\n    }\r\n\r\n    writeUTFBytes(str: string): void {\r\n        let strArray = BinWriter.stringToUtf8Array(str);\r\n        this.writeUint8Array(strArray);\r\n    }\r\n\r\n    /// <summary>\r\n    /// 写入有符号 Byte\r\n    /// </summary>\r\n    writeSymbolByte(num: number): void {\r\n        this.writeInt8(num);\r\n    }\r\n\r\n    writeShort(num: number): void {\r\n        this.writeInt16(num);\r\n    }\r\n\r\n    writeInt(num: number): void {\r\n        this.writeInt32(num);\r\n    }\r\n}\r\n","/**\r\n * The root object for a glTF asset\r\n */\r\nexport interface Igltf {\r\n    /**\r\n     * An array of accessors. An accessor is a typed view into a bufferView\r\n     */\r\n    accessors?: IgltfAccessor[];\r\n    /**\r\n     * An array of keyframe animations\r\n     */\r\n    animations?: IgltfAnimation[];\r\n    /**\r\n     * Metadata about the glTF asset\r\n     */\r\n    asset: IglTFAsset;\r\n    /**\r\n     * An array of buffers.  A buffer points to binary geometry, animation, or skins\r\n     */\r\n    buffers?: IgltfBuffer[];\r\n    /**\r\n     * An array of bufferViews.  A bufferView is a view into a buffer generally representing a subset of the buffer\r\n     */\r\n    bufferViews?: IgltfBufferView[];\r\n    /**\r\n     * An array of cameras\r\n     */\r\n    cameras?: IgltfCamera[];\r\n    /**\r\n     * Names of glTF extensions used somewhere in this asset\r\n     */\r\n    extensionsUsed?: string[];\r\n    /**\r\n     * Names of glTF extensions required to properly load this asset\r\n     */\r\n    extensionsRequired?: string[];\r\n    /**\r\n     * An array of images.  An image defines data used to create a texture\r\n     */\r\n    images?: IgltfImage[];\r\n    /**\r\n     * An array of materials.  A material defines the appearance of a primitive\r\n     */\r\n    materials?: IgltfMaterial[];\r\n    /**\r\n     * An array of meshes.  A mesh is a set of primitives to be rendered\r\n     */\r\n    meshes?: IgltfMesh[];\r\n    /**\r\n     * An array of nodes\r\n     */\r\n    nodes?: IgltfNode[];\r\n    /**\r\n     * An array of samplers.  A sampler contains properties for texture filtering and wrapping modes\r\n     */\r\n    samplers?: IgltfSampler[];\r\n    /**\r\n     * The index of the default scene\r\n     */\r\n    scene?: number;\r\n    /**\r\n     * An array of scenes\r\n     */\r\n    scenes?: IgltfScene[];\r\n    /**\r\n     * An array of skins.  A skin is defined by joints and matrices\r\n     */\r\n    skins?: IgltfSkin[];\r\n    /**\r\n     * An array of textures\r\n     */\r\n    textures?: IgltfTexture[];\r\n}\r\n\r\nexport enum AccessorComponentType {\r\n    /**\r\n     * Byte\r\n     */\r\n    BYTE = 5120,\r\n    /**\r\n     * Unsigned Byte\r\n     */\r\n    UNSIGNED_BYTE = 5121,\r\n    /**\r\n     * Short\r\n     */\r\n    SHORT = 5122,\r\n    /**\r\n     * Unsigned Short\r\n     */\r\n    UNSIGNED_SHORT = 5123,\r\n    /**\r\n     * Unsigned Int\r\n     */\r\n    UNSIGNED_INT = 5125,\r\n    /**\r\n     * Float\r\n     */\r\n    FLOAT = 5126,\r\n}\r\n/**\r\n * Specifies if the attirbute is a scalar, vector, or matrix\r\n */\r\nexport enum AccessorType {\r\n    /**\r\n     * Scalar\r\n     */\r\n    SCALAR = \"SCALAR\",\r\n    /**\r\n     * Vector2\r\n     */\r\n    VEC2 = \"VEC2\",\r\n    /**\r\n     * Vector3\r\n     */\r\n    VEC3 = \"VEC3\",\r\n    /**\r\n     * Vector4\r\n     */\r\n    VEC4 = \"VEC4\",\r\n    /**\r\n     * Matrix2x2\r\n     */\r\n    MAT2 = \"MAT2\",\r\n    /**\r\n     * Matrix3x3\r\n     */\r\n    MAT3 = \"MAT3\",\r\n    /**\r\n     * Matrix4x4\r\n     */\r\n    MAT4 = \"MAT4\",\r\n}\r\n/**\r\n * The name of the node's TRS property to modify, or the weights of the Morph Targets it instantiates\r\n */\r\nexport enum AnimationChannelTargetPath {\r\n    /**\r\n     * Translation\r\n     */\r\n    TRANSLATION = \"translation\",\r\n    /**\r\n     * Rotation\r\n     */\r\n    ROTATION = \"rotation\",\r\n    /**\r\n     * Scale\r\n     */\r\n    SCALE = \"scale\",\r\n    /**\r\n     * Weights\r\n     */\r\n    WEIGHTS = \"weights\",\r\n}\r\n/**\r\n * Interpolation algorithm\r\n */\r\nexport enum AnimationSamplerInterpolation {\r\n    /**\r\n     * The animated values are linearly interpolated between keyframes\r\n     */\r\n    LINEAR = \"LINEAR\",\r\n    /**\r\n     * The animated values remain constant to the output of the first keyframe, until the next keyframe\r\n     */\r\n    STEP = \"STEP\",\r\n    /**\r\n     * The animation's interpolation is computed using a cubic spline with specified tangents\r\n     */\r\n    CUBICSPLINE = \"CUBICSPLINE\",\r\n}\r\n/**\r\n * A camera's projection.  A node can reference a camera to apply a transform to place the camera in the scene\r\n */\r\nexport enum CameraType {\r\n    /**\r\n     * A perspective camera containing properties to create a perspective projection matrix\r\n     */\r\n    PERSPECTIVE = \"perspective\",\r\n    /**\r\n     * An orthographic camera containing properties to create an orthographic projection matrix\r\n     */\r\n    ORTHOGRAPHIC = \"orthographic\",\r\n}\r\n/**\r\n * The mime-type of the image\r\n */\r\nexport enum ImageMimeType {\r\n    /**\r\n     * JPEG Mime-type\r\n     */\r\n    JPEG = \"image/jpeg\",\r\n    /**\r\n     * PNG Mime-type\r\n     */\r\n    PNG = \"image/png\",\r\n}\r\n/**\r\n * The alpha rendering mode of the material\r\n */\r\nexport enum MaterialAlphaMode {\r\n    /**\r\n     * The alpha value is ignored and the rendered output is fully opaque\r\n     */\r\n    OPAQUE = \"OPAQUE\",\r\n    /**\r\n     * The rendered output is either fully opaque or fully transparent depending on the alpha value and the specified alpha cutoff value\r\n     */\r\n    MASK = \"MASK\",\r\n    /**\r\n     * The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator)\r\n     */\r\n    BLEND = \"BLEND\",\r\n}\r\n/**\r\n * The type of the primitives to render\r\n */\r\nexport enum MeshPrimitiveMode {\r\n    /**\r\n     * Points\r\n     */\r\n    POINTS = 0,\r\n    /**\r\n     * Lines\r\n     */\r\n    LINES = 1,\r\n    /**\r\n     * Line Loop\r\n     */\r\n    LINE_LOOP = 2,\r\n    /**\r\n     * Line Strip\r\n     */\r\n    LINE_STRIP = 3,\r\n    /**\r\n     * Triangles\r\n     */\r\n    TRIANGLES = 4,\r\n    /**\r\n     * Triangle Strip\r\n     */\r\n    TRIANGLE_STRIP = 5,\r\n    /**\r\n     * Triangle Fan\r\n     */\r\n    TRIANGLE_FAN = 6,\r\n}\r\n/**\r\n * Magnification filter.  Valid values correspond to WebGL enums: 9728 (NEAREST) and 9729 (LINEAR)\r\n */\r\nexport enum TextureMagFilter {\r\n    /**\r\n     * Nearest\r\n     */\r\n    NEAREST = 9728,\r\n    /**\r\n     * Linear\r\n     */\r\n    LINEAR = 9729,\r\n}\r\n/**\r\n * Minification filter.  All valid values correspond to WebGL enums\r\n */\r\nexport enum TextureMinFilter {\r\n    /**\r\n     * Nearest\r\n     */\r\n    NEAREST = 9728,\r\n    /**\r\n     * Linear\r\n     */\r\n    LINEAR = 9729,\r\n    /**\r\n     * Nearest Mip-Map Nearest\r\n     */\r\n    NEAREST_MIPMAP_NEAREST = 9984,\r\n    /**\r\n     * Linear Mipmap Nearest\r\n     */\r\n    LINEAR_MIPMAP_NEAREST = 9985,\r\n    /**\r\n     * Nearest Mipmap Linear\r\n     */\r\n    NEAREST_MIPMAP_LINEAR = 9986,\r\n    /**\r\n     * Linear Mipmap Linear\r\n     */\r\n    LINEAR_MIPMAP_LINEAR = 9987,\r\n}\r\n/**\r\n * S (U) wrapping mode.  All valid values correspond to WebGL enums\r\n */\r\nexport enum TextureWrapMode {\r\n    /**\r\n     * Clamp to Edge\r\n     */\r\n    CLAMP_TO_EDGE = 33071,\r\n    /**\r\n     * Mirrored Repeat\r\n     */\r\n    MIRRORED_REPEAT = 33648,\r\n    /**\r\n     * Repeat\r\n     */\r\n    REPEAT = 10497,\r\n}\r\n/**\r\n * glTF Property\r\n */\r\nexport interface Iproperty {\r\n    /**\r\n     * Dictionary object with extension-specific objects\r\n     */\r\n    extensions?: {\r\n        [key: string]: any;\r\n    };\r\n    /**\r\n     * Application-Specific data\r\n     */\r\n    extras?: any;\r\n}\r\n/**\r\n * glTF Child of Root Property\r\n */\r\nexport interface IchildRootProperty extends Iproperty {\r\n    /**\r\n     * The user-defined name of this object\r\n     */\r\n    name?: string;\r\n}\r\n/**\r\n * Indices of those attributes that deviate from their initialization value\r\n */\r\nexport interface IgltfAccessorSparseIndices extends Iproperty {\r\n    /**\r\n     * The index of the bufferView with sparse indices. Referenced bufferView can't have ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER target\r\n     */\r\n    bufferView: number;\r\n    /**\r\n     * The offset relative to the start of the bufferView in bytes. Must be aligned\r\n     */\r\n    byteOffset?: number;\r\n    /**\r\n     * The indices data type.  Valid values correspond to WebGL enums: 5121 (UNSIGNED_BYTE), 5123 (UNSIGNED_SHORT), 5125 (UNSIGNED_INT)\r\n     */\r\n    componentType: AccessorComponentType;\r\n}\r\n/**\r\n * Array of size accessor.sparse.count times number of components storing the displaced accessor attributes pointed by accessor.sparse.indices\r\n */\r\nexport interface IgltfAccessorSparseValues extends Iproperty {\r\n    /**\r\n     * The index of the bufferView with sparse values. Referenced bufferView can't have ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER target\r\n     */\r\n    bufferView: number;\r\n    /**\r\n     * The offset relative to the start of the bufferView in bytes. Must be aligned\r\n     */\r\n    byteOffset?: number;\r\n}\r\n/**\r\n * Sparse storage of attributes that deviate from their initialization value\r\n */\r\nexport interface IgltfAccessorSparse extends Iproperty {\r\n    /**\r\n     * The number of attributes encoded in this sparse accessor\r\n     */\r\n    count: number;\r\n    /**\r\n     * Index array of size count that points to those accessor attributes that deviate from their initialization value. Indices must strictly increase\r\n     */\r\n    indices: IgltfAccessorSparseIndices;\r\n    /**\r\n     * Array of size count times number of components, storing the displaced accessor attributes pointed by indices. Substituted values must have the same componentType and number of components as the base accessor\r\n     */\r\n    values: IgltfAccessorSparseValues;\r\n}\r\n/**\r\n * A typed view into a bufferView.  A bufferView contains raw binary data.  An accessor provides a typed view into a bufferView or a subset of a bufferView similar to how WebGL's vertexAttribPointer() defines an attribute in a buffer\r\n */\r\nexport interface IgltfAccessor extends IchildRootProperty {\r\n    /**\r\n     * The index of the bufferview\r\n     */\r\n    bufferView?: number;\r\n    /**\r\n     * The offset relative to the start of the bufferView in bytes\r\n     */\r\n    byteOffset?: number;\r\n    /**\r\n     * The datatype of components in the attribute\r\n     */\r\n    componentType: AccessorComponentType;\r\n    /**\r\n     * Specifies whether integer data values should be normalized\r\n     */\r\n    normalized?: boolean;\r\n    /**\r\n     * The number of attributes referenced by this accessor\r\n     */\r\n    count: number;\r\n    /**\r\n     * Specifies if the attribute is a scalar, vector, or matrix\r\n     */\r\n    type: AccessorType;\r\n    /**\r\n     * Maximum value of each component in this attribute\r\n     */\r\n    max?: number[];\r\n    /**\r\n     * Minimum value of each component in this attribute\r\n     */\r\n    min?: number[];\r\n    /**\r\n     * Sparse storage of attributes that deviate from their initialization value\r\n     */\r\n    sparse?: IgltfAccessorSparse;\r\n}\r\n/**\r\n * Targets an animation's sampler at a node's property\r\n */\r\nexport interface IgltfAnimationChannel extends Iproperty {\r\n    /**\r\n     * The index of a sampler in this animation used to compute the value for the target\r\n     */\r\n    sampler: number;\r\n    /**\r\n     * The index of the node and TRS property to target\r\n     */\r\n    target: IgltfAnimationChannelTarget;\r\n}\r\n/**\r\n * The index of the node and TRS property that an animation channel targets\r\n */\r\nexport interface IgltfAnimationChannelTarget extends Iproperty {\r\n    /**\r\n     * The index of the node to target\r\n     */\r\n    node: number;\r\n    /**\r\n     * The name of the node's TRS property to modify, or the weights of the Morph Targets it instantiates\r\n     */\r\n    path: AnimationChannelTargetPath;\r\n}\r\n/**\r\n * Combines input and output accessors with an interpolation algorithm to define a keyframe graph (but not its target)\r\n */\r\nexport interface IgltfAnimationSampler extends Iproperty {\r\n    /**\r\n     * The index of an accessor containing keyframe input values, e.g., time\r\n     */\r\n    input: number;\r\n    /**\r\n     * Interpolation algorithm\r\n     */\r\n    interpolation?: AnimationSamplerInterpolation;\r\n    /**\r\n     * The index of an accessor, containing keyframe output values\r\n     */\r\n    output: number;\r\n}\r\n/**\r\n * A keyframe animation\r\n */\r\nexport interface IgltfAnimation extends IchildRootProperty {\r\n    /**\r\n     * An array of channels, each of which targets an animation's sampler at a node's property\r\n     */\r\n    channels: IgltfAnimationChannel[];\r\n    /**\r\n     * An array of samplers that combines input and output accessors with an interpolation algorithm to define a keyframe graph (but not its target)\r\n     */\r\n    samplers: IgltfAnimationSampler[];\r\n}\r\n/**\r\n * Metadata about the glTF asset\r\n */\r\nexport interface IglTFAsset extends IchildRootProperty {\r\n    /**\r\n     * A copyright message suitable for display to credit the content creator\r\n     */\r\n    copyright?: string;\r\n    /**\r\n     * Tool that generated this glTF model.  Useful for debugging\r\n     */\r\n    generator?: string;\r\n    /**\r\n     * The glTF version that this asset targets\r\n     */\r\n    version: string;\r\n    /**\r\n     * The minimum glTF version that this asset targets\r\n     */\r\n    minVersion?: string;\r\n}\r\n/**\r\n * A buffer points to binary geometry, animation, or skins\r\n */\r\nexport interface IgltfBuffer extends IchildRootProperty {\r\n    /**\r\n     * The uri of the buffer.  Relative paths are relative to the .gltf file.  Instead of referencing an external file, the uri can also be a data-uri\r\n     */\r\n    uri?: string;\r\n    /**\r\n     * The length of the buffer in bytes\r\n     */\r\n    byteLength: number;\r\n}\r\n/**\r\n * A view into a buffer generally representing a subset of the buffer\r\n */\r\nexport interface IgltfBufferView extends IchildRootProperty {\r\n    /**\r\n     * The index of the buffer\r\n     */\r\n    buffer: number;\r\n    /**\r\n     * The offset into the buffer in bytes\r\n     */\r\n    byteOffset: number;\r\n    /**\r\n     * The lenth of the bufferView in bytes\r\n     */\r\n    byteLength: number;\r\n    /**\r\n     * The stride, in bytes\r\n     */\r\n    byteStride?: number;\r\n    /**\r\n     * The gltarget\r\n     */\r\n    target?: number;\r\n}\r\n/**\r\n * An orthographic camera containing properties to create an orthographic projection matrix\r\n */\r\nexport interface IgltfCameraOrthographic extends Iproperty {\r\n    /**\r\n     * The floating-point horizontal magnification of the view. Must not be zero\r\n     */\r\n    xmag: number;\r\n    /**\r\n     * The floating-point vertical magnification of the view. Must not be zero\r\n     */\r\n    ymag: number;\r\n    /**\r\n     * The floating-point distance to the far clipping plane. zfar must be greater than znear\r\n     */\r\n    zfar: number;\r\n    /**\r\n     * The floating-point distance to the near clipping plane\r\n     */\r\n    znear: number;\r\n}\r\n/**\r\n * A perspective camera containing properties to create a perspective projection matrix\r\n */\r\nexport interface IgltfCameraPerspective extends Iproperty {\r\n    /**\r\n     * The floating-point aspect ratio of the field of view\r\n     */\r\n    aspectRatio?: number;\r\n    /**\r\n     * The floating-point vertical field of view in radians\r\n     */\r\n    yfov: number;\r\n    /**\r\n     * The floating-point distance to the far clipping plane\r\n     */\r\n    zfar?: number;\r\n    /**\r\n     * The floating-point distance to the near clipping plane\r\n     */\r\n    znear: number;\r\n}\r\n/**\r\n * A camera's projection.  A node can reference a camera to apply a transform to place the camera in the scene\r\n */\r\nexport interface IgltfCamera extends IchildRootProperty {\r\n    /**\r\n     * An orthographic camera containing properties to create an orthographic projection matrix\r\n     */\r\n    orthographic?: IgltfCameraOrthographic;\r\n    /**\r\n     * A perspective camera containing properties to create a perspective projection matrix\r\n     */\r\n    perspective?: IgltfCameraPerspective;\r\n    /**\r\n     * Specifies if the camera uses a perspective or orthographic projection\r\n     */\r\n    type: CameraType;\r\n}\r\n/**\r\n * Image data used to create a texture. Image can be referenced by URI or bufferView index. mimeType is required in the latter case\r\n */\r\nexport interface IgltfImage extends IchildRootProperty {\r\n    /**\r\n     * The uri of the image.  Relative paths are relative to the .gltf file.  Instead of referencing an external file, the uri can also be a data-uri.  The image format must be jpg or png\r\n     */\r\n    uri?: string;\r\n    /**\r\n     * The image's MIME type\r\n     */\r\n    mimeType?: ImageMimeType;\r\n    /**\r\n     * The index of the bufferView that contains the image. Use this instead of the image's uri property\r\n     */\r\n    bufferView?: number;\r\n}\r\n/**\r\n * Material Normal Texture Info\r\n */\r\nexport interface IgltfMaterialNormalTextureInfo extends IgltfTextureInfo {\r\n    /**\r\n     * The scalar multiplier applied to each normal vector of the normal texture\r\n     */\r\n    scale?: number;\r\n}\r\n/**\r\n * Material Occlusion Texture Info\r\n */\r\nexport interface IgltfMaterialOcclusionTextureInfo extends IgltfTextureInfo {\r\n    /**\r\n     * A scalar multiplier controlling the amount of occlusion applied\r\n     */\r\n    strength?: number;\r\n}\r\n/**\r\n * A set of parameter values that are used to define the metallic-roughness material model from Physically-Based Rendering (PBR) methodology\r\n */\r\nexport interface IgltfMaterialPbrMetallicRoughness {\r\n    /**\r\n     * The material's base color factor\r\n     */\r\n    baseColorFactor?: number[];\r\n    /**\r\n     * The base color texture\r\n     */\r\n    baseColorTexture?: IgltfTextureInfo;\r\n    /**\r\n     * The metalness of the material\r\n     */\r\n    metallicFactor?: number;\r\n    /**\r\n     * The roughness of the material\r\n     */\r\n    roughnessFactor?: number;\r\n    /**\r\n     * The metallic-roughness texture\r\n     */\r\n    metallicRoughnessTexture?: IgltfTextureInfo;\r\n}\r\n/**\r\n * The material appearance of a primitive\r\n */\r\nexport interface IgltfMaterial extends IchildRootProperty {\r\n    /**\r\n     * A set of parameter values that are used to define the metallic-roughness material model from Physically-Based Rendering (PBR) methodology. When not specified, all the default values of pbrMetallicRoughness apply\r\n     */\r\n    pbrMetallicRoughness?: IgltfMaterialPbrMetallicRoughness;\r\n    /**\r\n     * The normal map texture\r\n     */\r\n    normalTexture?: IgltfMaterialNormalTextureInfo;\r\n    /**\r\n     * The occlusion map texture\r\n     */\r\n    occlusionTexture?: IgltfMaterialOcclusionTextureInfo;\r\n    /**\r\n     * The emissive map texture\r\n     */\r\n    emissiveTexture?: IgltfTextureInfo;\r\n    /**\r\n     * The RGB components of the emissive color of the material. These values are linear. If an emissiveTexture is specified, this value is multiplied with the texel values\r\n     */\r\n    emissiveFactor?: number[];\r\n    /**\r\n     * The alpha rendering mode of the material\r\n     */\r\n    alphaMode?: MaterialAlphaMode;\r\n    /**\r\n     * The alpha cutoff value of the material\r\n     */\r\n    alphaCutoff?: number;\r\n    /**\r\n     * Specifies whether the material is double sided\r\n     */\r\n    doubleSided?: boolean;\r\n\r\n    // //---拓展\r\n    // shader?: string;\r\n    // queue?: number;\r\n}\r\n/**\r\n * Geometry to be rendered with the given material\r\n */\r\nexport interface IgltfMeshPrimitive extends Iproperty {\r\n    /**\r\n     * A dictionary object, where each key corresponds to mesh attribute semantic and each value is the index of the accessor containing attribute's data\r\n     */\r\n    attributes: {\r\n        [name: string]: number;\r\n    };\r\n    /**\r\n     * The index of the accessor that contains the indices\r\n     */\r\n    indices?: number;\r\n    /**\r\n     * The index of the material to apply to this primitive when rendering\r\n     */\r\n    material?: number;\r\n    /**\r\n     * The type of primitives to render. All valid values correspond to WebGL enums\r\n     */\r\n    mode?: MeshPrimitiveMode;\r\n    /**\r\n     * An array of Morph Targets, each  Morph Target is a dictionary mapping attributes (only POSITION, NORMAL, and TANGENT supported) to their deviations in the Morph Target\r\n     */\r\n    targets?: {\r\n        [name: string]: number;\r\n    }[];\r\n}\r\n/**\r\n * A set of primitives to be rendered.  A node can contain one mesh.  A node's transform places the mesh in the scene\r\n */\r\nexport interface IgltfMesh extends IchildRootProperty {\r\n    /**\r\n     * An array of primitives, each defining geometry to be rendered with a material\r\n     */\r\n    primitives: IgltfMeshPrimitive[];\r\n    /**\r\n     * Array of weights to be applied to the Morph Targets\r\n     */\r\n    weights?: number[];\r\n}\r\n/**\r\n * A node in the node hierarchy\r\n */\r\nexport interface IgltfNode extends IchildRootProperty {\r\n    /**\r\n     * The index of the camera referenced by this node\r\n     */\r\n    camera?: number;\r\n    /**\r\n     * The indices of this node's children\r\n     */\r\n    children?: number[];\r\n    /**\r\n     * The index of the skin referenced by this node\r\n     */\r\n    skin?: number;\r\n    /**\r\n     * A floating-point 4x4 transformation matrix stored in column-major order\r\n     */\r\n    matrix?: number[];\r\n    /**\r\n     * The index of the mesh in this node\r\n     */\r\n    mesh?: number;\r\n    /**\r\n     * The node's unit quaternion rotation in the order (x, y, z, w), where w is the scalar\r\n     */\r\n    rotation?: number[];\r\n    /**\r\n     * The node's non-uniform scale, given as the scaling factors along the x, y, and z axes\r\n     */\r\n    scale?: number[];\r\n    /**\r\n     * The node's translation along the x, y, and z axes\r\n     */\r\n    translation?: number[];\r\n    /**\r\n     * The weights of the instantiated Morph Target. Number of elements must match number of Morph Targets of used mesh\r\n     */\r\n    weights?: number[];\r\n\r\n    // /**\r\n    //  * 拓展的\r\n    //  */\r\n    // parent?: number;\r\n\r\n    // comps?: any[];\r\n}\r\n/**\r\n * Texture sampler properties for filtering and wrapping modes\r\n */\r\nexport interface IgltfSampler extends IchildRootProperty {\r\n    /**\r\n     * Magnification filter.  Valid values correspond to WebGL enums: 9728 (NEAREST) and 9729 (LINEAR)\r\n     */\r\n    magFilter?: TextureMagFilter;\r\n    /**\r\n     * Minification filter.  All valid values correspond to WebGL enums\r\n     */\r\n    minFilter?: TextureMinFilter;\r\n    /**\r\n     * S (U) wrapping mode.  All valid values correspond to WebGL enums\r\n     */\r\n    wrapS?: TextureWrapMode;\r\n    /**\r\n     * T (V) wrapping mode.  All valid values correspond to WebGL enums\r\n     */\r\n    wrapT?: TextureWrapMode;\r\n}\r\n/**\r\n * The root nodes of a scene\r\n */\r\nexport interface IgltfScene extends IchildRootProperty {\r\n    /**\r\n     * The indices of each root node\r\n     */\r\n    nodes: number[];\r\n}\r\n/**\r\n * Joints and matrices defining a skin\r\n */\r\nexport interface IgltfSkin extends IchildRootProperty {\r\n    /**\r\n     * The index of the accessor containing the floating-point 4x4 inverse-bind matrices.  The default is that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were pre-applied\r\n     */\r\n    inverseBindMatrices?: number;\r\n    /**\r\n     * The index of the node used as a skeleton root. When undefined, joints transforms resolve to scene root\r\n     */\r\n    skeleton?: number;\r\n    /**\r\n     * Indices of skeleton nodes, used as joints in this skin.  The array length must be the same as the count property of the inverseBindMatrices accessor (when defined)\r\n     */\r\n    joints: number[];\r\n}\r\n/**\r\n * A texture and its sampler\r\n */\r\nexport interface IgltfTexture extends IchildRootProperty {\r\n    /**\r\n     * The index of the sampler used by this texture. When undefined, a sampler with repeat wrapping and auto filtering should be used\r\n     */\r\n    sampler?: number;\r\n    /**\r\n     * The index of the image used by this texture\r\n     */\r\n    source: number;\r\n}\r\n/**\r\n * Reference to a texture\r\n */\r\nexport interface IgltfTextureInfo extends Iproperty {\r\n    /**\r\n     * The index of the texture\r\n     */\r\n    index: number;\r\n    /**\r\n     * The set index of texture's TEXCOORD attribute used for texture coordinate mapping\r\n     */\r\n    texCoord?: number;\r\n}\r\n","import { CameraType } from \"./gltfJsonStruct\";\r\nimport { Camera, ProjectionEnum } from \"../../ec/components/camera\";\r\nimport { IgltfJson } from \"./loadglTF\";\r\n\r\nexport class ParseCameraNode {\r\n    static parse(index: number, gltf: IgltfJson): Camera {\r\n        let node = gltf.cameras[index];\r\n        let cam = new Camera();\r\n\r\n        switch (node.type) {\r\n            case CameraType.PERSPECTIVE:\r\n                cam.projectionType = ProjectionEnum.PERSPECTIVE;\r\n\r\n                let data = node.perspective;\r\n                cam.fov = data.yfov;\r\n                cam.near = data.znear;\r\n                if (data.zfar) {\r\n                    cam.far = data.zfar;\r\n                }\r\n                // if (data.aspectRatio) {\r\n                //     cam.aspest = data.aspectRatio;\r\n                // }\r\n                break;\r\n            case CameraType.ORTHOGRAPHIC:\r\n                cam.projectionType = ProjectionEnum.ORTHOGRAPH;\r\n                let datao = node.orthographic;\r\n                cam.near = datao.znear;\r\n                cam.far = datao.zfar;\r\n                cam.size = datao.ymag;\r\n                // cam.aspest = datao.xmag / datao.ymag;\r\n                break;\r\n        }\r\n        return cam;\r\n    }\r\n}\r\n","import { Texture } from \"./texture\";\r\nimport { ToyAsset, ItoyAsset } from \"../base/toyAsset\";\r\nimport { RenderLayerEnum } from \"../../ec/ec\";\r\nimport { Shader, IshaderInfo } from \"./shader\";\r\nimport { Color } from \"../../mathD/color\";\r\nimport { Vec4 } from \"../../mathD/vec4\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\n\r\nexport class Material extends ToyAsset {\r\n    constructor(param?: ItoyAsset) {\r\n        super(param);\r\n    }\r\n    uniforms: { [name: string]: any } = {};\r\n\r\n    _dirty: boolean = false;\r\n    private _program: IshaderInfo;\r\n    set shader(value: IshaderInfo) {\r\n        this._program = value;\r\n        this._dirty = true;\r\n    }\r\n    get shader(): IshaderInfo {\r\n        return this._program;\r\n    }\r\n\r\n    private _layer: RenderLayerEnum;\r\n    queue: number = 0;\r\n\r\n    set layer(value: RenderLayerEnum) {\r\n        this._layer = value;\r\n    }\r\n    get layer(): RenderLayerEnum {\r\n        return this._layer || (this._program && this._program.layer) || RenderLayerEnum.Geometry;\r\n    }\r\n\r\n    setColor(key: string, value: Color) {\r\n        this.uniforms[key] = value;\r\n    }\r\n    setTexture(key: string, value: Texture) {\r\n        this.uniforms[key] = value;\r\n    }\r\n    setVector4(key: string, value: Vec4) {\r\n        this.uniforms[key] = value;\r\n    }\r\n    setVector3(key: string, value: Vec3) {\r\n        this.uniforms[key] = value;\r\n    }\r\n    setFloat(key: string, value: number) {\r\n        this.uniforms[key] = value;\r\n    }\r\n    dispose(): void {}\r\n}\r\n","import { loadArrayBuffer } from \"../../io/loadtool\";\r\nimport { IgltfJson } from \"./loadglTF\";\r\n\r\nexport class ParseBufferNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<ArrayBuffer> {\r\n        if (gltf.cache.bufferNodeCache[index]) {\r\n            return gltf.cache.bufferNodeCache[index];\r\n        } else {\r\n            let bufferNode = gltf.buffers[index];\r\n            let url = gltf.rootURL + \"/\" + bufferNode.uri;\r\n            let task = loadArrayBuffer(url).then(buffer => {\r\n                return buffer;\r\n            });\r\n            gltf.cache.bufferNodeCache[index] = task;\r\n            return task;\r\n        }\r\n    }\r\n}\r\n","import { ParseBufferNode } from \"./parseBufferNode\";\r\nimport { IgltfJson, IgltfBufferview } from \"./loadglTF\";\r\nimport { GlRender } from \"../../render/glRender\";\r\n\r\nexport class ParseBufferViewNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<IgltfBufferview> {\r\n        if (gltf.cache.bufferviewNodeCache[index]) {\r\n            return gltf.cache.bufferviewNodeCache[index];\r\n        } else {\r\n            let bufferview = gltf.bufferViews[index];\r\n            let bufferindex = bufferview.buffer;\r\n            let task = ParseBufferNode.parse(bufferindex, gltf).then(buffer => {\r\n                let viewbuffer = new Uint8Array(buffer, bufferview.byteOffset, bufferview.byteLength);\r\n                let stride = bufferview.byteStride;\r\n                let glbuffer = bufferview.target && GlRender.createBuffer(bufferview.target, viewbuffer);\r\n                return { viewBuffer: viewbuffer, byteStride: stride, glBuffer: glbuffer };\r\n            });\r\n            gltf.cache.bufferviewNodeCache[index] = task;\r\n            return task;\r\n        }\r\n    }\r\n}\r\n","import { Texture } from \"../assets/texture\";\r\nimport { loadImg } from \"../../io/loadtool\";\r\nimport { LoadTextureSample } from \"../loader/loadTexture\";\r\nimport { GlRender, ItexImageDataOption, ItexViewDataOption } from \"../../render/glRender\";\r\nimport { ParseBufferViewNode } from \"./parseBufferViewNode\";\r\nimport { IgltfJson } from \"./loadglTF\";\r\n\r\nexport class ParseTextureNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<Texture | null> {\r\n        if (gltf.cache.textrueNodeCache[index]) {\r\n            return gltf.cache.textrueNodeCache[index];\r\n        } else {\r\n            if (gltf.textures == null) return null;\r\n            let node = gltf.textures[index];\r\n            if (gltf.images == null) return null;\r\n            let imageNode = gltf.images[node.source];\r\n\r\n            if (imageNode.uri != null) {\r\n                let imagUrl = gltf.rootURL + \"/\" + imageNode.uri;\r\n                let texture: Texture = new Texture({ name: name, URL: imagUrl });\r\n                let task = loadImg(imagUrl).then(img => {\r\n                    texture.width = img.width;\r\n                    texture.height = img.height;\r\n\r\n                    let texOp: ItexImageDataOption = {};\r\n                    if (node.sampler) {\r\n                        let samplerinfo = gltf.samplers[node.sampler];\r\n                        if (samplerinfo.wrapS != null) {\r\n                            texOp.wrapS = samplerinfo.wrapS;\r\n                        }\r\n                        if (samplerinfo.wrapT) {\r\n                            texOp.wrapT = samplerinfo.wrapT;\r\n                        }\r\n                        if (samplerinfo.magFilter) {\r\n                            texOp.filterMax = samplerinfo.magFilter;\r\n                        }\r\n                        if (samplerinfo.minFilter) {\r\n                            texOp.filterMin = samplerinfo.minFilter;\r\n                        }\r\n                    }\r\n                    let imaginfo = GlRender.createTextureFromImg(img, texOp);\r\n                    texture.texture = imaginfo.texture;\r\n                    texture.texDes = imaginfo.texDes;\r\n\r\n                    return texture;\r\n                });\r\n                gltf.cache.textrueNodeCache[index] = task;\r\n                return task;\r\n            } else {\r\n                let texture: Texture = new Texture({ name: name });\r\n                let task = ParseBufferViewNode.parse(imageNode.bufferView, gltf).then(viewnode => {\r\n                    //    let bob=new Blob([viewnode.view], { type: imageNode.mimeType })\r\n                    //    let url = URL.createObjectURL(bob);\r\n                    //    asset= loader.loadDependAsset(url) as Texture;\r\n                    let texOp: ItexViewDataOption = { width: 100, height: 100 }; //todo\r\n                    if (node.sampler) {\r\n                        let samplerinfo = gltf.samplers[node.sampler];\r\n                        if (samplerinfo.wrapS != null) {\r\n                            texOp.wrapS = samplerinfo.wrapS;\r\n                        }\r\n                        if (samplerinfo.wrapT) {\r\n                            texOp.wrapT = samplerinfo.wrapT;\r\n                        }\r\n                        if (samplerinfo.magFilter) {\r\n                            texOp.filterMax = samplerinfo.magFilter;\r\n                        }\r\n                        if (samplerinfo.minFilter) {\r\n                            texOp.filterMin = samplerinfo.minFilter;\r\n                        }\r\n                    }\r\n                    let imaginfo = GlRender.createTextureFromViewData(viewnode.viewBuffer, texOp);\r\n                    texture.texture = imaginfo.texture;\r\n                    texture.texDes = imaginfo.texDes;\r\n\r\n                    return texture;\r\n                });\r\n                gltf.cache.textrueNodeCache[index] = task;\r\n                return task;\r\n            }\r\n            // let asset=assetMgr.load(bundle.rootURL+\"/\"+uri.uri) as Texture;\r\n        }\r\n    }\r\n}\r\n","import { Shader } from \"./assets/shader\";\r\nimport { GlRender } from \"../render/glRender\";\r\nimport { Color } from \"../mathD/color\";\r\n\r\nexport class DefShader {\r\n    private static defShader: { [type: string]: Shader } = {};\r\n    static fromType(type: string): Shader {\r\n        if (this.defShader[type] == null) {\r\n            switch (type) {\r\n                case \"color\":\r\n                    let colorVs =\r\n                        \"\\\r\n                          attribute vec3 POSITION;\\\r\n                          void main()\\\r\n                          {\\\r\n                              highp vec4 tmplet_1=vec4(POSITION.xyz,1.0);\\\r\n                              gl_Position = tmplet_1;\\\r\n                          }\";\r\n\r\n                    let colorFs =\r\n                        \"\\\r\n                          uniform highp vec4 MainColor;\\\r\n                          void main()\\\r\n                          {\\\r\n                              gl_FragData[0] = MainColor;\\\r\n                          }\";\r\n                    this.defShader[type] = Shader.fromCustomData({\r\n                        passes: [\r\n                            {\r\n                                program: {\r\n                                    vs: colorVs,\r\n                                    fs: colorFs,\r\n                                    name: \"defcolor\",\r\n                                },\r\n                                states: {\r\n                                    enableCullFace: false,\r\n                                },\r\n                            },\r\n                        ],\r\n                    });\r\n                    break;\r\n                case \"base\":\r\n                    let baseVs =\r\n                        \"\\\r\n                          attribute vec3 POSITION;\\\r\n                          uniform highp mat4 u_mat_mvp;\\\r\n                          void main()\\\r\n                          {\\\r\n                              highp vec4 tmplet_1=vec4(POSITION.xyz,1.0);\\\r\n                              gl_Position = u_mat_mvp * tmplet_1;\\\r\n                          }\";\r\n\r\n                    let baseFs =\r\n                        \"\\\r\n                          uniform highp vec4 MainColor;\\\r\n                          void main()\\\r\n                          {\\\r\n                              gl_FragData[0] = MainColor;\\\r\n                          }\";\r\n                    this.defShader[type] = Shader.fromCustomData({\r\n                        passes: [\r\n                            {\r\n                                program: {\r\n                                    vs: baseVs,\r\n                                    fs: baseFs,\r\n                                },\r\n                                states: {\r\n                                    enableCullFace: false,\r\n                                },\r\n                            },\r\n                        ],\r\n                    });\r\n                    break;\r\n                default:\r\n                    console.warn(\"Unkowned default shader type:\", type);\r\n                    return null;\r\n            }\r\n        }\r\n        return this.defShader[type];\r\n    }\r\n}\r\n","import { Material } from \"../assets/material\";\r\nimport { Vec4 } from \"../../mathD/vec4\";\r\nimport { IgltfJson } from \"./loadglTF\";\r\nimport { ParseTextureNode } from \"./parseTextureNode\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\nimport { DefShader } from \"../defShader\";\r\nimport { Color } from \"../../mathD/color\";\r\n\r\nexport class ParseMaterialNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<Material> {\r\n        if (gltf.cache.materialNodeCache[index]) {\r\n            return gltf.cache.materialNodeCache[index];\r\n        } else {\r\n            if (gltf.materials == null) {\r\n                return Promise.resolve(null);\r\n            }\r\n            let node = gltf.materials[index];\r\n            let mat = new Material({ name: node.name });\r\n            let shader = DefShader.fromType(\"base\");\r\n            mat.shader = shader;\r\n            mat.setColor(\"MainColor\", Color.create());\r\n            //-------------loadshader\r\n            // let pbrShader = assetMgr.load(\"resource/shader/pbr_glTF.shader.json\") as Shader;\r\n            // mat.setShader(pbrShader);\r\n            if (node.pbrMetallicRoughness) {\r\n                let nodeMR = node.pbrMetallicRoughness;\r\n                if (nodeMR.baseColorFactor) {\r\n                    let baseColorFactor = Vec4.create();\r\n                    Vec4.copy(nodeMR.baseColorFactor, baseColorFactor);\r\n                    mat.setVector4(\"u_BaseColorFactor\", baseColorFactor);\r\n                }\r\n                if (nodeMR.metallicFactor != null) {\r\n                    mat.setFloat(\"u_metalFactor\", nodeMR.metallicFactor);\r\n                }\r\n                if (nodeMR.roughnessFactor != null) {\r\n                    mat.setFloat(\"u_roughnessFactor\", nodeMR.roughnessFactor);\r\n                }\r\n                if (nodeMR.baseColorTexture != null) {\r\n                    let tex = ParseTextureNode.parse(nodeMR.baseColorTexture.index, gltf).then(tex => {\r\n                        mat.setTexture(\"u_BaseColorSampler\", tex);\r\n                    });\r\n                }\r\n                if (nodeMR.metallicRoughnessTexture) {\r\n                    let tex = ParseTextureNode.parse(nodeMR.metallicRoughnessTexture.index, gltf).then(tex => {\r\n                        mat.setTexture(\"u_MetallicRoughnessSampler\", tex);\r\n                    });\r\n                }\r\n            }\r\n            if (node.normalTexture) {\r\n                let nodet = node.normalTexture;\r\n                let tex = ParseTextureNode.parse(nodet.index, gltf).then(tex => {\r\n                    mat.setTexture(\"u_NormalSampler\", tex);\r\n                });\r\n                // mat.setTexture(\"u_NormalSampler\",tex);\r\n                if (nodet.scale) {\r\n                    mat.setFloat(\"u_NormalScale\", nodet.scale);\r\n                }\r\n            }\r\n            if (node.emissiveTexture) {\r\n                let nodet = node.emissiveTexture;\r\n                let tex = ParseTextureNode.parse(nodet.index, gltf).then(tex => {\r\n                    mat.setTexture(\"u_EmissiveSampler\", tex);\r\n                });\r\n            }\r\n            if (node.emissiveFactor) {\r\n                let ve3 = Vec3.create();\r\n                Vec3.copy(node.emissiveFactor, ve3);\r\n                mat.setVector3(\"u_EmissiveFactor\", ve3);\r\n            }\r\n            if (node.occlusionTexture) {\r\n                let nodet = node.occlusionTexture;\r\n                if (nodet.strength) {\r\n                    mat.setFloat(\"u_OcclusionStrength\", nodet.strength);\r\n                }\r\n            }\r\n\r\n            // let brdfTex = assetMgr.load(\"resource/texture/brdfLUT.imgdes.json\") as Texture;\r\n            // mat.setTexture(\"u_brdfLUT\", brdfTex);\r\n\r\n            // let e_cubeDiff: CubeTexture = new CubeTexture();\r\n            // let e_diffuseArr: string[] = [];\r\n            // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_right_0.jpg\");\r\n            // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_left_0.jpg\");\r\n            // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_top_0.jpg\");\r\n            // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_bottom_0.jpg\");\r\n            // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_front_0.jpg\");\r\n            // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_back_0.jpg\");\r\n            // e_cubeDiff.groupCubeTexture(e_diffuseArr);\r\n\r\n            // let env_speTex = new CubeTexture();\r\n            // for (let i = 0; i < 10; i++) {\r\n            //     let urlarr = [];\r\n            //     urlarr.push(\"resource/texture/papermill/specular/specular_right_\" + i + \".jpg\");\r\n            //     urlarr.push(\"resource/texture/papermill/specular/specular_left_\" + i + \".jpg\");\r\n            //     urlarr.push(\"resource/texture/papermill/specular/specular_top_\" + i + \".jpg\");\r\n            //     urlarr.push(\"resource/texture/papermill/specular/specular_bottom_\" + i + \".jpg\");\r\n            //     urlarr.push(\"resource/texture/papermill/specular/specular_front_\" + i + \".jpg\");\r\n            //     urlarr.push(\"resource/texture/papermill/specular/specular_back_\" + i + \".jpg\");\r\n            //     env_speTex.groupMipmapCubeTexture(urlarr, i, 9);\r\n            // }\r\n            // mat.setCubeTexture(\"u_DiffuseEnvSampler\", e_cubeDiff);\r\n            // mat.setCubeTexture(\"u_SpecularEnvSampler\", env_speTex);\r\n\r\n            return Promise.resolve(mat);\r\n        }\r\n    }\r\n}\r\n","import { ToyAsset, ItoyAsset } from \"../base/toyAsset\";\r\nimport { GlRender, IgeometryInfo, IgeometryOptions } from \"../../render/glRender\";\r\n\r\nexport class Geometry extends ToyAsset {\r\n    constructor(param?: ItoyAsset) {\r\n        super(param);\r\n    }\r\n    dispose(): void {}\r\n    data: IgeometryInfo;\r\n\r\n    static fromCustomData(data: IgeometryOptions) {\r\n        let geometry = GlRender.createGeometry(data);\r\n        let newAsset = new Geometry({ name: \"custom_Mesh\" });\r\n        newAsset.data = geometry;\r\n        return newAsset;\r\n    }\r\n}\r\n","import { AccessorComponentType } from \"./gltfJsonStruct\";\r\nimport { ParseBufferNode } from \"./parseBufferNode\";\r\nimport { IarrayInfo } from \"twebgl/dist/types/type\";\r\nimport { IgltfJson } from \"./loadglTF\";\r\nimport { ParseBufferViewNode } from \"./parseBufferViewNode\";\r\n\r\nexport class ParseAccessorNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<IarrayInfo> {\r\n        let arrayInfo: IarrayInfo = {};\r\n        // return new Promise<AccessorNode>((resolve,reject)=>{\r\n        let accessor = gltf.accessors[index];\r\n\r\n        arrayInfo.componentSize = this.getComponentSize(accessor.type);\r\n        arrayInfo.componentDataType = accessor.componentType;\r\n        arrayInfo.count = accessor.count;\r\n        arrayInfo.offsetInBytes = accessor.byteOffset;\r\n        arrayInfo.normalize = accessor.normalized;\r\n\r\n        if (accessor.bufferView != null) {\r\n            let viewindex = accessor.bufferView;\r\n            // let bufferview = gltf.bufferViews[viewindex];\r\n            // let bufferindex = bufferview.buffer;\r\n            // arrayInfo.strideInBytes = bufferview.byteStride;\r\n\r\n            // return ParseBufferNode.parse(bufferindex, gltf).then(buffer => {\r\n            //     let viewBuffer = new Uint8Array(buffer, bufferview.byteOffset, bufferview.byteLength);\r\n\r\n            //     arrayInfo.value = viewBuffer;\r\n            //     return arrayInfo;\r\n            // });\r\n\r\n            return ParseBufferViewNode.parse(viewindex, gltf).then(value => {\r\n                arrayInfo.value = value.viewBuffer;\r\n                arrayInfo.strideInBytes = value.byteStride;\r\n                arrayInfo.buffer = value.glBuffer;\r\n                return arrayInfo;\r\n            });\r\n        } else {\r\n            let viewBuffer = this.GetTyedArryByLen(accessor.componentType, accessor.count);\r\n            arrayInfo.value = viewBuffer;\r\n            return Promise.resolve(arrayInfo);\r\n        }\r\n    }\r\n\r\n    static GetTyedArryByLen(componentType: AccessorComponentType, Len: number) {\r\n        switch (componentType) {\r\n            case AccessorComponentType.BYTE:\r\n                return new Int8Array(Len);\r\n            case AccessorComponentType.UNSIGNED_BYTE:\r\n                return new Uint8Array(Len);\r\n            case AccessorComponentType.SHORT:\r\n                return new Int16Array(Len);\r\n            case AccessorComponentType.UNSIGNED_SHORT:\r\n                return new Uint16Array(Len);\r\n            case AccessorComponentType.UNSIGNED_INT:\r\n                return new Uint32Array(Len);\r\n            case AccessorComponentType.FLOAT:\r\n                return new Float32Array(Len);\r\n            default:\r\n                throw new Error(`Invalid component type ${componentType}`);\r\n        }\r\n    }\r\n\r\n    private static getComponentSize(type: string): number {\r\n        switch (type) {\r\n            case \"SCALAR\":\r\n                return 1;\r\n            case \"VEC2\":\r\n                return 2;\r\n            case \"VEC3\":\r\n                return 3;\r\n            case \"VEC4\":\r\n            case \"MAT2\":\r\n                return 4;\r\n            case \"MAT3\":\r\n                return 9;\r\n            case \"MAT4\":\r\n                return 16;\r\n        }\r\n    }\r\n}\r\n","import { IgltfJson, IgltfPrimitive } from \"./loadglTF\";\r\nimport { IgltfMeshPrimitive, AccessorComponentType } from \"./gltfJsonStruct\";\r\nimport { Material } from \"../assets/material\";\r\nimport { ParseMaterialNode } from \"./parseMaterialNode\";\r\nimport { Geometry } from \"../assets/geometry\";\r\nimport { IgeometryOptions, GlRender, IgeometryInfo } from \"../../render/glRender\";\r\nimport { ParseAccessorNode } from \"./parseAccessorNode\";\r\nimport { IarrayInfo } from \"twebgl/dist/types/type\";\r\n\r\nexport class ParseMeshNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<IgltfPrimitive[]> {\r\n        if (gltf.cache.meshNodeCache[index]) {\r\n            return gltf.cache.meshNodeCache[index];\r\n        } else {\r\n            let node = gltf.meshes[index];\r\n\r\n            let dataArr: Promise<IgltfPrimitive>[] = [];\r\n            if (node.primitives) {\r\n                for (let key in node.primitives) {\r\n                    let primitive = node.primitives[key];\r\n                    let data = this.parsePrimitive(primitive, gltf);\r\n                    dataArr.push(data);\r\n                }\r\n            }\r\n            let task = Promise.all(dataArr).then(value => {\r\n                //---------------add to cache\r\n\r\n                return value;\r\n            });\r\n            gltf.cache.meshNodeCache[index] = task;\r\n            return task;\r\n        }\r\n    }\r\n\r\n    static parsePrimitive(node: IgltfMeshPrimitive, gltf: IgltfJson): Promise<IgltfPrimitive> {\r\n        return Promise.all([this.parseGeometry(node, gltf), this.parseMaterial(node, gltf)]).then(\r\n            ([geometry, material]) => {\r\n                return { geometry: geometry, material: material };\r\n            },\r\n        );\r\n    }\r\n\r\n    static parseMaterial(node: IgltfMeshPrimitive, gltf: IgltfJson): Promise<Material> {\r\n        let matindex = node.material;\r\n        if (matindex != null) {\r\n            return ParseMaterialNode.parse(matindex, gltf);\r\n        } else {\r\n            return Promise.resolve(null);\r\n        }\r\n    }\r\n\r\n    static parseGeometry(node: IgltfMeshPrimitive, gltf: IgltfJson): Promise<Geometry> {\r\n        let attributes = node.attributes;\r\n        let index = node.indices;\r\n\r\n        let geometryOp: IgeometryOptions = { atts: {} };\r\n        let taskAtts: Promise<void>[] = [];\r\n\r\n        for (let attName in attributes) {\r\n            let attIndex = attributes[attName];\r\n            let attTask = ParseAccessorNode.parse(attIndex, gltf).then(arrayInfo => {\r\n                geometryOp.atts[attName] = arrayInfo;\r\n            });\r\n            taskAtts.push(attTask);\r\n        }\r\n        if (index != null) {\r\n            let indexTask = ParseAccessorNode.parse(index, gltf).then(arrayInfo => {\r\n                geometryOp.indices = arrayInfo;\r\n            });\r\n            taskAtts.push(indexTask);\r\n        }\r\n        return Promise.all(taskAtts).then(() => {\r\n            let geometryInfo = GlRender.createGeometry(geometryOp);\r\n            let newGeometry = new Geometry();\r\n            newGeometry.data = geometryInfo;\r\n\r\n            // this.getTypedValueArr(newGeometry, geometryOp);\r\n            return newGeometry;\r\n        });\r\n    }\r\n\r\n    private static getTypedValueArr(newGeometry: any, geometryOp: IgeometryOptions) {\r\n        for (const key in geometryOp.atts) {\r\n            const element = geometryOp.atts[key] as IarrayInfo;\r\n            let strideInBytes =\r\n                element.strideInBytes || this.getByteSize(element.componentDataType, element.componentSize);\r\n\r\n            let dataArr = [];\r\n\r\n            for (let i = 0; i < element.count; i++) {\r\n                let value = this.GetTypedArry(\r\n                    element.componentDataType,\r\n                    element.value as Uint8Array,\r\n                    i * strideInBytes + element.offsetInBytes,\r\n                    element.componentSize,\r\n                );\r\n                dataArr.push(value);\r\n            }\r\n            newGeometry[key] = dataArr;\r\n        }\r\n        if (geometryOp.indices) {\r\n            const element = geometryOp.indices as IarrayInfo;\r\n\r\n            let strideInBytes =\r\n                element.strideInBytes || this.getByteSize(element.componentDataType, element.componentSize);\r\n\r\n            let dataArr = [];\r\n\r\n            for (let i = 0; i < element.count; i++) {\r\n                let value = this.GetTypedArry(\r\n                    element.componentDataType,\r\n                    element.value as Uint8Array,\r\n                    i * strideInBytes + element.offsetInBytes,\r\n                    element.componentSize,\r\n                );\r\n                dataArr.push(value);\r\n            }\r\n            newGeometry[\"indices\"] = dataArr;\r\n        }\r\n\r\n        console.warn(newGeometry);\r\n    }\r\n    static GetTypedArry(\r\n        componentType: AccessorComponentType,\r\n        bufferview: ArrayBufferView,\r\n        byteOffset: number,\r\n        Len: number,\r\n    ) {\r\n        let buffer = bufferview.buffer;\r\n        byteOffset = bufferview.byteOffset + (byteOffset || 0);\r\n        switch (componentType) {\r\n            case AccessorComponentType.BYTE:\r\n                return new Int8Array(buffer, byteOffset, Len);\r\n            case AccessorComponentType.UNSIGNED_BYTE:\r\n                return new Uint8Array(buffer, byteOffset, Len);\r\n            case AccessorComponentType.SHORT:\r\n                return new Int16Array(buffer, byteOffset, Len);\r\n            case AccessorComponentType.UNSIGNED_SHORT:\r\n                return new Uint16Array(buffer, byteOffset, Len);\r\n            case AccessorComponentType.UNSIGNED_INT:\r\n                return new Uint32Array(buffer, byteOffset, Len);\r\n            case AccessorComponentType.FLOAT: {\r\n                if ((byteOffset / 4) % 1 != 0) {\r\n                    console.error(\"??\");\r\n                }\r\n                return new Float32Array(buffer, byteOffset, Len);\r\n            }\r\n            default:\r\n                throw new Error(`Invalid component type ${componentType}`);\r\n        }\r\n    }\r\n    private static getByteSize(componentType: number, componentSize: number): number {\r\n        switch (componentType) {\r\n            case AccessorComponentType.BYTE:\r\n                return componentSize * Int8Array.BYTES_PER_ELEMENT;\r\n            case AccessorComponentType.UNSIGNED_BYTE:\r\n                return componentSize * Uint8Array.BYTES_PER_ELEMENT;\r\n            case AccessorComponentType.SHORT:\r\n                return componentSize * Int16Array.BYTES_PER_ELEMENT;\r\n            case AccessorComponentType.UNSIGNED_SHORT:\r\n                return componentSize * Uint16Array.BYTES_PER_ELEMENT;\r\n            case AccessorComponentType.UNSIGNED_INT:\r\n                return componentSize * Uint32Array.BYTES_PER_ELEMENT;\r\n            case AccessorComponentType.FLOAT:\r\n                return componentSize * Float32Array.BYTES_PER_ELEMENT;\r\n            default:\r\n                throw new Error(`Invalid component type ${componentType}`);\r\n        }\r\n    }\r\n}\r\n","import { Entity } from \"../../ec/entity\";\r\nimport { Mat4 } from \"../../mathD/mat4\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\nimport { Quat } from \"../../mathD/quat\";\r\nimport { ParseCameraNode } from \"./parseCameraNode\";\r\nimport { Transform } from \"../../ec/components/transform\";\r\nimport { ParseMeshNode } from \"./parseMeshNode\";\r\nimport { IgltfJson } from \"./loadglTF\";\r\nimport { Mesh } from \"../../ec/components/mesh\";\r\n\r\nexport class ParseNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<Transform> {\r\n        let node = gltf.nodes[index];\r\n\r\n        let name = node.name || \"node\" + index;\r\n        let trans = new Entity(name).transform;\r\n\r\n        if (node.matrix) {\r\n            trans.localMatrix = Mat4.fromArray(node.matrix);\r\n        }\r\n        if (node.translation) {\r\n            Vec3.copy(node.translation, trans.localPosition);\r\n            trans.markDirty();\r\n        }\r\n        if (node.rotation) {\r\n            Quat.copy(node.rotation, trans.localRotation);\r\n            trans.markDirty();\r\n        }\r\n        if (node.scale) {\r\n            Vec3.copy(node.scale, trans.localScale);\r\n            trans.markDirty();\r\n        }\r\n\r\n        if (node.camera != null) {\r\n            let cam = ParseCameraNode.parse(node.camera, gltf);\r\n            trans.entity.addComp(cam);\r\n        }\r\n\r\n        let allTask: Promise<void>[] = [];\r\n        if (node.mesh != null) {\r\n            let task = ParseMeshNode.parse(node.mesh, gltf).then(primitives => {\r\n                for (let item of primitives) {\r\n                    let entity = new Entity(\"subPrimitive\", [\"Mesh\"]);\r\n                    let mesh = entity.getCompByName(\"Mesh\") as Mesh;\r\n                    mesh.geometry = item.geometry;\r\n                    mesh.material = item.material;\r\n\r\n                    trans.addChild(entity.transform);\r\n                }\r\n            });\r\n            allTask.push(task);\r\n        }\r\n\r\n        if (node.children) {\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                let nodeindex = node.children[i];\r\n                let childTask = this.parse(nodeindex, gltf).then(child => {\r\n                    trans.addChild(child);\r\n                });\r\n                allTask.push(childTask);\r\n            }\r\n        }\r\n        return Promise.all(allTask).then(() => {\r\n            return trans;\r\n        });\r\n\r\n        // if (node.skin != null && node.mesh != null) {\r\n        //     let nodemeshdata: PrimitiveNode[] = bundle.meshNodeCache[node.mesh];\r\n        //     let skindata = bundle.skinNodeCache[node.skin];\r\n\r\n        //     for (let key in nodemeshdata) {\r\n        //         let data = nodemeshdata[key];\r\n        //         //-----------------------------\r\n        //         let obj = new GameObject();\r\n        //         trans.addChild(obj.transform);\r\n        //         let meshr = obj.addComponent<SkinMeshRender>(\"SkinMeshRender\");\r\n        //         // let mat=assetMgr.load(\"resource/mat/diff.mat.json\") as Material;\r\n        //         // meshr.material=mat;\r\n        //         meshr.mesh = data.mesh;\r\n        //         meshr.material = data.mat;\r\n\r\n        //         // meshr.joints=skindata.joints;\r\n        //         for (let i = 0; i < skindata.jointIndexs.length; i++) {\r\n        //             let trans = bundle.nodeDic[skindata.jointIndexs[i]];\r\n        //             if (trans == null) {\r\n        //                 console.error(\"解析gltf 异常！\");\r\n        //             }\r\n        //             meshr.joints.push(trans);\r\n        //         }\r\n\r\n        //         meshr.bindPoses = skindata.inverseBindMat;\r\n        //         meshr.bindPlayer = bundle.bundleAnimator;\r\n        //     }\r\n        // } else\r\n    }\r\n}\r\n","import { IgltfJson } from \"./loadglTF\";\r\nimport { ParseNode } from \"./parseNode\";\r\nimport { Transform } from \"../../ec/components/transform\";\r\n\r\nexport class ParseSceneNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<Transform[]> {\r\n        let node = gltf.scenes[index];\r\n        let rootNodes = node.nodes.map(item => {\r\n            return ParseNode.parse(item, gltf);\r\n        });\r\n        return Promise.all(rootNodes);\r\n    }\r\n}\r\n","import { IassetLoader, Iasset, IassetLoadInfo } from \"../type\";\r\nimport { getFileName, getAssetFlode } from \"../base/helper\";\r\nimport { GltfAsset } from \"../assets/gltfAsset\";\r\nimport { loadText, loadJson, loadArrayBuffer } from \"../../io/loadtool\";\r\nimport { BinReader } from \"../../io/stream\";\r\nimport { Igltf, Iproperty } from \"./gltfJsonStruct\";\r\nimport { Material } from \"../assets/material\";\r\nimport { Texture } from \"../assets/texture\";\r\nimport { Geometry } from \"../assets/geometry\";\r\nimport { ParseSceneNode } from \"./parseSceneNode\";\r\nimport { LoadEnum } from \"../base/loadEnum\";\r\n\r\nexport interface IglTFExtension {\r\n    load(extensionNode: any, loader: LoadGlTF): Promise<any>;\r\n}\r\n\r\nexport interface IgltfPrimitive {\r\n    geometry: Geometry;\r\n    material: Material;\r\n}\r\n\r\nexport interface IgltfBufferview {\r\n    viewBuffer?: Uint8Array;\r\n    glBuffer?: WebGLBuffer;\r\n    byteStride: number;\r\n}\r\nexport class GltfNodeCache {\r\n    meshNodeCache: { [index: number]: Promise<IgltfPrimitive[]> } = {};\r\n    bufferviewNodeCache: { [index: number]: Promise<IgltfBufferview> } = {};\r\n    bufferNodeCache: { [index: number]: Promise<ArrayBuffer> } = {};\r\n    materialNodeCache: { [index: number]: Promise<Material> } = {};\r\n    textrueNodeCache: { [index: number]: Promise<Texture> } = {};\r\n    // beContainAnimation: boolean = false;\r\n    // skinNodeCache: { [index: number]: SkinNode } = {};\r\n    // animationNodeCache: { [index: number]: AnimationClip } = {};\r\n}\r\n\r\nexport interface IgltfJson extends Igltf {\r\n    rootURL: string;\r\n    cache: GltfNodeCache;\r\n}\r\nexport class LoadGlTF implements IassetLoader {\r\n    onProgress: (progress: number) => void;\r\n    onFinish: (asset: Iasset, state: IassetLoadInfo) => void;\r\n    load(\r\n        url: string,\r\n        onFinish: (asset: Iasset, state: IassetLoadInfo) => void,\r\n        onProgress: (progress: number) => void,\r\n    ): Iasset {\r\n        let name = getFileName(url);\r\n        let asset = new GltfAsset({ name: name, URL: url });\r\n\r\n        this.onProgress = onProgress;\r\n        this.onFinish = onFinish;\r\n        this.loadAsync(url)\r\n            .then(gltfJson => {\r\n                let scene = gltfJson.scene ? gltfJson.scene : 0;\r\n                ParseSceneNode.parse(scene, gltfJson).then(trans => {\r\n                    asset.roots = trans;\r\n\r\n                    if (this.onFinish) {\r\n                        this.onFinish(asset, { loadState: LoadEnum.Success, url: url });\r\n                    }\r\n                });\r\n            })\r\n            .catch(error => {\r\n                let errorMsg = \"ERROR: Load GLTFAsset Error!\\n Info: LOAD URL: \" + url + \"  LOAD MSG:\" + error.message;\r\n                console.error(errorMsg);\r\n            });\r\n        return asset;\r\n    }\r\n    //------------------extensions\r\n    static ExtensionDic: { [type: string]: IglTFExtension } = {};\r\n    static regExtension(type: string, extension: IglTFExtension) {\r\n        this.ExtensionDic[type] = extension;\r\n    }\r\n\r\n    getExtensionData(node: Iproperty, extendname: string): Promise<any> {\r\n        if (node.extensions == null) return null;\r\n        let extension = LoadGlTF.ExtensionDic[extendname];\r\n        if (extension == null) return null;\r\n        let info = node.extensions[extendname];\r\n        if (info == null) return null;\r\n        return extension.load(info, this);\r\n    }\r\n\r\n    //------------------------------------load bundle asset\r\n    private loadAsync(url: string): Promise<IgltfJson> {\r\n        if (url.endsWith(\".gltf\")) {\r\n            return loadJson(url).then(json => {\r\n                let gltfJson = json as any;\r\n                gltfJson.cache = new GltfNodeCache();\r\n                gltfJson.rootURL = getAssetFlode(url);\r\n                return gltfJson;\r\n            });\r\n        } else {\r\n            return this.loadglTFBin(url).then((value: { json: any; chunkbin: Uint8Array[] }) => {\r\n                let gltfJson = value.json as IgltfJson;\r\n                gltfJson.cache = new GltfNodeCache();\r\n                gltfJson.rootURL = getAssetFlode(url);\r\n\r\n                for (let i = 0; i < value.chunkbin.length; i++) {\r\n                    gltfJson.cache.bufferNodeCache[i] = Promise.resolve(value.chunkbin[i].buffer);\r\n                }\r\n                return gltfJson;\r\n            });\r\n        }\r\n    }\r\n    private async loadglTFBin(url: string): Promise<{ json: JSON; chunkbin: Uint8Array[] }> {\r\n        return loadArrayBuffer(url).then(bin => {\r\n            const Binary = {\r\n                Magic: 0x46546c67,\r\n            };\r\n            let breader = new BinReader(bin);\r\n            let magic = breader.readUint32();\r\n            if (magic !== Binary.Magic) {\r\n                throw new Error(\"Unexpected magic: \" + magic);\r\n            }\r\n            let version = breader.readUint32();\r\n            if (version != 2) {\r\n                throw new Error(\"Unsupported version:\" + version);\r\n            }\r\n            let length = breader.readUint32();\r\n            if (length !== breader.getLength()) {\r\n                throw new Error(\r\n                    \"Length in header does not match actual data length: \" + length + \" != \" + breader.getLength(),\r\n                );\r\n            }\r\n\r\n            let ChunkFormat = {\r\n                JSON: 0x4e4f534a,\r\n                BIN: 0x004e4942,\r\n            };\r\n            // JSON chunk\r\n            let chunkLength = breader.readUint32();\r\n            let chunkFormat = breader.readUint32();\r\n            if (chunkFormat !== ChunkFormat.JSON) {\r\n                throw new Error(\"First chunk format is not JSON\");\r\n            }\r\n            let _json = JSON.parse(breader.readUint8ArrToString(chunkLength));\r\n            let _chunkbin: Uint8Array[] = [];\r\n            while (breader.canread() > 0) {\r\n                const chunkLength = breader.readUint32();\r\n                const chunkFormat = breader.readUint32();\r\n                switch (chunkFormat) {\r\n                    case ChunkFormat.JSON:\r\n                        throw new Error(\"Unexpected JSON chunk\");\r\n                    case ChunkFormat.BIN:\r\n                        _chunkbin.push(breader.readUint8Array(chunkLength));\r\n                        break;\r\n                    default:\r\n                        // ignore unrecognized chunkFormat\r\n                        breader.skipBytes(chunkLength);\r\n                        break;\r\n                }\r\n            }\r\n            return { json: _json, chunkbin: _chunkbin };\r\n        });\r\n    }\r\n}\r\n"],"names":["GlConstants","lerp"],"mappings":"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G,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YAEpD,OAAO,GAAG,CAAC;SACd;;;;;;;;QASM,OAAO,OAAO,CAAC,CAAO,EAAE,GAAS;YACpC,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAEhB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACxG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3G,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,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,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEpD,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,E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"}