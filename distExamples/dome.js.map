{"version":3,"file":"dome.js","sources":["../src/core/Event.ts","../src/core/Screen.ts","../src/core/EventCompositedHandler.ts","../src/mathD/common.ts","../src/mathD/vec2.ts","../src/input/Mouse.ts","../src/input/keyboard.ts","../src/input/Input.ts","../src/core/DebuffAction.ts","../src/core/Timer.ts","../src/mathD/rect.ts","../src/mathD/color.ts","../src/mathD/mat4.ts","../src/mathD/vec3.ts","../src/scene/Plane.ts","../src/webgl/VertexAttEnum.ts","../src/scene/Bounds.ts","../src/scene/Frustum.ts","../src/core/Utils.ts","../src/core/UniqueObject.ts","../src/scene/Camera.ts","../src/core/Ecs.ts","../src/mathD/Mat3.ts","../src/mathD/quat.ts","../src/core/Transform.ts","../src/core/RefData.ts","../src/core/Entity.ts","../src/scene/Scene.ts","../src/webgl/GLconstant.ts","../src/webgl/DeviceCapability.ts","../src/webgl/UniformType.ts","../src/webgl/Buffer.ts","../src/webgl/DeviceLimit.ts","../src/webgl/GraphicsDevice.ts","../src/resources/Util.ts","../src/resources/resource.ts","../node_modules/tslib/tslib.es6.js","../src/io/loadtool.ts","../src/io/stream.ts","../src/resources/loader/glTF/GltfJsonStruct.ts","../src/resources/loader/glTF/ParseCameraNode.ts","../src/resources/loader/glTF/ParseBufferNode.ts","../src/resources/loader/glTF/ParseBufferViewNode.ts","../src/webgl/PixelDatatype.ts","../src/webgl/PixelFormatEnum.ts","../src/webgl/TextureFilterEnum.ts","../src/webgl/TextureWrapEnum.ts","../src/webgl/Texture.ts","../src/scene/asset/Asset.ts","../src/scene/asset/texture/TextureAsset.ts","../src/scene/asset/texture/Texture2d.ts","../src/resources/loader/glTF/ParseTextureNode.ts","../src/webgl/ShaderProgam.ts","../src/scene/AutoUniform.ts","../src/scene/asset/material/ShaderInstance.ts","../src/scene/asset/material/ShaderBucket.ts","../src/scene/asset/material/Shader.ts","../src/scene/RenderLayer.ts","../src/scene/RenderState.ts","../src/scene/AssetReference.ts","../src/scene/asset/material/Material.ts","../src/shaders/Unlit.vert.glsl","../src/resources/defAssets/DefaultShader.ts","../src/scene/asset/texture/MemoryTexture.ts","../src/resources/defAssets/DefaultTexture.ts","../src/resources/defAssets/DefaultMaterial.ts","../src/resources/loader/glTF/ParseMaterialNode.ts","../src/core/TypedArray.ts","../src/webgl/IndexBuffer.ts","../src/webgl/VertexBuffer.ts","../src/resources/loader/glTF/ParseAccessorNode.ts","../src/webgl/ComponentDatatypeEnum.ts","../src/webgl/VertexAttribute.ts","../src/webgl/PrimitiveTypeEnum.ts","../src/webgl/VertextArray.ts","../src/scene/asset/geometry/BaseGeometry.ts","../src/scene/asset/geometry/StaticMesh.ts","../src/resources/loader/glTF/ParseMeshNode.ts","../src/scene/asset/Skin.ts","../src/resources/loader/glTF/util.ts","../src/resources/loader/glTF/ParseSkinNode.ts","../src/resources/loader/glTF/ParseNode.ts","../src/resources/loader/glTF/ParseSceneNode.ts","../src/scene/asset/Prefab.ts","../src/scene/asset/AnimationClip.ts","../src/resources/loader/glTF/ParseAnimationNode.ts","../src/resources/loader/LoadglTF.ts","../src/scene/AssetReferenceArray.ts","../src/scene/primitive/SkinInstance.ts","../src/components/ModelComponent.ts","../src/components/BassCompSystem.ts","../src/components/ModelSystem.ts","../src/scene/UniformState.ts","../src/scene/render/SortTypeEnum.ts","../src/scene/LayerCollection.ts","../src/scene/LayerComposition.ts","../src/scene/render/ForwardRender.ts","../src/scene/primitive/ClipInstance.ts","../src/components/Animation.ts","../src/components/AnimationSystem.ts","../src/toygl.ts","../examples/loadGltf.ts","../examples/main.ts"],"sourcesContent":["export class EventHandler<T>\r\n{\r\n    private listener: ((event: T) => void)[] = [];\r\n    addEventListener(func: (event: T) => void)\r\n    {\r\n        this.listener.push(func);\r\n    }\r\n    removeEventListener(func: (event: T) => void)\r\n    {\r\n        let index = this.listener.indexOf(func);\r\n        if (index >= 0)\r\n        {\r\n            this.listener.splice(index);\r\n        }\r\n    }\r\n    removeAll() { this.listener = []; }\r\n    raiseEvent(event: T)\r\n    {\r\n        this.listener.forEach(fuc =>\r\n        {\r\n            fuc(event);\r\n        });\r\n    }\r\n    destroy()\r\n    {\r\n        this.listener = undefined;\r\n    }\r\n}\r\n","import { EventHandler } from \"./Event\";\r\n\r\n/**\r\n *\r\n * (0,0)-----|\r\n * |         |\r\n * |         |\r\n * |------(w,h)\r\n *\r\n */\r\nexport class Screen\r\n{\r\n    /**\r\n     * 屏幕(canvas)高度\r\n     */\r\n    get width()\r\n    {\r\n        return this.canvas.width;\r\n    }\r\n    /**\r\n     * 屏幕(canvas)宽度\r\n     */\r\n    get height()\r\n    {\r\n        return this.canvas.height;\r\n    }\r\n\r\n    /**\r\n     * width/height\r\n     */\r\n    get aspect()\r\n    {\r\n        return this.width / this.height;\r\n    }\r\n\r\n    private canvas: HTMLCanvasElement;\r\n    constructor(canvas: HTMLCanvasElement)\r\n    {\r\n        this.canvas = canvas;\r\n        canvas.onresize = () => { console.warn(\"canvas resize!\"); };\r\n        this.onresize.raiseEvent();\r\n    }\r\n    onresize = new EventHandler<void>();\r\n}\r\n","export class EventCompositedHandler {\r\n    private _listener: { [event: string]: Function[] } = {};\r\n    on(type: string | string[], callback: Function) {\r\n        if (type instanceof Array) type = type.join();\r\n        if (this._listener[type] == null) this._listener[type] = [];\r\n        this._listener[type].push(callback);\r\n    }\r\n    fire(type: string | string[], params: any) {\r\n        if (type instanceof Array) type = type.join();\r\n        this._listener[type]?.forEach(func => func(params));\r\n    }\r\n\r\n    off(type: string | string[], callback: Function) {\r\n        if (type instanceof Array) type = type.join();\r\n        if (this._listener[type]) {\r\n            let index = this._listener[type].indexOf(callback);\r\n            if (index >= 0) {\r\n                this._listener[type].splice(index, 1)\r\n            }\r\n        }\r\n    }\r\n}","import { Vec4 } from \"./vec4\";\r\nexport const EPSILON = 0.000001;\r\n\r\nexport function clamp(v: number, min: number = 0, max: number = 1): number {\r\n    if (v <= min) return min;\r\n    else if (v >= max) return max;\r\n    else return v;\r\n}\r\n\r\nexport function bePowerOf2(value: number) {\r\n    return (value & (value - 1)) == 0;\r\n}\r\n\r\nexport function lerp(from: number, to: number, lerp: number): number {\r\n    return (to - from) * lerp + from;\r\n}\r\n\r\nexport function random(min: number = 0, max: number = 1) {\r\n    let bund = max - min;\r\n    return min + bund * Math.random();\r\n}\r\n\r\nexport function numberEqual(a: number, b: number): boolean {\r\n    return a == b;\r\n}\r\nexport function arrayEqual(a: number[] | Float32Array, b: number[] | Float32Array) {\r\n    for (let i = 0; i < a.length; i++) {\r\n        if (a[i] != b[i]) {\r\n            return false;\r\n        }\r\n    }\r\n    return true;\r\n}\r\n//row：图片行数//column:图片列数//index：第几张图片（index从0开始计数）\r\nexport function spriteAnimation(row: number, column: number, index: number, out: Vec4) {\r\n    var width = 1.0 / column;\r\n    var height = 1.0 / row;\r\n    var offsetx = width * (index % column);\r\n    var offsety = height * row - height * (Math.floor(index / column) + 1);\r\n\r\n    out.x = width;\r\n    out.y = height;\r\n    out.z = offsetx;\r\n    out.w = offsety;\r\n    // var uvOffset=new gd3d.math.vector4(width,height,offsetx,offsety);\r\n    // return  uvOffset;\r\n}\r\n\r\nexport function numberLerp(fromV: number, toV: number, v: number) {\r\n    return fromV * (1 - v) + toV * v;\r\n}\r\n\r\n// export function disposeAllRecyle() {\r\n//     color.disposeRecycledItems();\r\n//     mat2d.disposeRecycledItems();\r\n//     mat3.disposeRecycledItems();\r\n//     mat4.disposeRecycledItems();\r\n//     quat.disposeRecycledItems();\r\n//     vec2.disposeRecycledItems();\r\n//     vec3.disposeRecycledItems();\r\n//     vec4.disposeRecycledItems();\r\n// }\r\n\r\n\r\n/**\r\n * Find the next highest power of two.\r\n * @param x Number to start search from.\r\n * @return Next highest power of two.\r\n */\r\nexport function CeilingPOT(x: number): number {\r\n    x--;\r\n    x |= x >> 1;\r\n    x |= x >> 2;\r\n    x |= x >> 4;\r\n    x |= x >> 8;\r\n    x |= x >> 16;\r\n    x++;\r\n    return x;\r\n}\r\n\r\nexport function ceilPowerOfTwo(value: number) {\r\n    return Math.pow(2, Math.ceil(Math.log(value) / Math.LN2));\r\n}\r\n\r\n/**\r\n * Find the next lowest power of two.\r\n * @param x Number to start search from.\r\n * @return Next lowest power of two.\r\n */\r\nexport function FloorPOT(x: number): number {\r\n    x = x | (x >> 1);\r\n    x = x | (x >> 2);\r\n    x = x | (x >> 4);\r\n    x = x | (x >> 8);\r\n    x = x | (x >> 16);\r\n    return x - (x >> 1);\r\n}\r\n\r\n/**\r\n * Find the nearest power of two.\r\n * @param x Number to start search from.\r\n * @return Next nearest power of two.\r\n */\r\nexport function NearestPOT(x: number): number {\r\n    var c = CeilingPOT(x);\r\n    var f = FloorPOT(x);\r\n    return c - x > x - f ? f : c;\r\n}\r\n\r\nexport function isPowerOf2(value: number) {\r\n    return (value & (value - 1)) === 0;\r\n}\r\n\r\nexport function canGenerateMipmap(width: number, height: number, webGLVersion: number) {\r\n    if (webGLVersion != 2) {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function canWrapReapeat(width: number, height: number, webGLVersion: number) {\r\n    if (webGLVersion != 2) {\r\n        return isPowerOf2(width) && isPowerOf2(height);\r\n    }\r\n    return true;\r\n}\r\n\r\nexport function filterFallback(gl: WebGLRenderingContext, filter: number): number {\r\n    if (filter === gl.NEAREST || filter === gl.NEAREST_MIPMAP_LINEAR || filter === gl.NEAREST_MIPMAP_NEAREST) {\r\n        return gl.NEAREST;\r\n    }\r\n    return gl.LINEAR;\r\n}\r\n\r\n","import { Vec3 } from \"./vec3\";\r\nimport { Mat2d } from \"./mat2d\";\r\nimport { Mat4 } from \"./mat4\";\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Vec2 extends Float32Array {\r\n    get x() {\r\n        return this[0];\r\n    }\r\n    set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    private static Recycle: Vec2[] = [];\r\n    public static create(x: number = 0, y: number = 0) {\r\n        if (Vec2.Recycle && Vec2.Recycle.length > 0) {\r\n            let item = Vec2.Recycle.pop() as Vec2;\r\n            item[0] = x;\r\n            item[1] = y;\r\n            return item;\r\n        } else {\r\n            let item = new Vec2(x, y);\r\n            // item[0]=x;\r\n            // item[1]=y;\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Vec2): Vec2 {\r\n        if (Vec2.Recycle.length > 0) {\r\n            let item = Vec2.Recycle.pop() as Vec2;\r\n            Vec2.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Vec2(from[0], from[1]);\r\n            // item[0]=from[0];\r\n            // item[1]=from[1];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Vec2) {\r\n        Vec2.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Vec2.Recycle.length = 0;\r\n    }\r\n    constructor(x: number = 0, y: number = 0) {\r\n        super(2);\r\n        this[0] = x;\r\n        this[1] = y;\r\n    }\r\n    /**\r\n     * Copy the values from one vec2 to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(a: Vec2 | number[], out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static add(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts vector b from vector a\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static subtract(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    //public static mul(a: vec2, b: vec2,out: Vec2 = Vec2.create()): vec2 { return; }\r\n\r\n    /**\r\n     * Divides two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static divide(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Divides two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    //public static div(a: vec2, b: vec2,out: Vec2 = Vec2.create()): vec2 { return; }\r\n\r\n    /**\r\n     * Math.ceil the components of a vec2\r\n     *\r\n     * @param {Vec2} out the receiving vector\r\n     * @param {Vec2} a vector to ceil\r\n     * @returns {Vec2} out\r\n     */\r\n    public static ceil(a: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = Math.ceil(a[0]);\r\n        out[1] = Math.ceil(a[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.floor the components of a vec2\r\n     *\r\n     * @param {Vec2} out the receiving vector\r\n     * @param {Vec2} a vector to floor\r\n     * @returns {Vec2} out\r\n     */\r\n    public static floor(a: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = Math.floor(a[0]);\r\n        out[1] = Math.floor(a[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum of two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static min(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum of two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static max(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.round the components of a vec2\r\n     *\r\n     * @param {Vec2} out the receiving vector\r\n     * @param {Vec2} a vector to round\r\n     * @returns {Vec2} out\r\n     */\r\n    public static round(a: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = Math.round(a[0]);\r\n        out[1] = Math.round(a[1]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a vec2 by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     */\r\n    public static scale(a: Vec2, b: number, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        return out;\r\n    }\r\n\r\n    public static scaleByVec2(a: Vec2, b: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        return out;\r\n    }\r\n    /**\r\n     * Adds two vec2's after scaling the second operand by a scalar value\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param scale the amount to scale b by before adding\r\n     * @returns out\r\n     */\r\n    public static scaleAndAdd(a: Vec2, b: Vec2, scale: number, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    public static distance(a: Vec2, b: Vec2): number {\r\n        let x = b[0] - a[0],\r\n            y = b[1] - a[1];\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    //public static dist(a: vec2, b: vec2): number { return; }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    public static squaredDistance(a: Vec2, b: Vec2): number {\r\n        let x = b[0] - a[0],\r\n            y = b[1] - a[1];\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    //public static sqrDist(a: vec2, b: vec2): number { return; }\r\n\r\n    /**\r\n     * Calculates the length of a vec2\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    public static length_(a: Vec2): number {\r\n        let x = a[0],\r\n            y = a[1];\r\n        return Math.sqrt(x * x + y * y);\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a vec2\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    //public static len(a: vec2): number { return; }\r\n\r\n    /**\r\n     * Calculates the squared length of a vec2\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    public static squaredLength(a: Vec2): number {\r\n        let x = a[0],\r\n            y = a[1];\r\n        return x * x + y * y;\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared length of a vec2\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    //public static sqrLen(a: vec2): number { return; }\r\n\r\n    /**\r\n     * Negates the components of a vec2\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to negate\r\n     * @returns out\r\n     */\r\n    public static negate(a: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of the components of a vec2\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to invert\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        out[0] = 1.0 / a[0];\r\n        out[1] = 1.0 / a[1];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Normalize a vec2\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to normalize\r\n     * @returns out\r\n     */\r\n    public static normalize(a: Vec2, out: Vec2 = Vec2.create()): Vec2 {\r\n        let x = a[0],\r\n            y = a[1];\r\n        let len = x * x + y * y;\r\n        if (len > 0) {\r\n            //TODO: evaluate use of glm_invsqrt here?\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = a[0] * len;\r\n            out[1] = a[1] * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two vec2's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     */\r\n    public static dot(a: Vec2, b: Vec2): number {\r\n        return a[0] * b[0] + a[1] * b[1];\r\n    }\r\n\r\n    /**\r\n     * Computes the cross product of two vec2's\r\n     * Note that the cross product must by definition produce a 3D vector\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static cross(a: Vec2, b: Vec2, out: Vec3): Vec2 {\r\n        let z = a[0] * b[1] - a[1] * b[0];\r\n        out[0] = out[1] = 0;\r\n        out[2] = z;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two vec2's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param from the first operand\r\n     * @param to the second operand\r\n     * @param lerp interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static lerp(from: Vec2, to: Vec2, lerp: number, out: Vec2 = Vec2.create()): Vec2 {\r\n        let ax = from[0],\r\n            ay = from[1];\r\n        out[0] = ax + lerp * (to[0] - ax);\r\n        out[1] = ay + lerp * (to[1] - ay);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a random vector with the given scale\r\n     *\r\n     * @param out the receiving vector\r\n     * @param scale Length of the resulting vector. If ommitted, a unit vector will be returned\r\n     * @returns out\r\n     */\r\n    public static random(scale: number = 1, out: Vec2 = Vec2.create()): Vec2 {\r\n        scale = scale || 1.0;\r\n        let r = Math.random() * 2.0 * Math.PI;\r\n        out[0] = Math.cos(r) * scale;\r\n        out[1] = Math.sin(r) * scale;\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Transforms the vec2 with a mat2\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat2(out: Vec2 = Vec2.create(), a: vec2, m: mat2): vec2 {\r\n    //     let x = a[0],\r\n    //     y = a[1];\r\n    //     out[0] = m[0] * x + m[2] * y;\r\n    //     out[1] = m[1] * x + m[3] * y;\r\n    //     return out;\r\n    // }\r\n\r\n    /**\r\n     * Transforms the vec2 with a Mat2d\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    public static transformMat2d(a: Vec2, m: Mat2d, out: Vec2 = Vec2.create()): Vec2 {\r\n        let x = a[0],\r\n            y = a[1];\r\n        out[0] = m[0] * x + m[2] * y + m[4];\r\n        out[1] = m[1] * x + m[3] * y + m[5];\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Transforms the vec2 with a mat3\r\n    //  * 3rd vector component is implicitly '1'\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat3(out: Vec2 = Vec2.create(), a: vec2, m: mat3): vec2 {\r\n    //     let x = a[0],\r\n    //     y = a[1];\r\n    //     out[0] = m[0] * x + m[3] * y + m[6];\r\n    //     out[1] = m[1] * x + m[4] * y + m[7];\r\n    //     return out;\r\n    // }\r\n\r\n    /**\r\n     * Transforms the vec2 with a Mat4\r\n     * 3rd vector component is implicitly '0'\r\n     * 4th vector component is implicitly '1'\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    public static transformMat4(a: Vec2, m: Mat4, out: Vec2 = Vec2.create()): Vec2 {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        out[0] = m[0] * x + m[4] * y + m[12];\r\n        out[1] = m[1] * x + m[5] * y + m[13];\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec2s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec2s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @param arg additional argument to pass to fn\r\n    //  * @returns a\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //     fn: (a: vec2, b: vec2, arg: any) => void, arg: any): Float32Array { return; }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec2s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec2. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec2s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @returns a\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //     fn: (a: vec2, b: vec2) => void): Float32Array {\r\n    // }\r\n\r\n    /**\r\n     * Returns a string representation of a vector\r\n     *\r\n     * @param a vector to represent as a string\r\n     * @returns string representation of the vector\r\n     */\r\n    public static str(a: Vec2): string {\r\n        return \"vec2(\" + a[0] + \", \" + a[1] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors exactly have the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Vec2} a The first vector.\r\n     * @param {Vec2} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Vec2, b: Vec2): boolean {\r\n        return a[0] === b[0] && a[1] === b[1];\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     *\r\n     * @param {Vec2} a The first vector.\r\n     * @param {Vec2} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Vec2, b: Vec2): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1];\r\n        let b0 = b[0],\r\n            b1 = b[1];\r\n        return Math.abs(a0 - b0) <= EPSILON && Math.abs(a1 - b1) <= EPSILON;\r\n    }\r\n}\r\n","import { EventCompositedHandler } from \"../core/EventCompositedHandler\";\r\nimport { Vec2 } from \"../mathD/vec2\";\r\n\r\nexport enum MouseKeyEnum {\r\n    Left = \"MouseLeft\",\r\n    Middle = \"MouseMiddle\",\r\n    Right = \"MouseRight\", //\r\n    None = \"MouseNone\",\r\n}\r\nexport enum MouseEventEnum {\r\n    Up = \"mouseUp\",\r\n    Down = \"mouseDown\",\r\n    Move = \"mouseMove\",\r\n    Rotate = \"mouseRotate\",\r\n}\r\n\r\nexport class ClickEvent {\r\n    /**\r\n     * 屏幕坐标 posx\r\n     */\r\n    pointx: number;\r\n    /**\r\n     * 屏幕坐标 posy\r\n     */\r\n    pointy: number;\r\n    /**\r\n     * 滚轮\r\n     */\r\n    rotateDelta?: number;\r\n\r\n    movementX: number;\r\n    movementY: number;\r\n}\r\n\r\n\r\nnamespace Private {\r\n    export const keyDic: { [key: number]: MouseKeyEnum } = {\r\n        0: MouseKeyEnum.Left,\r\n        1: MouseKeyEnum.Middle,\r\n        2: MouseKeyEnum.Right\r\n    };\r\n}\r\n\r\nexport class Mouse extends EventCompositedHandler {\r\n    private _position: Vec2 = Vec2.create();\r\n    get position() { return this._position };\r\n    constructor(canvas: HTMLCanvasElement) {\r\n        super();\r\n        /**\r\n         * 屏蔽网页原生鼠标事件\r\n         */\r\n        document.oncontextmenu = e => {\r\n            return false;\r\n        };\r\n\r\n        canvas.addEventListener(\"mousedown\", (ev: MouseEvent) => {\r\n            let key = ev.button;\r\n            let keyEnum = Private.keyDic[key];\r\n\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.fire(MouseEventEnum.Down, event);\r\n            this.fire([keyEnum, MouseEventEnum.Down], event);\r\n        });\r\n\r\n        canvas.addEventListener(\"mouseup\", (ev: MouseEvent) => {\r\n            let key = ev.button;\r\n            let keyEnum = Private.keyDic[key];\r\n\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.fire(MouseEventEnum.Up, event);\r\n            this.fire([keyEnum, MouseEventEnum.Down], event);\r\n        });\r\n\r\n        canvas.addEventListener(\"mousemove\", (ev: MouseEvent) => {\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.fire(MouseEventEnum.Move, event);\r\n        });\r\n\r\n        canvas.addEventListener(\"mousewheel\", (ev: any) => {\r\n            let event = this.getClickEventByMouseEvent(ev);\r\n            this.fire(MouseEventEnum.Rotate, event);\r\n        });\r\n    }\r\n\r\n    private getClickEventByMouseEvent(ev: any): ClickEvent {\r\n        let event = new ClickEvent();\r\n        event.pointx = ev.offsetX; //鼠标指针相对于目标节点内边位置的X坐标\r\n        event.pointy = ev.offsetY; //鼠标指针相对于目标节点内边位置的Y坐标\r\n\r\n        this._position.x = ev.offsetX;\r\n        this._position.y = ev.offsetY;\r\n\r\n        event.movementX = ev.movementX;\r\n        event.movementY = ev.movementY;\r\n\r\n        event.rotateDelta = ev.detail | ev.wheelDelta;\r\n        return event;\r\n    }\r\n}\r\n","import { EventCompositedHandler } from \"../core/EventCompositedHandler\";\r\n\r\nexport enum KeyCodeEnum {\r\n    A = \"A\",\r\n    B = \"B\",\r\n    C = \"C\",\r\n    D = \"D\",\r\n    E = \"E\",\r\n    F = \"F\",\r\n    G = \"G\",\r\n    H = \"H\",\r\n    I = \"I\",\r\n    J = \"J\",\r\n    K = \"K\",\r\n    L = \"L\",\r\n    M = \"M\",\r\n    N = \"N\",\r\n    O = \"O\",\r\n    P = \"P\",\r\n    Q = \"Q\",\r\n    R = \"R\",\r\n    S = \"S\",\r\n    T = \"T\",\r\n    U = \"U\",\r\n    V = \"V\",\r\n    W = \"W\",\r\n    X = \"X\",\r\n    Y = \"Y\",\r\n    Z = \"Z\",\r\n    SPACE = \" \",\r\n    ESC = \"ESC\",\r\n}\r\nexport enum KeyCodeEventEnum {\r\n    Up = \"KeyUp\",\r\n    Down = \"KeyDown\",\r\n}\r\n\r\nexport class Keyboard extends EventCompositedHandler {\r\n    constructor() {\r\n        super();\r\n        document.onkeydown = (ev: KeyboardEvent) => {\r\n            let keystr = ev.key.toUpperCase(); //safari浏览器不支持keypress事件中的key属性\r\n            this.fire(KeyCodeEventEnum.Down, ev);\r\n            this.fire([keystr, KeyCodeEventEnum.Down], ev);\r\n        };\r\n        document.onkeyup = (ev: KeyboardEvent) => {\r\n            let keystr = ev.key.toUpperCase(); //safari浏览器不支持keypress事件中的key属性\r\n            this.fire(KeyCodeEventEnum.Up, ev);\r\n            this.fire([keystr, KeyCodeEventEnum.Up], ev);\r\n        };\r\n    }\r\n}\r\n","import { Vec2 } from \"../mathD/vec2\";\r\nimport { Mouse, MouseKeyEnum, MouseEventEnum, ClickEvent } from \"./Mouse\";\r\nimport { Keyboard, KeyCodeEnum, KeyCodeEventEnum } from \"./keyboard\";\r\n\r\nexport class Input\r\n{\r\n    private _mouse: Mouse;\r\n    get mouse() { return this._mouse };\r\n\r\n    private _keyBoard: Keyboard;\r\n    get keyBoard() { return this._keyBoard }\r\n\r\n    get position() { return this._mouse.position }\r\n    constructor(canvas: HTMLCanvasElement)\r\n    {\r\n        this._mouse = new Mouse(canvas);\r\n        this._keyBoard = new Keyboard();\r\n    }\r\n}\r\n","\r\nexport interface IdebuffeAction\r\n{\r\n    excuteAction: (debuffAction: () => Function) => void;\r\n    dispose: Function;\r\n}\r\n/**\r\n * 执行需要进行清理的方法\r\n * @param action \r\n */\r\nexport function excuteDebuffAction(action: () => Function): IdebuffeAction\r\n{\r\n    let dispose = action();\r\n    return {\r\n        excuteAction: (debuffAction: () => Function) =>\r\n        {\r\n            if (dispose) dispose();\r\n            dispose = debuffAction();\r\n        },\r\n        dispose: () => { dispose(); dispose = undefined; }\r\n    };\r\n}\r\n\r\nexport class DebuffAction implements IdebuffeAction\r\n{\r\n    excuteAction = (debuffAction: () => Function) =>\r\n    {\r\n        if (this.dispose) this.dispose();\r\n        this.dispose = debuffAction();\r\n    };\r\n    dispose: Function;\r\n    static create(action?: () => Function)\r\n    {\r\n        let newAct = new DebuffAction();\r\n        if (action)\r\n        {\r\n            newAct.dispose = action();\r\n        }\r\n        return newAct\r\n    }\r\n}","import { excuteDebuffAction, IdebuffeAction } from \"./DebuffAction\";\r\nimport { EventHandler } from \"./Event\";\r\n\r\nexport class Timer implements Itimer\r\n{\r\n    private beActive: boolean = true;\r\n    active()\r\n    {\r\n        this.beActive = true;\r\n    }\r\n    disActive()\r\n    {\r\n        this.beActive = false;\r\n    }\r\n    constructor()\r\n    {\r\n        this.frameUpdate();\r\n    }\r\n    private _lastTime: number;\r\n    private _deltaTime: number;\r\n    get deltaTime()\r\n    {\r\n        return this._deltaTime;\r\n    }\r\n\r\n    timeScale: number = 1.0;\r\n    private intervalLoop: IdebuffeAction;\r\n    private update()\r\n    {\r\n        let now = Date.now();\r\n        this._deltaTime = this._lastTime ? (now - this._lastTime) * this.timeScale * 0.001 : 0;\r\n        this._lastTime = now;\r\n        if (this.beActive != null)\r\n        {\r\n            this._ontick.raiseEvent(this._deltaTime);\r\n        }\r\n    }\r\n\r\n    private _ontick = new EventHandler<number>();\r\n    get onTick() { return this._ontick }\r\n\r\n    FPS: number = 60;\r\n    private _lastFPS: number;\r\n    private frameUpdate()\r\n    {\r\n        this.update();\r\n        if (this.FPS == 60)\r\n        {\r\n            requestAnimationFrame(this.frameUpdate.bind(this));\r\n        } else if (this.FPS != this._lastFPS)\r\n        {\r\n            //----------帧率被修改\r\n            this.FPS = Math.min(this.FPS, 60);\r\n            this.FPS = Math.max(this.FPS, 0);\r\n            this._lastFPS = this.FPS;\r\n\r\n            if (this.intervalLoop) { this.intervalLoop.dispose() }\r\n            this.intervalLoop = excuteDebuffAction(() =>\r\n            {\r\n                let loop = setInterval(() =>\r\n                {\r\n                    this.frameUpdate();\r\n                }, 1000 / this.FPS);\r\n\r\n                return () => { clearInterval(loop) }\r\n            });\r\n        }\r\n    }\r\n}\r\n\r\nexport interface Itimer\r\n{\r\n    active(): void;\r\n    disActive(): void;\r\n    readonly onTick: EventHandler<number>;\r\n}\r\n","export class Rect extends Float32Array {\r\n    get x() {\r\n        return this[0];\r\n    }\r\n    set x(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y() {\r\n        return this[1];\r\n    }\r\n    set y(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z() {\r\n        return this[2];\r\n    }\r\n    set z(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    get width() {\r\n        return this[2] - this[0];\r\n    }\r\n\r\n    get height() {\r\n        return this[3] - this[1];\r\n    }\r\n    get w() {\r\n        return this[3];\r\n    }\r\n    set w(value: number) {\r\n        this[3] = value;\r\n    }\r\n\r\n    constructor(x: number = 0, y: number = 0, w: number = 0, h: number = 0) {\r\n        super(4);\r\n\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = w;\r\n        this[3] = h;\r\n    }\r\n\r\n    private static Recycle: Rect[] = [];\r\n    public static create(x: number = 0, y: number = 0, w: number = 0, h: number = 0): Rect {\r\n        if (Rect.Recycle && Rect.Recycle.length > 0) {\r\n            let item = Rect.Recycle.pop();\r\n            item[0] = x;\r\n            item[1] = y;\r\n            item[2] = w;\r\n            item[3] = h;\r\n            return item;\r\n        } else {\r\n            let item = new Rect(x, y, w, h);\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Rect): Rect {\r\n        if (Rect.Recycle.length > 0) {\r\n            let item = Rect.Recycle.pop();\r\n            Rect.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Rect(from[0], from[1], from[2], from[3]);\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Rect) {\r\n        Rect.Recycle.push(item);\r\n    }\r\n\r\n    public static disposeRecycledItems() {\r\n        Rect.Recycle.length = 0;\r\n    }\r\n\r\n    public static Identity: Rect = new Rect(0, 0, 1, 1);\r\n    public static copy(a: Rect, out: Rect): Rect {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    public static euqal(a: Rect, b: Rect): boolean {\r\n        if (a[0] != b[0]) return false;\r\n        if (a[1] != b[1]) return false;\r\n        if (a[2] != b[2]) return false;\r\n        if (a[3] != b[3]) return false;\r\n        return true;\r\n    }\r\n}\r\n\r\nexport function rectSetOne(out: Rect) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 1;\r\n    out[3] = 1;\r\n}\r\n\r\nexport function rectSetZero(out: Rect) {\r\n    out[0] = 0;\r\n    out[1] = 0;\r\n    out[2] = 0;\r\n    out[3] = 0;\r\n}\r\n\r\nexport function rectEqul(src1: Rect, src2: Rect): boolean {\r\n    return !(src1[0] != src2[0] || src1[1] != src2[1] || src1[2] != src2[2] || src1[3] != src2[3]);\r\n}\r\n\r\nexport function rectInner(x: number, y: number, src: Rect): boolean {\r\n    if (x < src[0] || x > src[0] + src[2] || y < src[1] || y > src[1] + src[3]) {\r\n        return false;\r\n    }\r\n    return true;\r\n}\r\n","import { clamp, EPSILON } from \"./common\";\r\n\r\nexport class Color extends Float32Array {\r\n    static readonly WHITE: Color = new Color(1, 1, 1, 1);\r\n\r\n    get r() {\r\n        return this[0];\r\n    }\r\n    set r(value: number) {\r\n        this[0] = value;\r\n    }\r\n\r\n    get g() {\r\n        return this[1];\r\n    }\r\n    set g(value: number) {\r\n        this[1] = value;\r\n    }\r\n\r\n    get b() {\r\n        return this[2];\r\n    }\r\n    set b(value: number) {\r\n        this[2] = value;\r\n    }\r\n\r\n    get a() {\r\n        return this[3];\r\n    }\r\n    set a(value: number) {\r\n        this[3] = value;\r\n    }\r\n    private static Recycle: Color[] = [];\r\n    public static create(r: number = 1, g: number = 1, b: number = 1, a: number = 1): Color {\r\n        if (Color.Recycle && Color.Recycle.length > 0) {\r\n            let item = Color.Recycle.pop() as Color;\r\n            item[0] = r;\r\n            item[1] = g;\r\n            item[2] = b;\r\n            item[3] = a;\r\n            return item;\r\n        } else {\r\n            let item = new Color(r, g, b, a);\r\n            return item;\r\n        }\r\n    }\r\n    public static random(): Color {\r\n        let item = new Color(Math.random() * 0.5 + 0.5, Math.random() * 0.5 + 0.5, Math.random() * 0.5 + 0.5, 1.0);\r\n        return item;\r\n    }\r\n    public static clone(from: Color): Color {\r\n        if (Color.Recycle.length > 0) {\r\n            let item = Color.Recycle.pop() as Color;\r\n            Color.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let item = new Color(from[0], from[1], from[2], from[3]);\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Color) {\r\n        Color.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Color.Recycle.length = 0;\r\n    }\r\n    constructor(r: number = 1, g: number, b: number = 1, a: number = 1) {\r\n        super(4);\r\n        this[0] = r;\r\n        this[1] = g;\r\n        this[2] = b;\r\n        this[3] = a;\r\n    }\r\n    static setWhite(out: Color): Color {\r\n        out[0] = 1;\r\n        out[1] = 1;\r\n        out[2] = 1;\r\n        out[3] = 1;\r\n        return out;\r\n    }\r\n    static setBlack(out: Color) {\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 1;\r\n    }\r\n    static setGray(out: Color) {\r\n        out[0] = 0.5;\r\n        out[1] = 0.5;\r\n        out[2] = 0.5;\r\n        out[3] = 1;\r\n    }\r\n\r\n    static multiply(srca: Color, srcb: Color, out: Color) {\r\n        out[0] = srca[0] * srcb[0];\r\n        out[1] = srca[1] * srcb[1];\r\n        out[2] = srca[2] * srcb[2];\r\n        out[3] = srca[3] * srcb[3];\r\n    }\r\n\r\n    static scaleToRef(src: Color, scale: number, out: Color) {\r\n        out[0] = src[0] * scale;\r\n        out[1] = src[1] * scale;\r\n        out[2] = src[2] * scale;\r\n        out[3] = src[3] * scale;\r\n    }\r\n\r\n    static lerp(srca: Color, srcb: Color, t: number, out: Color) {\r\n        t = clamp(t);\r\n        out[0] = t * (srcb[0] - srca[0]) + srca[0];\r\n        out[1] = t * (srcb[1] - srca[1]) + srca[1];\r\n        out[2] = t * (srcb[2] - srca[2]) + srca[2];\r\n        out[3] = t * (srcb[3] - srca[3]) + srca[3];\r\n    }\r\n    /**\r\n     * Copy the values from one color to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(a: Color, out: Color): Color {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same color.\r\n     *\r\n     * @param {vec4} a The first vector.\r\n     * @param {vec4} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Color, b: Color): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) &&\r\n            Math.abs(a1 - b1) <= EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) &&\r\n            Math.abs(a2 - b2) <= EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) &&\r\n            Math.abs(a3 - b3) <= EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3))\r\n        );\r\n    }\r\n}\r\n","import { Vec3 } from \"./vec3\";\r\nimport { Quat } from \"./quat\";\r\nimport { Vec4 } from \"./vec4\";\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Mat4 extends Float32Array {\r\n    private static Recycle: Mat4[] = [];\r\n    public static create() {\r\n        if (Mat4.Recycle && Mat4.Recycle.length > 0) {\r\n            let item = Mat4.Recycle.pop();\r\n            Mat4.identity(item);\r\n            return item;\r\n        } else {\r\n            let item = new Float32Array(16);\r\n            item[0] = 1;\r\n            item[5] = 1;\r\n            item[10] = 1;\r\n            item[15] = 1;\r\n            return item;\r\n        }\r\n    }\r\n\r\n    public static fromNumberArray(array: number[]) {\r\n        if (array.length != 16) return null;\r\n        return new Float32Array(array);\r\n    }\r\n    public static clone(from: Mat4): Mat4 {\r\n        if (Mat4.Recycle.length > 0) {\r\n            let item = Mat4.Recycle.pop();\r\n            Mat4.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let out = new Float32Array(16);\r\n            out[0] = from[0];\r\n            out[1] = from[1];\r\n            out[2] = from[2];\r\n            out[3] = from[3];\r\n            out[4] = from[4];\r\n            out[5] = from[5];\r\n            out[6] = from[6];\r\n            out[7] = from[7];\r\n            out[8] = from[8];\r\n            out[9] = from[9];\r\n            out[10] = from[10];\r\n            out[11] = from[11];\r\n            out[12] = from[12];\r\n            out[13] = from[13];\r\n            out[14] = from[14];\r\n            out[15] = from[15];\r\n            return out;\r\n        }\r\n    }\r\n    public static recycle(item: Mat4) {\r\n        Mat4.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Mat4.Recycle.length = 0;\r\n    }\r\n    constructor() {\r\n        super(16);\r\n        this[0] = 1;\r\n        // this[1] = 0;\r\n        // this[2] = 0;\r\n        // this[3] = 0;\r\n        // this[4] = 0;\r\n        this[5] = 1;\r\n        // this[6] = 0;\r\n        // this[7] = 0;\r\n        // this[8] = 0;\r\n        // this[9] = 0;\r\n        this[10] = 1;\r\n        // this[11] = 0;\r\n        // this[12] = 0;\r\n        // this[13] = 0;\r\n        // this[14] = 0;\r\n        this[15] = 1;\r\n    }\r\n\r\n    /**\r\n     * Copy the values from one mat4 to another\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param src the source matrix\r\n     * @returns out\r\n     */\r\n    public static copy(src: Mat4, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = src[0];\r\n        out[1] = src[1];\r\n        out[2] = src[2];\r\n        out[3] = src[3];\r\n        out[4] = src[4];\r\n        out[5] = src[5];\r\n        out[6] = src[6];\r\n        out[7] = src[7];\r\n        out[8] = src[8];\r\n        out[9] = src[9];\r\n        out[10] = src[10];\r\n        out[11] = src[11];\r\n        out[12] = src[12];\r\n        out[13] = src[13];\r\n        out[14] = src[14];\r\n        out[15] = src[15];\r\n        return out;\r\n    }\r\n    static IDENTITY = Mat4.create();\r\n    /**\r\n     * Set a mat4 to the identity matrix\r\n     *\r\n     * @param out the receiving matrix\r\n     * @returns out\r\n     */\r\n    public static identity(out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Transpose the values of a mat4\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the source matrix\r\n     * @returns out\r\n     */\r\n    public static transpose(a: Mat4, out: Mat4 = Mat4.create()): Mat4 {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1],\r\n                a02 = a[2],\r\n                a03 = a[3];\r\n            let a12 = a[6],\r\n                a13 = a[7];\r\n            let a23 = a[11];\r\n\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a01;\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a02;\r\n            out[9] = a12;\r\n            out[11] = a[14];\r\n            out[12] = a03;\r\n            out[13] = a13;\r\n            out[14] = a23;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[4];\r\n            out[2] = a[8];\r\n            out[3] = a[12];\r\n            out[4] = a[1];\r\n            out[5] = a[5];\r\n            out[6] = a[9];\r\n            out[7] = a[13];\r\n            out[8] = a[2];\r\n            out[9] = a[6];\r\n            out[10] = a[10];\r\n            out[11] = a[14];\r\n            out[12] = a[3];\r\n            out[13] = a[7];\r\n            out[14] = a[11];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Inverts a mat4\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the source matrix\r\n     * @returns out\r\n     */\r\n    public static invert(a: Mat4, out: Mat4 = Mat4.create()): Mat4 | null {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[2] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[3] = (a22 * b04 - a21 * b05 - a23 * b03) * det;\r\n        out[4] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[5] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[6] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[7] = (a20 * b05 - a22 * b02 + a23 * b01) * det;\r\n        out[8] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n        out[9] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n        out[10] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n        out[11] = (a21 * b02 - a20 * b04 - a23 * b00) * det;\r\n        out[12] = (a11 * b07 - a10 * b09 - a12 * b06) * det;\r\n        out[13] = (a00 * b09 - a01 * b07 + a02 * b06) * det;\r\n        out[14] = (a31 * b01 - a30 * b03 - a32 * b00) * det;\r\n        out[15] = (a20 * b03 - a21 * b01 + a22 * b00) * det;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the adjugate of a mat4\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the source matrix\r\n     * @returns out\r\n     */\r\n    public static adjoint(a: Mat4, out: Mat4 = Mat4.create()): Mat4 {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        out[0] = a11 * (a22 * a33 - a23 * a32) - a21 * (a12 * a33 - a13 * a32) + a31 * (a12 * a23 - a13 * a22);\r\n        out[1] = -(a01 * (a22 * a33 - a23 * a32) - a21 * (a02 * a33 - a03 * a32) + a31 * (a02 * a23 - a03 * a22));\r\n        out[2] = a01 * (a12 * a33 - a13 * a32) - a11 * (a02 * a33 - a03 * a32) + a31 * (a02 * a13 - a03 * a12);\r\n        out[3] = -(a01 * (a12 * a23 - a13 * a22) - a11 * (a02 * a23 - a03 * a22) + a21 * (a02 * a13 - a03 * a12));\r\n        out[4] = -(a10 * (a22 * a33 - a23 * a32) - a20 * (a12 * a33 - a13 * a32) + a30 * (a12 * a23 - a13 * a22));\r\n        out[5] = a00 * (a22 * a33 - a23 * a32) - a20 * (a02 * a33 - a03 * a32) + a30 * (a02 * a23 - a03 * a22);\r\n        out[6] = -(a00 * (a12 * a33 - a13 * a32) - a10 * (a02 * a33 - a03 * a32) + a30 * (a02 * a13 - a03 * a12));\r\n        out[7] = a00 * (a12 * a23 - a13 * a22) - a10 * (a02 * a23 - a03 * a22) + a20 * (a02 * a13 - a03 * a12);\r\n        out[8] = a10 * (a21 * a33 - a23 * a31) - a20 * (a11 * a33 - a13 * a31) + a30 * (a11 * a23 - a13 * a21);\r\n        out[9] = -(a00 * (a21 * a33 - a23 * a31) - a20 * (a01 * a33 - a03 * a31) + a30 * (a01 * a23 - a03 * a21));\r\n        out[10] = a00 * (a11 * a33 - a13 * a31) - a10 * (a01 * a33 - a03 * a31) + a30 * (a01 * a13 - a03 * a11);\r\n        out[11] = -(a00 * (a11 * a23 - a13 * a21) - a10 * (a01 * a23 - a03 * a21) + a20 * (a01 * a13 - a03 * a11));\r\n        out[12] = -(a10 * (a21 * a32 - a22 * a31) - a20 * (a11 * a32 - a12 * a31) + a30 * (a11 * a22 - a12 * a21));\r\n        out[13] = a00 * (a21 * a32 - a22 * a31) - a20 * (a01 * a32 - a02 * a31) + a30 * (a01 * a22 - a02 * a21);\r\n        out[14] = -(a00 * (a11 * a32 - a12 * a31) - a10 * (a01 * a32 - a02 * a31) + a30 * (a01 * a12 - a02 * a11));\r\n        out[15] = a00 * (a11 * a22 - a12 * a21) - a10 * (a01 * a22 - a02 * a21) + a20 * (a01 * a12 - a02 * a11);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the determinant of a mat4\r\n     *\r\n     * @param a the source matrix\r\n     * @returns determinant of a\r\n     */\r\n    public static determinant(a: Mat4): number {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        return b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two mat4's\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(lhs: Mat4, rhs: Mat4, out: Mat4 = Mat4.create()): Mat4 {\r\n        let a00 = lhs[0],\r\n            a01 = lhs[1],\r\n            a02 = lhs[2],\r\n            a03 = lhs[3];\r\n        let a10 = lhs[4],\r\n            a11 = lhs[5],\r\n            a12 = lhs[6],\r\n            a13 = lhs[7];\r\n        let a20 = lhs[8],\r\n            a21 = lhs[9],\r\n            a22 = lhs[10],\r\n            a23 = lhs[11];\r\n        let a30 = lhs[12],\r\n            a31 = lhs[13],\r\n            a32 = lhs[14],\r\n            a33 = lhs[15];\r\n\r\n        // Cache only the current line of the second matrix\r\n        let b0 = rhs[0],\r\n            b1 = rhs[1],\r\n            b2 = rhs[2],\r\n            b3 = rhs[3];\r\n        out[0] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[1] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[2] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[3] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = rhs[4];\r\n        b1 = rhs[5];\r\n        b2 = rhs[6];\r\n        b3 = rhs[7];\r\n        out[4] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[5] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[6] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[7] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = rhs[8];\r\n        b1 = rhs[9];\r\n        b2 = rhs[10];\r\n        b3 = rhs[11];\r\n        out[8] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[9] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[10] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[11] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n\r\n        b0 = rhs[12];\r\n        b1 = rhs[13];\r\n        b2 = rhs[14];\r\n        b3 = rhs[15];\r\n        out[12] = b0 * a00 + b1 * a10 + b2 * a20 + b3 * a30;\r\n        out[13] = b0 * a01 + b1 * a11 + b2 * a21 + b3 * a31;\r\n        out[14] = b0 * a02 + b1 * a12 + b2 * a22 + b3 * a32;\r\n        out[15] = b0 * a03 + b1 * a13 + b2 * a23 + b3 * a33;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Translate a mat4 by the given vector\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to translate\r\n     * @param v vector to translate by\r\n     * @returns out\r\n     */\r\n    public static translate(a: Mat4, v: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2];\r\n        let a00: number = void 0,\r\n            a01: number = void 0,\r\n            a02: number = void 0,\r\n            a03: number = void 0;\r\n        let a10: number = void 0,\r\n            a11: number = void 0,\r\n            a12: number = void 0,\r\n            a13: number = void 0;\r\n        let a20: number = void 0,\r\n            a21: number = void 0,\r\n            a22: number = void 0,\r\n            a23: number = void 0;\r\n\r\n        if (a === out) {\r\n            out[12] = a[0] * x + a[4] * y + a[8] * z + a[12];\r\n            out[13] = a[1] * x + a[5] * y + a[9] * z + a[13];\r\n            out[14] = a[2] * x + a[6] * y + a[10] * z + a[14];\r\n            out[15] = a[3] * x + a[7] * y + a[11] * z + a[15];\r\n        } else {\r\n            a00 = a[0];\r\n            a01 = a[1];\r\n            a02 = a[2];\r\n            a03 = a[3];\r\n            a10 = a[4];\r\n            a11 = a[5];\r\n            a12 = a[6];\r\n            a13 = a[7];\r\n            a20 = a[8];\r\n            a21 = a[9];\r\n            a22 = a[10];\r\n            a23 = a[11];\r\n\r\n            out[0] = a00;\r\n            out[1] = a01;\r\n            out[2] = a02;\r\n            out[3] = a03;\r\n            out[4] = a10;\r\n            out[5] = a11;\r\n            out[6] = a12;\r\n            out[7] = a13;\r\n            out[8] = a20;\r\n            out[9] = a21;\r\n            out[10] = a22;\r\n            out[11] = a23;\r\n\r\n            out[12] = a00 * x + a10 * y + a20 * z + a[12];\r\n            out[13] = a01 * x + a11 * y + a21 * z + a[13];\r\n            out[14] = a02 * x + a12 * y + a22 * z + a[14];\r\n            out[15] = a03 * x + a13 * y + a23 * z + a[15];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales the mat4 by the dimensions in the given Vec3\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to scale\r\n     * @param v the Vec3 to scale the matrix by\r\n     * @returns out\r\n     **/\r\n    public static scale(a: Mat4, v: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x = v[0],\r\n            y = v[1],\r\n            z = v[2];\r\n\r\n        out[0] = a[0] * x;\r\n        out[1] = a[1] * x;\r\n        out[2] = a[2] * x;\r\n        out[3] = a[3] * x;\r\n        out[4] = a[4] * y;\r\n        out[5] = a[5] * y;\r\n        out[6] = a[6] * y;\r\n        out[7] = a[7] * y;\r\n        out[8] = a[8] * z;\r\n        out[9] = a[9] * z;\r\n        out[10] = a[10] * z;\r\n        out[11] = a[11] * z;\r\n        out[12] = a[12];\r\n        out[13] = a[13];\r\n        out[14] = a[14];\r\n        out[15] = a[15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a mat4 by the given angle\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @param axis the axis to rotate around\r\n     * @returns out\r\n     */\r\n    public static rotate(a: Mat4, rad: number, axis: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2];\r\n        let len = Math.sqrt(x * x + y * y + z * z);\r\n        let s: number = void 0,\r\n            c: number = void 0,\r\n            t: number = void 0;\r\n        let a00: number = void 0,\r\n            a01: number = void 0,\r\n            a02: number = void 0,\r\n            a03: number = void 0;\r\n        let a10: number = void 0,\r\n            a11: number = void 0,\r\n            a12: number = void 0,\r\n            a13: number = void 0;\r\n        let a20: number = void 0,\r\n            a21: number = void 0,\r\n            a22: number = void 0,\r\n            a23: number = void 0;\r\n        let b00: number = void 0,\r\n            b01: number = void 0,\r\n            b02: number = void 0;\r\n        let b10: number = void 0,\r\n            b11: number = void 0,\r\n            b12: number = void 0;\r\n        let b20: number = void 0,\r\n            b21: number = void 0,\r\n            b22: number = void 0;\r\n\r\n        if (Math.abs(len) < 0.000001) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        a00 = a[0];\r\n        a01 = a[1];\r\n        a02 = a[2];\r\n        a03 = a[3];\r\n        a10 = a[4];\r\n        a11 = a[5];\r\n        a12 = a[6];\r\n        a13 = a[7];\r\n        a20 = a[8];\r\n        a21 = a[9];\r\n        a22 = a[10];\r\n        a23 = a[11];\r\n\r\n        // Construct the elements of the rotation matrix\r\n        b00 = x * x * t + c;\r\n        b01 = y * x * t + z * s;\r\n        b02 = z * x * t - y * s;\r\n        b10 = x * y * t - z * s;\r\n        b11 = y * y * t + c;\r\n        b12 = z * y * t + x * s;\r\n        b20 = x * z * t + y * s;\r\n        b21 = y * z * t - x * s;\r\n        b22 = z * z * t + c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out[0] = a00 * b00 + a10 * b01 + a20 * b02;\r\n        out[1] = a01 * b00 + a11 * b01 + a21 * b02;\r\n        out[2] = a02 * b00 + a12 * b01 + a22 * b02;\r\n        out[3] = a03 * b00 + a13 * b01 + a23 * b02;\r\n        out[4] = a00 * b10 + a10 * b11 + a20 * b12;\r\n        out[5] = a01 * b10 + a11 * b11 + a21 * b12;\r\n        out[6] = a02 * b10 + a12 * b11 + a22 * b12;\r\n        out[7] = a03 * b10 + a13 * b11 + a23 * b12;\r\n        out[8] = a00 * b20 + a10 * b21 + a20 * b22;\r\n        out[9] = a01 * b20 + a11 * b21 + a21 * b22;\r\n        out[10] = a02 * b20 + a12 * b21 + a22 * b22;\r\n        out[11] = a03 * b20 + a13 * b21 + a23 * b22;\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged last row\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the X axis\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @returns out\r\n     */\r\n    public static rotateX(a: Mat4, rad: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n        let a10 = a[4];\r\n        let a11 = a[5];\r\n        let a12 = a[6];\r\n        let a13 = a[7];\r\n        let a20 = a[8];\r\n        let a21 = a[9];\r\n        let a22 = a[10];\r\n        let a23 = a[11];\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged rows\r\n            out[0] = a[0];\r\n            out[1] = a[1];\r\n            out[2] = a[2];\r\n            out[3] = a[3];\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[4] = a10 * c + a20 * s;\r\n        out[5] = a11 * c + a21 * s;\r\n        out[6] = a12 * c + a22 * s;\r\n        out[7] = a13 * c + a23 * s;\r\n        out[8] = a20 * c - a10 * s;\r\n        out[9] = a21 * c - a11 * s;\r\n        out[10] = a22 * c - a12 * s;\r\n        out[11] = a23 * c - a13 * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the Y axis\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @returns out\r\n     */\r\n    public static rotateY(a: Mat4, rad: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n        let a00 = a[0];\r\n        let a01 = a[1];\r\n        let a02 = a[2];\r\n        let a03 = a[3];\r\n        let a20 = a[8];\r\n        let a21 = a[9];\r\n        let a22 = a[10];\r\n        let a23 = a[11];\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged rows\r\n            out[4] = a[4];\r\n            out[5] = a[5];\r\n            out[6] = a[6];\r\n            out[7] = a[7];\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c - a20 * s;\r\n        out[1] = a01 * c - a21 * s;\r\n        out[2] = a02 * c - a22 * s;\r\n        out[3] = a03 * c - a23 * s;\r\n        out[8] = a00 * s + a20 * c;\r\n        out[9] = a01 * s + a21 * c;\r\n        out[10] = a02 * s + a22 * c;\r\n        out[11] = a03 * s + a23 * c;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a matrix by the given angle around the Z axis\r\n     *\r\n     * @param out the receiving matrix\r\n     * @param a the matrix to rotate\r\n     * @param rad the angle to rotate the matrix by\r\n     * @returns out\r\n     */\r\n    public static rotateZ(a: Mat4, rad: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n        let a00 = a[0];\r\n        let a01 = a[1];\r\n        let a02 = a[2];\r\n        let a03 = a[3];\r\n        let a10 = a[4];\r\n        let a11 = a[5];\r\n        let a12 = a[6];\r\n        let a13 = a[7];\r\n\r\n        if (a !== out) {\r\n            // If the source and destination differ, copy the unchanged last row\r\n            out[8] = a[8];\r\n            out[9] = a[9];\r\n            out[10] = a[10];\r\n            out[11] = a[11];\r\n            out[12] = a[12];\r\n            out[13] = a[13];\r\n            out[14] = a[14];\r\n            out[15] = a[15];\r\n        }\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = a00 * c + a10 * s;\r\n        out[1] = a01 * c + a11 * s;\r\n        out[2] = a02 * c + a12 * s;\r\n        out[3] = a03 * c + a13 * s;\r\n        out[4] = a10 * c - a00 * s;\r\n        out[5] = a11 * c - a01 * s;\r\n        out[6] = a12 * c - a02 * s;\r\n        out[7] = a13 * c - a03 * s;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.translate(dest, dest, vec);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Vec3} v Translation vector\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromTranslation(v: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = v[0];\r\n        out[13] = v[1];\r\n        out[14] = v[2];\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector scaling\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.scale(dest, dest, vec);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Vec3} v Scaling vector\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromScaling(v: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = v[0];\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = v[1];\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = v[2];\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a given angle around a given axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotate(dest, dest, rad, axis);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @param {Vec3} axis the axis to rotate around\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromRotation(rad: number, axis: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x = axis[0],\r\n            y = axis[1],\r\n            z = axis[2];\r\n        let len = Math.sqrt(x * x + y * y + z * z);\r\n        let s: number = void 0,\r\n            c: number = void 0,\r\n            t: number = void 0;\r\n\r\n        if (Math.abs(len) < 0.000001) {\r\n            return null;\r\n        }\r\n\r\n        len = 1 / len;\r\n        x *= len;\r\n        y *= len;\r\n        z *= len;\r\n\r\n        s = Math.sin(rad);\r\n        c = Math.cos(rad);\r\n        t = 1 - c;\r\n\r\n        // Perform rotation-specific matrix multiplication\r\n        out[0] = x * x * t + c;\r\n        out[1] = y * x * t + z * s;\r\n        out[2] = z * x * t - y * s;\r\n        out[3] = 0;\r\n        out[4] = x * y * t - z * s;\r\n        out[5] = y * y * t + c;\r\n        out[6] = z * y * t + x * s;\r\n        out[7] = 0;\r\n        out[8] = x * z * t + y * s;\r\n        out[9] = y * z * t - x * s;\r\n        out[10] = z * z * t + c;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the X axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotateX(dest, dest, rad);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromXRotation(rad: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = c;\r\n        out[6] = s;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = -s;\r\n        out[10] = c;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the Y axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotateY(dest, dest, rad);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromYRotation(rad: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = c;\r\n        out[1] = 0;\r\n        out[2] = -s;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = 1;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = s;\r\n        out[9] = 0;\r\n        out[10] = c;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from the given angle around the Z axis\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.rotateZ(dest, dest, rad);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {number} rad the angle to rotate the matrix by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromZRotation(rad: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        let s = Math.sin(rad);\r\n        let c = Math.cos(rad);\r\n\r\n        // Perform axis-specific matrix multiplication\r\n        out[0] = c;\r\n        out[1] = s;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = -s;\r\n        out[5] = c;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 1;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the translation vector component of a transformation\r\n     *  matrix. If a matrix is built with fromRotationTranslation,\r\n     *  the returned vector will be the same as the translation vector\r\n     *  originally supplied.\r\n     * @param  {Vec3} out Vector to receive translation component\r\n     * @param  {Mat4} mat Matrix to be decomposed (input)\r\n     * @return {Vec3} out\r\n     */\r\n    public static getTranslationing(mat: Mat4, out: Vec3): Vec3 {\r\n        out[0] = mat[12];\r\n        out[1] = mat[13];\r\n        out[2] = mat[14];\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the scaling factor component of a transformation matrix.\r\n     * If a matrix is built with fromRotationTranslationScale with a\r\n     * normalized Quaternion parameter, the returned vector will be\r\n     * the same as the scaling vector originally supplied.\r\n     * @param {Vec3} out Vector to receive scaling factor component\r\n     * @param {Mat4} mat Matrix to be decomposed (input)\r\n     * @return {Vec3} out\r\n     */\r\n    public static getScaling(mat: Mat4, out: Vec3): Vec3 {\r\n        let m11 = mat[0];\r\n        let m12 = mat[1];\r\n        let m13 = mat[2];\r\n        let m21 = mat[4];\r\n        let m22 = mat[5];\r\n        let m23 = mat[6];\r\n        let m31 = mat[8];\r\n        let m32 = mat[9];\r\n        let m33 = mat[10];\r\n\r\n        out[0] = Math.sqrt(m11 * m11 + m12 * m12 + m13 * m13);\r\n        out[1] = Math.sqrt(m21 * m21 + m22 * m22 + m23 * m23);\r\n        out[2] = Math.sqrt(m31 * m31 + m32 * m32 + m33 * m33);\r\n\r\n        return out;\r\n    }\r\n\r\n    public static getMaxScaleOnAxis(mat: Mat4): number {\r\n        let m11 = mat[0];\r\n        let m12 = mat[1];\r\n        let m13 = mat[2];\r\n        let m21 = mat[4];\r\n        let m22 = mat[5];\r\n        let m23 = mat[6];\r\n        let m31 = mat[8];\r\n        let m32 = mat[9];\r\n        let m33 = mat[10];\r\n\r\n        let scaleX = m11 * m11 + m12 * m12 + m13 * m13;\r\n        let scaleY = m21 * m21 + m22 * m22 + m23 * m23;\r\n        let scaleZ = m31 * m31 + m32 * m32 + m33 * m33;\r\n\r\n        return Math.sqrt(Math.max(scaleX, scaleY, scaleZ));\r\n    }\r\n\r\n    /**\r\n     * Returns a Quaternion representing the rotational component\r\n     *  of a transformation matrix. If a matrix is built with\r\n     *  fromRotationTranslation, the returned Quaternion will be the\r\n     *  same as the Quaternion originally supplied.\r\n     * @param {Quat} out Quaternion to receive the rotation component\r\n     * @param {Mat4} mat Matrix to be decomposed (input)\r\n     * @return {Quat} out\r\n     */\r\n    public static getRotation(mat: Mat4, out: Quat): Quat {\r\n        // Algorithm taken from http://www.euclideanspace.com/maths/geometry/rotations/conversions/matrixToQuaternion/index.htm\r\n        let trace = mat[0] + mat[5] + mat[10];\r\n        let S = 0;\r\n\r\n        if (trace > 0) {\r\n            S = Math.sqrt(trace + 1.0) * 2;\r\n            out[3] = 0.25 * S;\r\n            out[0] = (mat[6] - mat[9]) / S;\r\n            out[1] = (mat[8] - mat[2]) / S;\r\n            out[2] = (mat[1] - mat[4]) / S;\r\n        } else if (mat[0] > mat[5] && mat[0] > mat[10]) {\r\n            S = Math.sqrt(1.0 + mat[0] - mat[5] - mat[10]) * 2;\r\n            out[3] = (mat[6] - mat[9]) / S;\r\n            out[0] = 0.25 * S;\r\n            out[1] = (mat[1] + mat[4]) / S;\r\n            out[2] = (mat[8] + mat[2]) / S;\r\n        } else if (mat[5] > mat[10]) {\r\n            S = Math.sqrt(1.0 + mat[5] - mat[0] - mat[10]) * 2;\r\n            out[3] = (mat[8] - mat[2]) / S;\r\n            out[0] = (mat[1] + mat[4]) / S;\r\n            out[1] = 0.25 * S;\r\n            out[2] = (mat[6] + mat[9]) / S;\r\n        } else {\r\n            S = Math.sqrt(1.0 + mat[10] - mat[0] - mat[5]) * 2;\r\n            out[3] = (mat[1] - mat[4]) / S;\r\n            out[0] = (mat[8] + mat[2]) / S;\r\n            out[1] = (mat[6] + mat[9]) / S;\r\n            out[2] = 0.25 * S;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a Quaternion rotation, vector translation and vector scale, rotating and scaling around the given origin\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.translate(dest, vec);\r\n     *     mat4.translate(dest, origin);\r\n     *     let QuatMat = mat4.create();\r\n     *     Quat4.toMat4(Quat, QuatMat);\r\n     *     mat4.multiply(dest, QuatMat);\r\n     *     mat4.scale(dest, scale)\r\n     *     mat4.translate(dest, negativeOrigin);\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Quat} q Rotation Quaternion\r\n     * @param {Vec3} v Translation vector\r\n     * @param {Vec3} s Scaling vector\r\n     * @param {Vec3} o The origin vector around which to scale and rotate\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromRotationTranslationScaleOrigin(\r\n        q: Quat,\r\n        v: Vec3,\r\n        s: Vec3,\r\n        o: Vec3,\r\n        out: Mat4 = Mat4.create(),\r\n    ): Mat4 {\r\n        // Quaternion math\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        let sx = s[0];\r\n        let sy = s[1];\r\n        let sz = s[2];\r\n\r\n        let ox = o[0];\r\n        let oy = o[1];\r\n        let oz = o[2];\r\n\r\n        out[0] = (1 - (yy + zz)) * sx;\r\n        out[1] = (xy + wz) * sx;\r\n        out[2] = (xz - wy) * sx;\r\n        out[3] = 0;\r\n        out[4] = (xy - wz) * sy;\r\n        out[5] = (1 - (xx + zz)) * sy;\r\n        out[6] = (yz + wx) * sy;\r\n        out[7] = 0;\r\n        out[8] = (xz + wy) * sz;\r\n        out[9] = (yz - wx) * sz;\r\n        out[10] = (1 - (xx + yy)) * sz;\r\n        out[11] = 0;\r\n        out[12] = v[0] + ox - (out[0] * ox + out[4] * oy + out[8] * oz);\r\n        out[13] = v[1] + oy - (out[1] * ox + out[5] * oy + out[9] * oz);\r\n        out[14] = v[2] + oz - (out[2] * ox + out[6] * oy + out[10] * oz);\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 4x4 matrix from the given Quaternion\r\n     *\r\n     * @param {Mat4} out mat4 receiving operation result\r\n     * @param {Quat} q Quaternion to create matrix from\r\n     *\r\n     * @returns {Mat4} out\r\n     */\r\n    public static fromQuat(q: Quat, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let yx = y * x2;\r\n        let yy = y * y2;\r\n        let zx = z * x2;\r\n        let zy = z * y2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        out[0] = 1 - yy - zz;\r\n        out[1] = yx + wz;\r\n        out[2] = zx - wy;\r\n        out[3] = 0;\r\n\r\n        out[4] = yx - wz;\r\n        out[5] = 1 - xx - zz;\r\n        out[6] = zy + wx;\r\n        out[7] = 0;\r\n\r\n        out[8] = zx + wy;\r\n        out[9] = zy - wx;\r\n        out[10] = 1 - xx - yy;\r\n        out[11] = 0;\r\n\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 0;\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a frustum matrix with the given bounds\r\n     *\r\n     * @param out mat4 frustum matrix will be written into\r\n     * @param left Left bound of the frustum\r\n     * @param right Right bound of the frustum\r\n     * @param bottom Bottom bound of the frustum\r\n     * @param top Top bound of the frustum\r\n     * @param near Near bound of the frustum\r\n     * @param far Far bound of the frustum\r\n     * @returns out\r\n     */\r\n    public static frustum(\r\n        left: number,\r\n        right: number,\r\n        bottom: number,\r\n        top: number,\r\n        near: number,\r\n        far: number,\r\n        out: Mat4 = Mat4.create(),\r\n    ): Mat4 {\r\n        let rl = 1 / (right - left);\r\n        let tb = 1 / (top - bottom);\r\n        let nf = 1 / (near - far);\r\n        out[0] = near * 2 * rl;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = near * 2 * tb;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = (right + left) * rl;\r\n        out[9] = (top + bottom) * tb;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = far * near * 2 * nf;\r\n        out[15] = 0;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a look-at matrix with the given eye position, focal point, and up axis\r\n     *\r\n     * @param out mat4 frustum matrix will be written into\r\n     * @param eye Position of the viewer\r\n     * @param center Point the viewer is looking at\r\n     * @param up Vec3 pointing up\r\n     * @returns out\r\n     */\r\n    public static lookAt(eye: Vec3, center: Vec3, up: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x0: number = void 0,\r\n            x1: number = void 0,\r\n            x2: number = void 0,\r\n            y0: number = void 0,\r\n            y1: number = void 0,\r\n            y2: number = void 0,\r\n            z0: number = void 0,\r\n            z1: number = void 0,\r\n            z2: number = void 0,\r\n            len: number = void 0;\r\n        let eyex = eye[0];\r\n        let eyey = eye[1];\r\n        let eyez = eye[2];\r\n        let upx = up[0];\r\n        let upy = up[1];\r\n        let upz = up[2];\r\n        let centerx = center[0];\r\n        let centery = center[1];\r\n        let centerz = center[2];\r\n\r\n        if (\r\n            Math.abs(eyex - centerx) < 0.000001 &&\r\n            Math.abs(eyey - centery) < 0.000001 &&\r\n            Math.abs(eyez - centerz) < 0.000001\r\n        ) {\r\n            return Mat4.identity(out);\r\n        }\r\n\r\n        z0 = eyex - centerx;\r\n        z1 = eyey - centery;\r\n        z2 = eyez - centerz;\r\n\r\n        len = 1 / Math.sqrt(z0 * z0 + z1 * z1 + z2 * z2);\r\n        z0 *= len;\r\n        z1 *= len;\r\n        z2 *= len;\r\n\r\n        x0 = upy * z2 - upz * z1;\r\n        x1 = upz * z0 - upx * z2;\r\n        x2 = upx * z1 - upy * z0;\r\n        len = Math.sqrt(x0 * x0 + x1 * x1 + x2 * x2);\r\n        if (!len) {\r\n            x0 = 0;\r\n            x1 = 0;\r\n            x2 = 0;\r\n        } else {\r\n            len = 1 / len;\r\n            x0 *= len;\r\n            x1 *= len;\r\n            x2 *= len;\r\n        }\r\n\r\n        y0 = z1 * x2 - z2 * x1;\r\n        y1 = z2 * x0 - z0 * x2;\r\n        y2 = z0 * x1 - z1 * x0;\r\n\r\n        len = Math.sqrt(y0 * y0 + y1 * y1 + y2 * y2);\r\n        if (!len) {\r\n            y0 = 0;\r\n            y1 = 0;\r\n            y2 = 0;\r\n        } else {\r\n            len = 1 / len;\r\n            y0 *= len;\r\n            y1 *= len;\r\n            y2 *= len;\r\n        }\r\n\r\n        out[0] = x0;\r\n        out[1] = y0;\r\n        out[2] = z0;\r\n        out[3] = 0;\r\n        out[4] = x1;\r\n        out[5] = y1;\r\n        out[6] = z1;\r\n        out[7] = 0;\r\n        out[8] = x2;\r\n        out[9] = y2;\r\n        out[10] = z2;\r\n        out[11] = 0;\r\n        out[12] = -(x0 * eyex + x1 * eyey + x2 * eyez);\r\n        out[13] = -(y0 * eyex + y1 * eyey + y2 * eyez);\r\n        out[14] = -(z0 * eyex + z1 * eyey + z2 * eyez);\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a matrix that makes something look at something else.\r\n     *\r\n     * @param {Mat4} out mat4 frustum matrix will be written into\r\n     * @param {Vec3} eye Position of the viewer\r\n     * @param {Vec3} center Point the viewer is looking at\r\n     * @param {Vec3} up Vec3 pointing up\r\n     * @returns {Mat4} out\r\n     */\r\n    public static targetTo(eye: Vec3, target: Vec3, up: Vec3, out: Vec4) {\r\n        let eyex = eye[0],\r\n            eyey = eye[1],\r\n            eyez = eye[2],\r\n            upx = up[0],\r\n            upy = up[1],\r\n            upz = up[2];\r\n\r\n        let z0 = eyex - target[0],\r\n            z1 = eyey - target[1],\r\n            z2 = eyez - target[2];\r\n\r\n        let len = z0 * z0 + z1 * z1 + z2 * z2;\r\n        if (len > 0) {\r\n            len = 1 / Math.sqrt(len);\r\n            z0 *= len;\r\n            z1 *= len;\r\n            z2 *= len;\r\n        }\r\n\r\n        let x0 = upy * z2 - upz * z1,\r\n            x1 = upz * z0 - upx * z2,\r\n            x2 = upx * z1 - upy * z0;\r\n\r\n        out[0] = x0;\r\n        out[1] = x1;\r\n        out[2] = x2;\r\n        out[3] = 0;\r\n        out[4] = z1 * x2 - z2 * x1;\r\n        out[5] = z2 * x0 - z0 * x2;\r\n        out[6] = z0 * x1 - z1 * x0;\r\n        out[7] = 0;\r\n        out[8] = z0;\r\n        out[9] = z1;\r\n        out[10] = z2;\r\n        out[11] = 0;\r\n        out[12] = eyex;\r\n        out[13] = eyey;\r\n        out[14] = eyez;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a mat4\r\n     *\r\n     * @param mat matrix to represent as a string\r\n     * @returns string representation of the matrix\r\n     */\r\n    public static str(a: Mat4): string {\r\n        return (\r\n            \"mat4(\" +\r\n            a[0] +\r\n            \", \" +\r\n            a[1] +\r\n            \", \" +\r\n            a[2] +\r\n            \", \" +\r\n            a[3] +\r\n            \", \" +\r\n            a[4] +\r\n            \", \" +\r\n            a[5] +\r\n            \", \" +\r\n            a[6] +\r\n            \", \" +\r\n            a[7] +\r\n            \", \" +\r\n            a[8] +\r\n            \", \" +\r\n            a[9] +\r\n            \", \" +\r\n            a[10] +\r\n            \", \" +\r\n            a[11] +\r\n            \", \" +\r\n            a[12] +\r\n            \", \" +\r\n            a[13] +\r\n            \", \" +\r\n            a[14] +\r\n            \", \" +\r\n            a[15] +\r\n            \")\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns Frobenius norm of a mat4\r\n     *\r\n     * @param a the matrix to calculate Frobenius norm of\r\n     * @returns Frobenius norm\r\n     */\r\n    public static frob(a: Mat4): number {\r\n        return Math.sqrt(\r\n            Math.pow(a[0], 2) +\r\n            Math.pow(a[1], 2) +\r\n            Math.pow(a[2], 2) +\r\n            Math.pow(a[3], 2) +\r\n            Math.pow(a[4], 2) +\r\n            Math.pow(a[5], 2) +\r\n            Math.pow(a[6], 2) +\r\n            Math.pow(a[7], 2) +\r\n            Math.pow(a[8], 2) +\r\n            Math.pow(a[9], 2) +\r\n            Math.pow(a[10], 2) +\r\n            Math.pow(a[11], 2) +\r\n            Math.pow(a[12], 2) +\r\n            Math.pow(a[13], 2) +\r\n            Math.pow(a[14], 2) +\r\n            Math.pow(a[15], 2),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds two mat4's\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} a the first operand\r\n     * @param {Mat4} b the second operand\r\n     * @returns {Mat4} out\r\n     */\r\n    public static add(a: Mat4, b: Mat4, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        out[4] = a[4] + b[4];\r\n        out[5] = a[5] + b[5];\r\n        out[6] = a[6] + b[6];\r\n        out[7] = a[7] + b[7];\r\n        out[8] = a[8] + b[8];\r\n        out[9] = a[9] + b[9];\r\n        out[10] = a[10] + b[10];\r\n        out[11] = a[11] + b[11];\r\n        out[12] = a[12] + b[12];\r\n        out[13] = a[13] + b[13];\r\n        out[14] = a[14] + b[14];\r\n        out[15] = a[15] + b[15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} lhs the first operand\r\n     * @param {Mat4} rhs the second operand\r\n     * @returns {Mat4} out\r\n     */\r\n    public static subtract(lhs: Mat4, rhs: Mat4, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = lhs[0] - rhs[0];\r\n        out[1] = lhs[1] - rhs[1];\r\n        out[2] = lhs[2] - rhs[2];\r\n        out[3] = lhs[3] - rhs[3];\r\n        out[4] = lhs[4] - rhs[4];\r\n        out[5] = lhs[5] - rhs[5];\r\n        out[6] = lhs[6] - rhs[6];\r\n        out[7] = lhs[7] - rhs[7];\r\n        out[8] = lhs[8] - rhs[8];\r\n        out[9] = lhs[9] - rhs[9];\r\n        out[10] = lhs[10] - rhs[10];\r\n        out[11] = lhs[11] - rhs[11];\r\n        out[12] = lhs[12] - rhs[12];\r\n        out[13] = lhs[13] - rhs[13];\r\n        out[14] = lhs[14] - rhs[14];\r\n        out[15] = lhs[15] - rhs[15];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} a the first operand\r\n     * @param {Mat4} b the second operand\r\n     * @returns {Mat4} out\r\n     */\r\n    //public static sub(out: Mat4=Mat4.create(), a: mat4, b: mat4): mat4;\r\n\r\n    /**\r\n     * Multiply each element of the matrix by a scalar.\r\n     *\r\n     * @param {Mat4} out the receiving matrix\r\n     * @param {Mat4} a the matrix to scale\r\n     * @param {number} b amount to scale the matrix's elements by\r\n     * @returns {Mat4} out\r\n     */\r\n    public static multiplyScalar(a: Mat4, b: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        out[4] = a[4] * b;\r\n        out[5] = a[5] * b;\r\n        out[6] = a[6] * b;\r\n        out[7] = a[7] * b;\r\n        out[8] = a[8] * b;\r\n        out[9] = a[9] * b;\r\n        out[10] = a[10] * b;\r\n        out[11] = a[11] * b;\r\n        out[12] = a[12] * b;\r\n        out[13] = a[13] * b;\r\n        out[14] = a[14] * b;\r\n        out[15] = a[15] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two mat4's after multiplying each element of the second operand by a scalar value.\r\n     *\r\n     * @param {Mat4} out the receiving vector\r\n     * @param {Mat4} a the first operand\r\n     * @param {Mat4} b the second operand\r\n     * @param {number} scale the amount to scale b's elements by before adding\r\n     * @returns {Mat4} out\r\n     */\r\n    public static multiplyScalarAndAdd(a: Mat4, b: Mat4, scale: number, out: Mat4 = Mat4.create()): Mat4 {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        out[2] = a[2] + b[2] * scale;\r\n        out[3] = a[3] + b[3] * scale;\r\n        out[4] = a[4] + b[4] * scale;\r\n        out[5] = a[5] + b[5] * scale;\r\n        out[6] = a[6] + b[6] * scale;\r\n        out[7] = a[7] + b[7] * scale;\r\n        out[8] = a[8] + b[8] * scale;\r\n        out[9] = a[9] + b[9] * scale;\r\n        out[10] = a[10] + b[10] * scale;\r\n        out[11] = a[11] + b[11] * scale;\r\n        out[12] = a[12] + b[12] * scale;\r\n        out[13] = a[13] + b[13] * scale;\r\n        out[14] = a[14] + b[14] * scale;\r\n        out[15] = a[15] + b[15] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Mat4} a The first matrix.\r\n     * @param {Mat4} b The second matrix.\r\n     * @returns {boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Mat4, b: Mat4): boolean {\r\n        return (\r\n            a[0] === b[0] &&\r\n            a[1] === b[1] &&\r\n            a[2] === b[2] &&\r\n            a[3] === b[3] &&\r\n            a[4] === b[4] &&\r\n            a[5] === b[5] &&\r\n            a[6] === b[6] &&\r\n            a[7] === b[7] &&\r\n            a[8] === b[8] &&\r\n            a[9] === b[9] &&\r\n            a[10] === b[10] &&\r\n            a[11] === b[11] &&\r\n            a[12] === b[12] &&\r\n            a[13] === b[13] &&\r\n            a[14] === b[14] &&\r\n            a[15] === b[15]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have approximately the same elements in the same position.\r\n     *\r\n     * @param {Mat4} a The first matrix.\r\n     * @param {Mat4} b The second matrix.\r\n     * @returns {boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static equals(a: Mat4, b: Mat4): boolean {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let a4 = a[4],\r\n            a5 = a[5],\r\n            a6 = a[6],\r\n            a7 = a[7];\r\n        let a8 = a[8],\r\n            a9 = a[9],\r\n            a10 = a[10],\r\n            a11 = a[11];\r\n        let a12 = a[12],\r\n            a13 = a[13],\r\n            a14 = a[14],\r\n            a15 = a[15];\r\n\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        let b4 = b[4],\r\n            b5 = b[5],\r\n            b6 = b[6],\r\n            b7 = b[7];\r\n        let b8 = b[8],\r\n            b9 = b[9],\r\n            b10 = b[10],\r\n            b11 = b[11];\r\n        let b12 = b[12],\r\n            b13 = b[13],\r\n            b14 = b[14],\r\n            b15 = b[15];\r\n\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON &&\r\n            Math.abs(a1 - b1) <= EPSILON &&\r\n            Math.abs(a2 - b2) <= EPSILON &&\r\n            Math.abs(a3 - b3) <= EPSILON &&\r\n            Math.abs(a4 - b4) <= EPSILON &&\r\n            Math.abs(a5 - b5) <= EPSILON &&\r\n            Math.abs(a6 - b6) <= EPSILON &&\r\n            Math.abs(a7 - b7) <= EPSILON &&\r\n            Math.abs(a8 - b8) <= EPSILON &&\r\n            Math.abs(a9 - b9) <= EPSILON &&\r\n            Math.abs(a10 - b10) <= EPSILON &&\r\n            Math.abs(a11 - b11) <= EPSILON &&\r\n            Math.abs(a12 - b12) <= EPSILON &&\r\n            Math.abs(a13 - b13) <= EPSILON &&\r\n            Math.abs(a14 - b14) <= EPSILON &&\r\n            Math.abs(a15 - b15) <= EPSILON\r\n        );\r\n    }\r\n\r\n    /**\r\n     * 变换顶点\r\n     * Transforms the point with a mat4.\r\n     * 4th vector component is implicitly '1'\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    static transformPoint(vector: Vec3, mat: Mat4, out: Vec3): Vec3 {\r\n        let x = vector[0],\r\n            y = vector[1],\r\n            z = vector[2];\r\n        let w = mat[3] * x + mat[7] * y + mat[11] * z + mat[15];\r\n        w = w || 1.0;\r\n        out[0] = (mat[0] * x + mat[4] * y + mat[8] * z + mat[12]) / w;\r\n        out[1] = (mat[1] * x + mat[5] * y + mat[9] * z + mat[13]) / w;\r\n        out[2] = (mat[2] * x + mat[6] * y + mat[10] * z + mat[14]) / w;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * 变换向量\r\n     * Transforms the Vec3 with a mat4.\r\n     * 4th vector component is implicitly '1'\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param m matrix to transform with\r\n     * @returns out\r\n     */\r\n    static transformVector3(vector: Vec3, mat: Mat4, out: Vec3): Vec3 {\r\n        let x = vector[0],\r\n            y = vector[1],\r\n            z = vector[2];\r\n        out[0] = mat[0] * x + mat[4] * y + mat[8] * z;\r\n        out[1] = mat[1] * x + mat[5] * y + mat[9] * z;\r\n        out[2] = mat[2] * x + mat[6] * y + mat[10] * z;\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Generates a perspective projection matrix with the given bounds\r\n    //  *\r\n    //  * @param out mat4 frustum matrix will be written into\r\n    //  * @param fovy Vertical field of view in radians\r\n    //  * @param aspect Aspect rat typically viewport width/height\r\n    //  * @param near Near bound of the frustum\r\n    //  * @param far Far bound of the frustum\r\n    //  * @returns out\r\n    //  */\r\n    public static projectPerspectiveLH(\r\n        fovy: number,\r\n        aspect: number,\r\n        near: number,\r\n        far: number,\r\n        out: Mat4 = Mat4.create(),\r\n    ): Mat4 {\r\n        let f = 1.0 / Math.tan(fovy / 2);\r\n        let nf = 1 / (near - far);\r\n        out[0] = f / aspect;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = f;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = (far + near) * nf;\r\n        out[11] = -1;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = 2 * far * near * nf;\r\n        out[15] = 0;\r\n        return out;\r\n    }\r\n    /**\r\n     * Generates a perspective projection matrix with the given bounds\r\n     * @param fov 上下夹角\r\n     * @param aspect 左右夹角\r\n     * @param znear 近视点距离\r\n     * @param zfar 远视点距离\r\n     * @returns {Mat4} out\r\n     */\r\n    // static project_PerspectiveLH(fov: number, aspect: number, znear: number, zfar: number, out: Mat4=Mat4.create())\r\n    // {\r\n    //     let tan = 1.0 / (Math.tan(fov * 0.5));\r\n    //     let nf=zfar / (znear - zfar);\r\n    //     out[0] = tan / aspect;\r\n    //     out[1] = out[2] = out[3] =out[4]=0;\r\n    //     out[5] = tan;\r\n    //     out[6] = out[7] = out[8] = out[9]=0;\r\n    //     out[10] = -nf;\r\n    //     out[11] = 1.0;\r\n    //     out[12] = out[13] = out[15] = 0.0;\r\n    //     out[14] = znear * nf;\r\n    // }\r\n    // /**\r\n    //  * Generates a orthogonal projection matrix with the given bounds\r\n    //  *\r\n    //  * @param out mat4 frustum matrix will be written into\r\n    //  * @param left Left bound of the frustum\r\n    //  * @param right Right bound of the frustum\r\n    //  * @param bottom Bottom bound of the frustum\r\n    //  * @param top Top bound of the frustum\r\n    //  * @param near Near bound of the frustum\r\n    //  * @param far Far bound of the frustum\r\n    //  * @returns out\r\n    //  */\r\n    // public static ortho(out: Mat4=Mat4.create(), left: number, right: number,\r\n    //     bottom: number, top: number, near: number, far: number): mat4{\r\n    //         let lr = 1 / (left - right);\r\n    //         let bt = 1 / (bottom - top);\r\n    //         let nf = 1 / (near - far);\r\n    //         out[0] = -2 * lr;\r\n    //         out[1] = 0;\r\n    //         out[2] = 0;\r\n    //         out[3] = 0;\r\n    //         out[4] = 0;\r\n    //         out[5] = -2 * bt;\r\n    //         out[6] = 0;\r\n    //         out[7] = 0;\r\n    //         out[8] = 0;\r\n    //         out[9] = 0;\r\n    //         out[10] = 2 * nf;\r\n    //         out[11] = 0;\r\n    //         out[12] = (left + right) * lr;\r\n    //         out[13] = (top + bottom) * bt;\r\n    //         out[14] = (far + near) * nf;\r\n    //         out[15] = 1;\r\n    //         return out;\r\n    //       }\r\n    public static projectOrthoLH(\r\n        width: number,\r\n        height: number,\r\n        near: number,\r\n        far: number,\r\n        out: Mat4 = Mat4.create(),\r\n    ): Mat4 {\r\n        let lr = -1 / width;\r\n        let bt = -1 / height;\r\n        let nf = 1 / (near - far);\r\n        out[0] = -2 * lr;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 0;\r\n        out[5] = -2 * bt;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 0;\r\n        out[9] = 0;\r\n        out[10] = 2 * nf;\r\n        out[11] = 0;\r\n        out[12] = 0;\r\n        out[13] = 0;\r\n        out[14] = (far + near) * nf;\r\n        out[15] = 1;\r\n        return out;\r\n    }\r\n    /**\r\n     * Generates a orthogonal projection matrix with the given bounds\r\n     * @param width 宽\r\n     * @param height 高\r\n     * @param znear 近视点\r\n     * @param zfar 远视点\r\n     * @param out\r\n     */\r\n    // static project_OrthoLH(width: number, height: number, znear: number, zfar: number, out: Mat4=Mat4.create())\r\n    // {\r\n    //     let hw = 2.0 / width;\r\n    //     let hh = 2.0 / height;\r\n    //     let id = 1.0 / (zfar - znear);\r\n    //     let nid = znear / (znear - zfar);\r\n    //     out[0]=hw;\r\n    //     out[5]=hh;\r\n    //     out[10]=id;\r\n    //     out[11]=nid;\r\n    //     out[15]=1;\r\n    //     out[1]=out[2]=out[3]=out[4]=out[6]=out[7]=out[8]=out[8]=out[12]=out[13]=out[14]=0;\r\n    // }\r\n\r\n    /** ----------copy glmatrix\r\n     * Creates a matrix from a Quaternion rotation, vector translation and vector scale\r\n     *  This is equivalent to (but much faster than):\r\n     * mat4.identity(dest);\r\n     * mat4.translate(dest, vec);\r\n     * let QuatMat = mat4.create();\r\n     * Quat4.toMat4(Quat, QuatMat);\r\n     * mat4.multiply(dest, QuatMat);\r\n     * mat4.scale(dest, scale)\r\n     *\r\n     * @param pos Translation vector\r\n     * @param scale Scaling vector\r\n     * @param rot Rotation Quaternion\r\n     * @param out\r\n     */\r\n    static RTS(pos: Vec3, scale: Vec3, rot: Quat, out: Mat4 = Mat4.create()): Mat4 {\r\n        let x = rot[0],\r\n            y = rot[1],\r\n            z = rot[2],\r\n            w = rot[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n        let sx = scale[0];\r\n        let sy = scale[1];\r\n        let sz = scale[2];\r\n\r\n        out[0] = (1 - (yy + zz)) * sx;\r\n        out[1] = (xy + wz) * sx;\r\n        out[2] = (xz - wy) * sx;\r\n        out[3] = 0;\r\n        out[4] = (xy - wz) * sy;\r\n        out[5] = (1 - (xx + zz)) * sy;\r\n        out[6] = (yz + wx) * sy;\r\n        out[7] = 0;\r\n        out[8] = (xz + wy) * sz;\r\n        out[9] = (yz - wx) * sz;\r\n        out[10] = (1 - (xx + yy)) * sz;\r\n        out[11] = 0;\r\n        out[12] = pos[0];\r\n        out[13] = pos[1];\r\n        out[14] = pos[2];\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n    /**----copy glmatrix\r\n     * Creates a matrix from a Quaternion rotation and vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat4.identity(dest);\r\n     *     mat4.translate(dest, vec);\r\n     *     let QuatMat = mat4.create();\r\n     *     Quat4.toMat4(Quat, QuatMat);\r\n     *     mat4.multiply(dest, QuatMat);\r\n     *\r\n     * @param out mat4 receiving operation result\r\n     * @param q Rotation Quaternion\r\n     * @param v Translation vector\r\n     * @returns out\r\n     */\r\n    public static RT(q: Quat, v: Vec3, out: Mat4 = Mat4.create()): Mat4 {\r\n        // Quaternion math\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let xy = x * y2;\r\n        let xz = x * z2;\r\n        let yy = y * y2;\r\n        let yz = y * z2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        out[0] = 1 - (yy + zz);\r\n        out[1] = xy + wz;\r\n        out[2] = xz - wy;\r\n        out[3] = 0;\r\n        out[4] = xy - wz;\r\n        out[5] = 1 - (xx + zz);\r\n        out[6] = yz + wx;\r\n        out[7] = 0;\r\n        out[8] = xz + wy;\r\n        out[9] = yz - wx;\r\n        out[10] = 1 - (xx + yy);\r\n        out[11] = 0;\r\n        out[12] = v[0];\r\n        out[13] = v[1];\r\n        out[14] = v[2];\r\n        out[15] = 1;\r\n\r\n        return out;\r\n    }\r\n    /**use glmatrix separate function\r\n     * Returns the translation、scale、rotation  component  of a transformation\r\n     *\r\n     * @param src\r\n     * @param scale\r\n     * @param rotation\r\n     * @param translation\r\n     */\r\n    static decompose(src: Mat4, scale: Vec3, rotation: Quat, translation: Vec3) {\r\n        Mat4.getTranslationing(src, translation);\r\n        Mat4.getScaling(src, scale);\r\n        Mat4.getRotationing(src, rotation, scale);\r\n    }\r\n\r\n    /**\r\n     * get normalize Quaternion with the given rotation matrix values\r\n     * @param matrix defines the source matrix\r\n     * @param result defines the target Quaternion\r\n     */\r\n    public static getRotationing(matrix: Mat4, result: Quat, scale: Vec3 = null) {\r\n        let scalex = 1,\r\n            scaley = 1,\r\n            scalez = 1;\r\n        if (scale == null) {\r\n            scalex = Math.sqrt(matrix[0] * matrix[0] + matrix[1] * matrix[1] + matrix[2] * matrix[2]);\r\n            scaley = Math.sqrt(matrix[4] * matrix[4] + matrix[5] * matrix[5] + matrix[6] * matrix[6]);\r\n            scalez = Math.sqrt(matrix[8] * matrix[8] + matrix[9] * matrix[9] + matrix[10] * matrix[10]);\r\n        } else {\r\n            scalex = scale[0];\r\n            scaley = scale[1];\r\n            scalez = scale[2];\r\n        }\r\n        if (scale.x === 0 || scale.y === 0 || scale.z === 0) {\r\n            result[0] = 0;\r\n            result[1] = 0;\r\n            result[2] = 0;\r\n            result[3] = 1;\r\n            return;\r\n        }\r\n        // var data = matrix.m;\r\n        let m11 = matrix[0] / scalex,\r\n            m12 = matrix[4] / scaley,\r\n            m13 = matrix[8] / scalez;\r\n        let m21 = matrix[1] / scalex,\r\n            m22 = matrix[5] / scaley,\r\n            m23 = matrix[9] / scalez;\r\n        let m31 = matrix[2] / scalex,\r\n            m32 = matrix[6] / scaley,\r\n            m33 = matrix[10] / scalez;\r\n        let trace = m11 + m22 + m33;\r\n        let s;\r\n\r\n        if (trace > 0) {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n            result[3] = 0.25 / s;\r\n            result[0] = (m32 - m23) * s;\r\n            result[1] = (m13 - m31) * s;\r\n            result[2] = (m21 - m12) * s;\r\n        } else if (m11 > m22 && m11 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\r\n            result[3] = (m32 - m23) / s;\r\n            result[0] = 0.25 * s;\r\n            result[1] = (m12 + m21) / s;\r\n            result[2] = (m13 + m31) / s;\r\n        } else if (m22 > m33) {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\r\n            result[3] = (m13 - m31) / s;\r\n            result[0] = (m12 + m21) / s;\r\n            result[1] = 0.25 * s;\r\n            result[2] = (m23 + m32) / s;\r\n        } else {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\r\n            result[3] = (m21 - m12) / s;\r\n            result[0] = (m13 + m31) / s;\r\n            result[1] = (m23 + m32) / s;\r\n            result[2] = 0.25 * s;\r\n        }\r\n    }\r\n\r\n    static toArray(mat: Mat4, array: Float32Array, offset: number) {\r\n        let te = mat;\r\n        array[offset] = te[0];\r\n        array[offset + 1] = te[1];\r\n        array[offset + 2] = te[2];\r\n        array[offset + 3] = te[3];\r\n\r\n        array[offset + 4] = te[4];\r\n        array[offset + 5] = te[5];\r\n        array[offset + 6] = te[6];\r\n        array[offset + 7] = te[7];\r\n\r\n        array[offset + 8] = te[8];\r\n        array[offset + 9] = te[9];\r\n        array[offset + 10] = te[10];\r\n        array[offset + 11] = te[11];\r\n\r\n        array[offset + 12] = te[12];\r\n        array[offset + 13] = te[13];\r\n        array[offset + 14] = te[14];\r\n        array[offset + 15] = te[15];\r\n        return array;\r\n    }\r\n\r\n    static fromArray(array: Float32Array, index: number) {\r\n        if ((index + 1) * 64 <= array.byteLength) {\r\n            return new Float32Array(array.buffer, array.byteOffset + index * 64, 16);\r\n        } else {\r\n            return null;\r\n        }\r\n    }\r\n}\r\n","import { Quat } from \"./quat\";\r\n\r\nimport { EPSILON } from \"./common\";\r\n\r\nexport class Vec3 extends Float32Array\r\n{\r\n    public static readonly UP = Vec3.create(0, 1, 0);\r\n    public static readonly DOWN = Vec3.create(0, -1, 0);\r\n\r\n    public static readonly RIGHT = Vec3.create(1, 0, 0);\r\n    public static readonly LEFT = Vec3.create(-1, 0, 0);\r\n\r\n    public static readonly FORWARD = Vec3.create(0, 0, 1);\r\n    public static readonly BACKWARD = Vec3.create(0, 0, -1);\r\n\r\n    public static readonly ONE = Vec3.create(1, 1, 1);\r\n    public static readonly ZERO = Vec3.create(0, 0, 0);\r\n\r\n    public get x()\r\n    {\r\n        return this[0];\r\n    }\r\n    public set x(value: number)\r\n    {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y()\r\n    {\r\n        return this[1];\r\n    }\r\n    set y(value: number)\r\n    {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z()\r\n    {\r\n        return this[2];\r\n    }\r\n    set z(value: number)\r\n    {\r\n        this[2] = value;\r\n    }\r\n\r\n    private static Recycle: Vec3[] = [];\r\n    public static create(x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        if (Vec3.Recycle && Vec3.Recycle.length > 0)\r\n        {\r\n            let item = Vec3.Recycle.pop() as Vec3;\r\n            item[0] = x;\r\n            item[1] = y;\r\n            item[2] = z;\r\n            return item;\r\n        } else\r\n        {\r\n            // let item=new Float32Array(3);\r\n            // item[0]=x;\r\n            // item[1]=y;\r\n            // item[2]=z;\r\n            let item = new Vec3(x, y, z);\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Vec3): Vec3\r\n    {\r\n        if (Vec3.Recycle.length > 0)\r\n        {\r\n            let item = Vec3.Recycle.pop() as Vec3;\r\n\r\n            Vec3.copy(from, item);\r\n            return item;\r\n        } else\r\n        {\r\n            //let item=new Float32Array(3);\r\n            let item = new Vec3(from[0], from[1], from[2]);\r\n            // item[0]=from[0];\r\n            // item[1]=from[1];\r\n            // item[2]=from[2];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Vec3)\r\n    {\r\n        Vec3.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems()\r\n    {\r\n        Vec3.Recycle.length = 0;\r\n    }\r\n\r\n    constructor(x: number = 0, y: number = 0, z: number = 0)\r\n    {\r\n        super(3);\r\n        this[0] = x;\r\n        this[1] = y;\r\n        this[2] = z;\r\n    }\r\n    /**\r\n     * Copy the values from one vec3 to another\r\n     *\r\n     * @param out the receiving vector\r\n     * @param src the source vector\r\n     * @returns out\r\n     */\r\n    public static copy(from: Vec3 | number[], out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = from[0];\r\n        out[1] = from[1];\r\n        out[2] = from[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static add(lhs: Vec3, rhs: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = lhs[0] + rhs[0];\r\n        out[1] = lhs[1] + rhs[1];\r\n        out[2] = lhs[2] + rhs[2];\r\n        return out;\r\n    }\r\n\r\n    public static toZero(a: Vec3)\r\n    {\r\n        a[0] = a[1] = a[2] = 0;\r\n    }\r\n\r\n    /**\r\n     * Subtracts vector b from vector a\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static subtract(lhs: Vec3, rhs: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = lhs[0] - rhs[0];\r\n        out[1] = lhs[1] - rhs[1];\r\n        out[2] = lhs[2] - rhs[2];\r\n        return out;\r\n    }\r\n    /**\r\n     * Multiplies two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Vec3, b: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = a[0] * b[0];\r\n        out[1] = a[1] * b[1];\r\n        out[2] = a[2] * b[2];\r\n        return out;\r\n    }\r\n\r\n    public static center(a: Vec3, b: Vec3, out: Vec3 = Vec3.create())\r\n    {\r\n        this.add(a, b, out);\r\n        this.scale(out, 0.5, out);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Divides two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static divide(a: Vec3, b: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = a[0] / b[0];\r\n        out[1] = a[1] / b[1];\r\n        out[2] = a[2] / b[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.ceil the components of a vec3\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a vector to ceil\r\n     * @returns {Vec3} out\r\n     */\r\n    public static ceil(out: Vec3 = Vec3.create(), a: Vec3): Vec3\r\n    {\r\n        out[0] = Math.ceil(a[0]);\r\n        out[1] = Math.ceil(a[1]);\r\n        out[2] = Math.ceil(a[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.floor the components of a vec3\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a vector to floor\r\n     * @returns {Vec3} out\r\n     */\r\n    public static floor(out: Vec3 = Vec3.create(), a: Vec3): Vec3\r\n    {\r\n        out[0] = Math.floor(a[0]);\r\n        out[1] = Math.floor(a[1]);\r\n        out[2] = Math.floor(a[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the minimum of two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static min(a: Vec3, b: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = Math.min(a[0], b[0]);\r\n        out[1] = Math.min(a[1], b[1]);\r\n        out[2] = Math.min(a[2], b[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the maximum of two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static max(out: Vec3 = Vec3.create(), a: Vec3, b: Vec3): Vec3\r\n    {\r\n        out[0] = Math.max(a[0], b[0]);\r\n        out[1] = Math.max(a[1], b[1]);\r\n        out[2] = Math.max(a[2], b[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Math.round the components of a vec3\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a vector to round\r\n     * @returns {Vec3} out\r\n     */\r\n    public static round(out: Vec3 = Vec3.create(), a: Vec3): Vec3\r\n    {\r\n        out[0] = Math.round(a[0]);\r\n        out[1] = Math.round(a[1]);\r\n        out[2] = Math.round(a[2]);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a vec3 by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     */\r\n    public static scale(a: Vec3, b: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two vec3's after scaling the second operand by a scalar value\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @param scale the amount to scale b by before adding\r\n     * @returns out\r\n     */\r\n    public static AddscaledVec(lhs: Vec3, rhs: Vec3, scale: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = lhs[0] + rhs[0] * scale;\r\n        out[1] = lhs[1] + rhs[1] * scale;\r\n        out[2] = lhs[2] + rhs[2] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the euclidian distance between two vec3's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns distance between a and b\r\n     */\r\n    public static distance(a: Vec3, b: Vec3): number\r\n    {\r\n        let x = b[0] - a[0];\r\n        let y = b[1] - a[1];\r\n        let z = b[2] - a[2];\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared euclidian distance between two vec3's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns squared distance between a and b\r\n     */\r\n    public static squaredDistance(a: Vec3, b: Vec3): number\r\n    {\r\n        let x = b[0] - a[0];\r\n        let y = b[1] - a[1];\r\n        let z = b[2] - a[2];\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a vec3\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     */\r\n    public static magnitude(a: Vec3): number\r\n    {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        return Math.sqrt(x * x + y * y + z * z);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared length of a vec3\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     */\r\n    public static squaredLength(a: Vec3): number\r\n    {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        return x * x + y * y + z * z;\r\n    }\r\n\r\n    /**\r\n     * Negates the components of a vec3\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to negate\r\n     * @returns out\r\n     */\r\n    public static negate(a: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        out[2] = -a[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns the inverse of the components of a vec3\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a vector to invert\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        out[0] = 1.0 / a[0];\r\n        out[1] = 1.0 / a[1];\r\n        out[2] = 1.0 / a[2];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Normalize a vec3\r\n     *\r\n     * @param out the receiving vector\r\n     * @param src vector to normalize\r\n     * @returns out\r\n     */\r\n    public static normalize(src: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let x = src[0];\r\n        let y = src[1];\r\n        let z = src[2];\r\n        let len = x * x + y * y + z * z;\r\n        if (len > 0)\r\n        {\r\n            //TODO: evaluate use of glm_invsqrt here?\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = src[0] * len;\r\n            out[1] = src[1] * len;\r\n            out[2] = src[2] * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two vec3's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     */\r\n    public static dot(a: Vec3, b: Vec3): number\r\n    {\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2];\r\n    }\r\n\r\n    /**\r\n     * Computes the cross product of two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @returns out\r\n     */\r\n    public static cross(lhs: Vec3, rhs: Vec3, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let ax = lhs[0],\r\n            ay = lhs[1],\r\n            az = lhs[2];\r\n        let bx = rhs[0],\r\n            by = rhs[1],\r\n            bz = rhs[2];\r\n\r\n        out[0] = ay * bz - az * by;\r\n        out[1] = az * bx - ax * bz;\r\n        out[2] = ax * by - ay * bx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two vec3's\r\n     *\r\n     * @param out the receiving vector\r\n     * @param lhs the first operand\r\n     * @param rhs the second operand\r\n     * @param lerp interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static lerp(lhs: Vec3, rhs: Vec3, lerp: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let ax = lhs[0];\r\n        let ay = lhs[1];\r\n        let az = lhs[2];\r\n        out[0] = ax + lerp * (rhs[0] - ax);\r\n        out[1] = ay + lerp * (rhs[1] - ay);\r\n        out[2] = az + lerp * (rhs[2] - az);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a hermite interpolation with two control points\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a the first operand\r\n     * @param {Vec3} b the second operand\r\n     * @param {Vec3} c the third operand\r\n     * @param {Vec3} d the fourth operand\r\n     * @param {number} t interpolation amount between the two inputs\r\n     * @returns {Vec3} out\r\n     */\r\n    public static hermite(a: Vec3, b: Vec3, c: Vec3, d: Vec3, t: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let factorTimes2 = t * t;\r\n        let factor1 = factorTimes2 * (2 * t - 3) + 1;\r\n        let factor2 = factorTimes2 * (t - 2) + t;\r\n        let factor3 = factorTimes2 * (t - 1);\r\n        let factor4 = factorTimes2 * (3 - 2 * t);\r\n\r\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a bezier interpolation with two control points\r\n     *\r\n     * @param {Vec3} out the receiving vector\r\n     * @param {Vec3} a the first operand\r\n     * @param {Vec3} b the second operand\r\n     * @param {Vec3} c the third operand\r\n     * @param {Vec3} d the fourth operand\r\n     * @param {number} t interpolation amount between the two inputs\r\n     * @returns {Vec3} out\r\n     */\r\n    public static bezier(a: Vec3, b: Vec3, c: Vec3, d: Vec3, t: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let inverseFactor = 1 - t;\r\n        let inverseFactorTimesTwo = inverseFactor * inverseFactor;\r\n        let factorTimes2 = t * t;\r\n        let factor1 = inverseFactorTimesTwo * inverseFactor;\r\n        let factor2 = 3 * t * inverseFactorTimesTwo;\r\n        let factor3 = 3 * factorTimes2 * inverseFactor;\r\n        let factor4 = factorTimes2 * t;\r\n\r\n        out[0] = a[0] * factor1 + b[0] * factor2 + c[0] * factor3 + d[0] * factor4;\r\n        out[1] = a[1] * factor1 + b[1] * factor2 + c[1] * factor3 + d[1] * factor4;\r\n        out[2] = a[2] * factor1 + b[2] * factor2 + c[2] * factor3 + d[2] * factor4;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a random vector with the given scale\r\n     *\r\n     * @param out the receiving vector\r\n     * @param [scale] Length of the resulting vector. If omitted, a unit vector will be returned\r\n     * @returns out\r\n     */\r\n    public static random(scale: number = 1, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        scale = scale || 1.0;\r\n\r\n        let r = Math.random() * 2.0 * Math.PI;\r\n        let z = Math.random() * 2.0 - 1.0;\r\n        let zScale = Math.sqrt(1.0 - z * z) * scale;\r\n\r\n        out[0] = Math.cos(r) * zScale;\r\n        out[1] = Math.sin(r) * zScale;\r\n        out[2] = z * scale;\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Transforms the vec3 with a mat3.\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m the 3x3 matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat3(out: Vec3 = Vec3.create(), a: vec3, m: mat3): vec3{\r\n    //     let x = a[0],\r\n    //     y = a[1],\r\n    //     z = a[2];\r\n    // out[0] = x * m[0] + y * m[3] + z * m[6];\r\n    // out[1] = x * m[1] + y * m[4] + z * m[7];\r\n    // out[2] = x * m[2] + y * m[5] + z * m[8];\r\n    // return out;\r\n    // }\r\n\r\n    // /**\r\n    //  * 转到mat4中\r\n    //  * Transforms the vec3 with a mat4.\r\n    //  * 4th vector component is implicitly '1'\r\n    //  *\r\n    //  * @param out the receiving vector\r\n    //  * @param a the vector to transform\r\n    //  * @param m matrix to transform with\r\n    //  * @returns out\r\n    //  */\r\n    // public static transformMat4(out: Vec3 = Vec3.create(), a: vec3, m: mat4): vec3{\r\n    //     let x = a[0],\r\n    //         y = a[1],\r\n    //         z = a[2];\r\n    //     let w = m[3] * x + m[7] * y + m[11] * z + m[15];\r\n    //     w = w || 1.0;\r\n    //     out[0] = (m[0] * x + m[4] * y + m[8] * z + m[12]) / w;\r\n    //     out[1] = (m[1] * x + m[5] * y + m[9] * z + m[13]) / w;\r\n    //     out[2] = (m[2] * x + m[6] * y + m[10] * z + m[14]) / w;\r\n    //     return out;\r\n    // }\r\n\r\n    /**\r\n     * Transforms the vec3 with a Quat\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to transform\r\n     * @param q Quaternion to transform with\r\n     * @returns out\r\n     */\r\n    public static transformQuat(a: Vec3, q: Quat, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        // benchmarks: http://jsperf.com/Quaternion-transform-vec3-implementations\r\n\r\n        let x = a[0],\r\n            y = a[1],\r\n            z = a[2];\r\n        let qx = q[0],\r\n            qy = q[1],\r\n            qz = q[2],\r\n            qw = q[3];\r\n\r\n        // calculate Quat * vec\r\n        let ix = qw * x + qy * z - qz * y;\r\n        let iy = qw * y + qz * x - qx * z;\r\n        let iz = qw * z + qx * y - qy * x;\r\n        let iw = -qx * x - qy * y - qz * z;\r\n\r\n        // calculate result * inverse Quat\r\n        out[0] = ix * qw + iw * -qx + iy * -qz - iz * -qy;\r\n        out[1] = iy * qw + iw * -qy + iz * -qx - ix * -qz;\r\n        out[2] = iz * qw + iw * -qz + ix * -qy - iy * -qx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotate a 3D vector around the x-axis\r\n     * @param out The receiving vec3\r\n     * @param a The vec3 point to rotate\r\n     * @param b The origin of the rotation\r\n     * @param c The angle of rotation\r\n     * @returns out\r\n     */\r\n    public static rotateX(a: Vec3, b: Vec3, c: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let p = [],\r\n            r = [];\r\n        //Translate point to the origin\r\n        p[0] = a[0] - b[0];\r\n        p[1] = a[1] - b[1];\r\n        p[2] = a[2] - b[2];\r\n\r\n        //perform rotation\r\n        r[0] = p[0];\r\n        r[1] = p[1] * Math.cos(c) - p[2] * Math.sin(c);\r\n        r[2] = p[1] * Math.sin(c) + p[2] * Math.cos(c);\r\n\r\n        //translate to correct position\r\n        out[0] = r[0] + b[0];\r\n        out[1] = r[1] + b[1];\r\n        out[2] = r[2] + b[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotate a 3D vector around the y-axis\r\n     * @param out The receiving vec3\r\n     * @param a The vec3 point to rotate\r\n     * @param b The origin of the rotation\r\n     * @param c The angle of rotation\r\n     * @returns out\r\n     */\r\n    public static rotateY(a: Vec3, b: Vec3, c: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let p = [],\r\n            r = [];\r\n        //Translate point to the origin\r\n        p[0] = a[0] - b[0];\r\n        p[1] = a[1] - b[1];\r\n        p[2] = a[2] - b[2];\r\n\r\n        //perform rotation\r\n        r[0] = p[2] * Math.sin(c) + p[0] * Math.cos(c);\r\n        r[1] = p[1];\r\n        r[2] = p[2] * Math.cos(c) - p[0] * Math.sin(c);\r\n\r\n        //translate to correct position\r\n        out[0] = r[0] + b[0];\r\n        out[1] = r[1] + b[1];\r\n        out[2] = r[2] + b[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotate a 3D vector around the z-axis\r\n     * @param out The receiving vec3\r\n     * @param a The vec3 point to rotate\r\n     * @param b The origin of the rotation\r\n     * @param c The angle of rotation\r\n     * @returns out\r\n     */\r\n    public static rotateZ(a: Vec3, b: Vec3, c: number, out: Vec3 = Vec3.create()): Vec3\r\n    {\r\n        let p = [],\r\n            r = [];\r\n        //Translate point to the origin\r\n        p[0] = a[0] - b[0];\r\n        p[1] = a[1] - b[1];\r\n        p[2] = a[2] - b[2];\r\n\r\n        //perform rotation\r\n        r[0] = p[0] * Math.cos(c) - p[1] * Math.sin(c);\r\n        r[1] = p[0] * Math.sin(c) + p[1] * Math.cos(c);\r\n        r[2] = p[2];\r\n\r\n        //translate to correct position\r\n        out[0] = r[0] + b[0];\r\n        out[1] = r[1] + b[1];\r\n        out[2] = r[2] + b[2];\r\n\r\n        return out;\r\n    }\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec3s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec3s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @param arg additional argument to pass to fn\r\n    //  * @returns a\r\n    //  * @function\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //                       fn: (a: vec3, b: vec3, arg: any) => void, arg: any): Float32Array;\r\n\r\n    // /**\r\n    //  * Perform some operation over an array of vec3s.\r\n    //  *\r\n    //  * @param a the array of vectors to iterate over\r\n    //  * @param stride Number of elements between the start of each vec3. If 0 assumes tightly packed\r\n    //  * @param offset Number of elements to skip at the beginning of the array\r\n    //  * @param count Number of vec3s to iterate over. If 0 iterates over entire array\r\n    //  * @param fn Function to call for each vector in the array\r\n    //  * @returns a\r\n    //  * @function\r\n    //  */\r\n    // public static forEach(a: Float32Array, stride: number, offset: number, count: number,\r\n    //                       fn: (a: vec3, b: vec3) => void): Float32Array;\r\n\r\n    /**\r\n     * Get the angle between two 3D vectors\r\n     * @param a The first operand\r\n     * @param b The second operand\r\n     * @returns The angle in radians\r\n     */\r\n    public static angle(a: Vec3, b: Vec3): number\r\n    {\r\n        let tempA = Vec3.clone(a);\r\n        let tempB = Vec3.clone(b);\r\n        // let tempA = vec3.fromValues(a[0], a[1], a[2]);\r\n        // let tempB = vec3.fromValues(b[0], b[1], b[2]);\r\n\r\n        Vec3.normalize(tempA, tempA);\r\n        Vec3.normalize(tempB, tempB);\r\n\r\n        let cosine = Vec3.dot(tempA, tempB);\r\n\r\n        if (cosine > 1.0)\r\n        {\r\n            return 0;\r\n        } else if (cosine < -1.0)\r\n        {\r\n            return Math.PI;\r\n        } else\r\n        {\r\n            return Math.acos(cosine);\r\n        }\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a vector\r\n     *\r\n     * @param a vector to represent as a string\r\n     * @returns string representation of the vector\r\n     */\r\n    public static str(a: Vec3): string\r\n    {\r\n        return \"vec3(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Vec3} a The first vector.\r\n     * @param {Vec3} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Vec3, b: Vec3): boolean\r\n    {\r\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2];\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same position.\r\n     *\r\n     * @param {Vec3} a The first vector.\r\n     * @param {Vec3} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Vec3, b: Vec3): boolean\r\n    {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2];\r\n        return Math.abs(a0 - b0) <= EPSILON && Math.abs(a1 - b1) <= EPSILON && Math.abs(a2 - b2) <= EPSILON;\r\n    }\r\n}\r\n","import { Vec3 } from \"../mathD/vec3\";\r\n\r\nexport class Plane {\r\n    //ax+by+cz+d=0;\r\n    normal: Vec3 = Vec3.create(0, 1, 0);\r\n    constant: number = 0;\r\n\r\n    distanceToPoint(point: Vec3): number {\r\n        return Vec3.dot(point, this.normal) + this.constant;\r\n    }\r\n\r\n    copy(to: Plane) {\r\n        Vec3.copy(this.normal, to.normal);\r\n        to.constant = this.constant;\r\n    }\r\n\r\n    setComponents(nx: number, ny: number, nz: number, ds: number) {\r\n        this.normal[0] = nx;\r\n        this.normal[1] = ny;\r\n        this.normal[2] = nz;\r\n        let inverseNormalLength = 1.0 / Vec3.magnitude(this.normal);\r\n        Vec3.scale(this.normal, inverseNormalLength, this.normal);\r\n        this.constant = ds * inverseNormalLength;\r\n    }\r\n}\r\n","export enum VertexAttEnum\r\n{\r\n    POSITION = \"position\",\r\n    TEXCOORD_0 = \"uv\",\r\n    COLOR_0 = \"color\",\r\n    NORMAL = \"normal\",\r\n    TANGENT = \"tangent\",\r\n    TEXCOORD_1 = \"uv1\",\r\n    TEXCOORD_2 = \"uv2\",\r\n    WEIGHTS_0 = \"skinWeight\",\r\n    JOINTS_0 = \"skinIndex\"\r\n}\r\n\r\n\r\nexport namespace VertexAttEnum\r\n{\r\n    export function fromShaderAttName(name: string): VertexAttEnum\r\n    {\r\n        //TODO\r\n        return name as any;\r\n    }\r\n    let locationId = 0;\r\n    export function regist(name: string)\r\n    {\r\n        attLocationMap[name] = locationId++;\r\n    }\r\n    let attLocationMap: { [type: string]: number } = {};\r\n    {\r\n        regist(VertexAttEnum.POSITION);\r\n        regist(VertexAttEnum.TEXCOORD_0);\r\n        regist(VertexAttEnum.COLOR_0);\r\n        regist(VertexAttEnum.NORMAL);\r\n        regist(VertexAttEnum.TANGENT);\r\n        regist(VertexAttEnum.JOINTS_0);\r\n        regist(VertexAttEnum.WEIGHTS_0);\r\n        regist(VertexAttEnum.TEXCOORD_1);\r\n        regist(VertexAttEnum.TEXCOORD_2);\r\n    }\r\n    export function toShaderLocation(type: VertexAttEnum | string)\r\n    {\r\n        let location = attLocationMap[type];\r\n        if (location == null)\r\n        {\r\n            console.warn(`regist new attribute Type: ${type}`);\r\n            regist(type);\r\n        }\r\n        return attLocationMap[type];\r\n    }\r\n}","import { Vec3 } from \"../mathD/vec3\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { VertexAttEnum } from \"../webgl/VertexAttEnum\";\r\nimport { VertexArray } from \"../webgl/VertextArray\";\r\nimport { TypedArray } from \"../core/TypedArray\";\r\n\r\nnamespace Private\r\n{\r\n    export const min = Vec3.create(-999999, -999999, -999999);\r\n    export const max = Vec3.create(999999, 999999, 999999);\r\n\r\n}\r\n\r\nexport class Bounds\r\n{\r\n    max: Vec3 = Vec3.create();\r\n    min: Vec3 = Vec3.create();\r\n    // centerPoint: Vec3 = Vec3.create();\r\n    private _center: Vec3 = Vec3.create();\r\n    get centerPoint()\r\n    {\r\n        Vec3.center(this.min, this.max, this._center);\r\n        return this._center;\r\n    }\r\n    setMaxPoint(pos: Vec3)\r\n    {\r\n        Vec3.copy(pos, this.max);\r\n    }\r\n    setMinPoint(pos: Vec3)\r\n    {\r\n        Vec3.copy(pos, this.min);\r\n    }\r\n\r\n    setFromPoints(pos: Vec3[]): Bounds\r\n    {\r\n        for (let key in pos)\r\n        {\r\n            Vec3.min(this.min, pos[key], this.min);\r\n            Vec3.max(this.max, pos[key], this.max);\r\n        }\r\n        // Vec3.center(this.minPoint, this.maxPoint, this.centerPoint);\r\n        return this;\r\n    }\r\n\r\n    static fromVertexArray(vertexArr: VertexArray)\r\n    {\r\n        const { vertexAttributes } = vertexArr;\r\n        return Bounds.fromTypedArray(vertexAttributes[VertexAttEnum.POSITION]?.vertexBuffer.typedArray);\r\n    }\r\n\r\n    static fromTypedArray(positions: TypedArray)\r\n    {\r\n        const bb = new Bounds();\r\n        bb.setMinPoint(Private.max);\r\n        bb.setMaxPoint(Private.min);\r\n\r\n        for (let i = 0; i < positions.length; i += 3)\r\n        {\r\n            const x = positions[i];\r\n            const y = positions[i + 1];\r\n            const z = positions[i + 2];\r\n            if (bb.min.x > x)\r\n            {\r\n                bb.min.x = x;\r\n            }\r\n            if (bb.max.x < x)\r\n            {\r\n                bb.max.x = x;\r\n            }\r\n            if (bb.min.y > y)\r\n            {\r\n                bb.min.y = y;\r\n            }\r\n            if (bb.max.y < y)\r\n            {\r\n                bb.max.y = y;\r\n            }\r\n            if (bb.min.z > z)\r\n            {\r\n                bb.min.z = z;\r\n            }\r\n            if (bb.max.z < z)\r\n            {\r\n                bb.max.z = z;\r\n            }\r\n        }\r\n        return bb\r\n    }\r\n\r\n    addAABB(box: Bounds)\r\n    {\r\n        Vec3.min(this.min, box.min, this.min);\r\n        Vec3.max(this.max, box.max, this.max);\r\n        // Vec3.center(this.minPoint, this.maxPoint, this.centerPoint);\r\n        return this;\r\n    }\r\n\r\n    beEmpty(): boolean\r\n    {\r\n        return (\r\n            this.min[0] > this.max[0] ||\r\n            this.min[1] > this.max[1] ||\r\n            this.min[2] > this.max[2]\r\n        );\r\n    }\r\n\r\n    containPoint(point: Vec3): boolean\r\n    {\r\n        return (\r\n            point[0] >= this.min[0] &&\r\n            point[0] <= this.max[0] &&\r\n            point[1] >= this.min[1] &&\r\n            point[1] <= this.max[1] &&\r\n            point[2] >= this.min[2] &&\r\n            point[2] <= this.max[2]\r\n        );\r\n    }\r\n\r\n    intersect(box: Bounds): boolean\r\n    {\r\n        let interMin = box.min;\r\n        let interMax = box.max;\r\n\r\n        if (this.min[0] > interMax[0]) return false;\r\n        if (this.min[1] > interMax[1]) return false;\r\n        if (this.min[2] > interMax[2]) return false;\r\n        if (this.max[0] > interMin[0]) return false;\r\n        if (this.max[1] > interMin[1]) return false;\r\n        if (this.max[2] > interMin[2]) return false;\r\n\r\n        return true;\r\n    }\r\n\r\n    applyMatrix(mat: Mat4)\r\n    {\r\n        if (this.beEmpty()) return;\r\n        let min = Vec3.create();\r\n        let max = Vec3.create();\r\n        min[0] += mat[12];\r\n        max[0] += mat[12];\r\n        min[1] += mat[13];\r\n        max[1] += mat[13];\r\n        min[2] += mat[14];\r\n        max[2] += mat[14];\r\n\r\n        for (let i = 0; i < 3; i++)\r\n        {\r\n            for (let k = 0; k < 3; k++)\r\n            {\r\n                if (mat[k + i * 4] > 0)\r\n                {\r\n                    min[i] += mat[k + i * 4] * this.min[i];\r\n                    max[i] += mat[k + i * 4] * this.max[i];\r\n                } else\r\n                {\r\n                    min[i] += mat[k + i * 4] * this.max[i];\r\n                    max[i] += mat[k + i * 4] * this.min[i];\r\n                }\r\n            }\r\n        }\r\n        Vec3.recycle(this.min);\r\n        Vec3.recycle(this.max);\r\n        this.min = min;\r\n        this.max = max;\r\n    }\r\n}\r\n\r\nexport class BoundingSphere\r\n{\r\n    center: Vec3 = Vec3.create();\r\n    radius: number = 0;\r\n\r\n    applyMatrix(mat: Mat4)\r\n    {\r\n        Mat4.transformPoint(this.center, mat, this.center);\r\n        this.radius = this.radius * Mat4.getMaxScaleOnAxis(mat);\r\n    }\r\n    setFromPoints(points: Vec3[], center: Vec3 = null)\r\n    {\r\n        if (center != null)\r\n        {\r\n            Vec3.copy(center, this.center);\r\n        } else\r\n        {\r\n            let center = new Bounds().setFromPoints(points).centerPoint;\r\n            Vec3.copy(center, this.center);\r\n        }\r\n        for (let i = 0; i < points.length; i++)\r\n        {\r\n            let dis = Vec3.distance(points[i], this.center);\r\n            if (dis > this.radius)\r\n            {\r\n                this.radius = dis;\r\n            }\r\n        }\r\n    }\r\n\r\n    static fromVertexArray(vertexArr: VertexArray, center: Vec3 = null)\r\n    {\r\n        const { vertexAttributes } = vertexArr;\r\n        return BoundingSphere.fromTypedArray(vertexAttributes[VertexAttEnum.POSITION]?.vertexBuffer.typedArray);\r\n    }\r\n\r\n    static fromTypedArray(positions: TypedArray, center: Vec3 = null)\r\n    {\r\n        const bb = new BoundingSphere();\r\n        if (center != null)\r\n        {\r\n            Vec3.copy(center, bb.center);\r\n        } else\r\n        {\r\n            center = Bounds.fromTypedArray(positions).centerPoint;\r\n            Vec3.copy(center, bb.center);\r\n        }\r\n        let x, y, z, xx, yy, zz, dis\r\n        for (let i = 0; i < positions.length; i += 3)\r\n        {\r\n            x = positions[i];\r\n            y = positions[i + 1];\r\n            z = positions[i + 2];\r\n            xx = x - center.x;\r\n            yy = y - center.y;\r\n            zz = z - center.z;\r\n            dis = Math.sqrt(x * x + y * y + z * z);\r\n            if (dis > bb.radius)\r\n            {\r\n                bb.radius = dis;\r\n            }\r\n        }\r\n        return bb;\r\n    }\r\n\r\n    copyTo(to: BoundingSphere)\r\n    {\r\n        Vec3.copy(this.center, to.center);\r\n        to.radius = this.radius;\r\n    }\r\n\r\n    clone(): BoundingSphere\r\n    {\r\n        let newSphere = BoundingSphere.create();\r\n        this.copyTo(newSphere);\r\n        return newSphere;\r\n    }\r\n    private static pool: BoundingSphere[] = [];\r\n    static create()\r\n    {\r\n        if (this.pool.length > 0)\r\n        {\r\n            return this.pool.pop();\r\n        } else\r\n        {\r\n            return new BoundingSphere();\r\n        }\r\n    }\r\n    static recycle(item: BoundingSphere)\r\n    {\r\n        this.pool.push(item);\r\n    }\r\n\r\n    static fromBoundingBox(box: BoundingBox, result: BoundingSphere = new BoundingSphere())\r\n    {\r\n        result.center = Vec3.clone(box.center);\r\n        result.radius = Vec3.magnitude(box.halfSize);\r\n        return result;\r\n    }\r\n}\r\n\r\nexport class BoundingBox\r\n{\r\n    center: Vec3 = Vec3.create();\r\n    halfSize: Vec3 = Vec3.create(1, 1, 1);\r\n\r\n    private static pool: BoundingBox[] = [];\r\n    static create()\r\n    {\r\n        if (this.pool.length > 0)\r\n        {\r\n            return this.pool.pop();\r\n        } else\r\n        {\r\n            return new BoundingBox();\r\n        }\r\n    }\r\n    static recycle(item: BoundingBox)\r\n    {\r\n        this.pool.push(item);\r\n    }\r\n}\r\n","import { Plane } from \"./Plane\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { BoundingSphere } from \"./Bounds\";\r\n\r\nexport class Frustum\r\n{\r\n    planes: Plane[] = [];\r\n\r\n    constructor(\r\n        p0: Plane = null,\r\n        p1: Plane = null,\r\n        p2: Plane = null,\r\n        p3: Plane = null,\r\n        p4: Plane = null,\r\n        p5: Plane = null,\r\n    )\r\n    {\r\n        this.planes[0] = p0 != null ? p0 : new Plane();\r\n        this.planes[1] = p1 != null ? p1 : new Plane();\r\n        this.planes[2] = p2 != null ? p2 : new Plane();\r\n        this.planes[3] = p3 != null ? p3 : new Plane();\r\n        this.planes[4] = p4 != null ? p4 : new Plane();\r\n        this.planes[5] = p5 != null ? p5 : new Plane();\r\n    }\r\n    set(p0: Plane, p1: Plane, p2: Plane, p3: Plane, p4: Plane, p5: Plane)\r\n    {\r\n        this.planes[0].copy(p0);\r\n        this.planes[1].copy(p1);\r\n        this.planes[2].copy(p2);\r\n        this.planes[3].copy(p3);\r\n        this.planes[4].copy(p4);\r\n        this.planes[5].copy(p5);\r\n    }\r\n    setFromMatrix(me: Mat4): Frustum\r\n    {\r\n        let planes = this.planes;\r\n        let me0 = me[0],\r\n            me1 = me[1],\r\n            me2 = me[2],\r\n            me3 = me[3];\r\n        let me4 = me[4],\r\n            me5 = me[5],\r\n            me6 = me[6],\r\n            me7 = me[7];\r\n        let me8 = me[8],\r\n            me9 = me[9],\r\n            me10 = me[10],\r\n            me11 = me[11];\r\n        let me12 = me[12],\r\n            me13 = me[13],\r\n            me14 = me[14],\r\n            me15 = me[15];\r\n\r\n        planes[0].setComponents(me3 - me0, me7 - me4, me11 - me8, me15 - me12);\r\n        planes[1].setComponents(me3 + me0, me7 + me4, me11 + me8, me15 + me12);\r\n        planes[2].setComponents(me3 + me1, me7 + me5, me11 + me9, me15 + me13);\r\n        planes[3].setComponents(me3 - me1, me7 - me5, me11 - me9, me15 - me13);\r\n        planes[4].setComponents(me3 - me2, me7 - me6, me11 - me10, me15 - me14);\r\n        planes[5].setComponents(me3 + me2, me7 + me6, me11 + me10, me15 + me14);\r\n\r\n        return this;\r\n    }\r\n    /**\r\n     * 和包围球检测相交\r\n     * @param sphere 包围球\r\n     * @param mat 用于变换包围球\r\n     */\r\n    containSphere(sphere: BoundingSphere, mat: Mat4 = null): boolean\r\n    {\r\n        let planes = this.planes;\r\n        if (mat != null)\r\n        {\r\n            let clonesphere = sphere.clone();\r\n            clonesphere.applyMatrix(mat);\r\n\r\n            let center = clonesphere.center;\r\n            let negRadius = -clonesphere.radius;\r\n            for (let i = 0; i < 6; i++)\r\n            {\r\n                let distance: number = planes[i].distanceToPoint(center);\r\n                if (distance < negRadius)\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n            BoundingSphere.recycle(sphere);\r\n        } else\r\n        {\r\n            let center = sphere.center;\r\n            let negRadius = -sphere.radius;\r\n            for (let i = 0; i < 6; i++)\r\n            {\r\n                let distance: number = planes[i].distanceToPoint(center);\r\n                if (distance < negRadius)\r\n                {\r\n                    return false;\r\n                }\r\n            }\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","export function createGuid()\r\n{\r\n    return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c)\r\n    {\r\n        var r = Math.random() * 16 | 0,\r\n            v = (c == 'x') ? r : (r & 0x3 | 0x8);\r\n        return v.toString(16);\r\n    });\r\n}\r\nlet tempStr: string;\r\nexport function packString(array: string[])\r\n{\r\n    tempStr = \"\";\r\n    array.forEach(item => { tempStr.concat })\r\n}","import { createGuid } from \"./Utils\";\r\n\r\nexport class UniqueObject\r\n{\r\n    readonly id: string;\r\n    protected ctorName: string;\r\n    constructor()\r\n    {\r\n        this.id = createGuid();\r\n        this.ctorName = this.constructor.name;\r\n    }\r\n}","import { Rect } from \"../mathD/rect\";\r\nimport { Color } from \"../mathD/color\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { Screen } from \"../core/Screen\";\r\nimport { Frustum } from \"./Frustum\";\r\nimport { Transform } from \"../core/Transform\";\r\nimport { Vec3 } from \"../mathD/vec3\";\r\nimport { UniqueObject } from \"../core/UniqueObject\";\r\n\r\nexport enum ProjectionEnum\r\n{\r\n    PERSPECTIVE,\r\n    ORTHOGRAPH,\r\n}\r\n\r\nexport enum ClearEnum\r\n{\r\n    COLOR = 0b001,\r\n    DEPTH = 0b010,\r\n    STENCIL = 0b100,\r\n    NONE = 0b00,\r\n}\r\nexport class Camera extends UniqueObject\r\n{\r\n    node: Transform;\r\n    private _projectionType: ProjectionEnum = ProjectionEnum.PERSPECTIVE;\r\n    get projectionType() { return this._projectionType }\r\n    set projectionType(type: ProjectionEnum) { this._projectionType = type; this.projectMatBedirty = true; }\r\n\r\n    //perspective 透视投影\r\n    private _fov: number = Math.PI * 0.25; //透视投影的fov//verticle field of view\r\n    get fov() { return this._fov };\r\n    set fov(value: number) { this._fov = value; this.projectMatBedirty = true; };\r\n\r\n    /**\r\n     * height\r\n     */\r\n    private _size: number = 2;\r\n    get size() { return this._size };\r\n    set size(value: number) { this._size = value; this.projectMatBedirty = true };\r\n\r\n    private _near: number = 0.1;\r\n    get near(): number { return this._near; }\r\n    set near(val: number)\r\n    {\r\n        if (this._projectionType == ProjectionEnum.PERSPECTIVE && val < 0.01)\r\n        {\r\n            val = 0.01;\r\n        }\r\n        if (val >= this.far) val = this.far - 0.01;\r\n        this._near = val;\r\n        this.projectMatBedirty = true;\r\n    }\r\n\r\n    private _far: number = 1000;\r\n    get far(): number { return this._far; }\r\n    set far(val: number)\r\n    {\r\n        if (val <= this.near) val = this.near + 0.01;\r\n        this._far = val;\r\n        this.projectMatBedirty = true;\r\n    }\r\n\r\n    private _viewport: Rect = Rect.create(0, 0, 1, 1);\r\n    get viewport() { return this._viewport }\r\n    set viewport(value: Rect) { Rect.copy(value, this._viewport); this.projectMatBedirty = true }\r\n\r\n\r\n    backgroundColor: Color = Color.create(0.3, 0.3, 0.3, 1);\r\n    enableClearColor = true;\r\n    dePthValue: number = 1.0;\r\n    enableClearDepth: boolean = true;\r\n    stencilValue: number = 0;\r\n    enableClearStencil = false;\r\n    priority: number = 0;\r\n    cullingMask: CullingMask = CullingMask.default;\r\n\r\n    private _aspect: number = 16 / 9;\r\n    get aspect(): number { return this._aspect; }\r\n    set aspect(aspect: number) { this._aspect = aspect; this.projectMatBedirty = true; }\r\n    /**\r\n     * 计算相机投影矩阵\r\n     */\r\n    private _Projectmatrix: Mat4 = Mat4.create();\r\n    get projectMatrix(): Mat4\r\n    {\r\n        if (this.projectMatBedirty)\r\n        {\r\n            if (this._projectionType == ProjectionEnum.PERSPECTIVE)\r\n            {\r\n                Mat4.projectPerspectiveLH(\r\n                    this._fov,\r\n                    (this._aspect * this._viewport.width) / this._viewport.height,\r\n                    this.near,\r\n                    this.far,\r\n                    this._Projectmatrix,\r\n                );\r\n            } else\r\n            {\r\n                Mat4.projectOrthoLH(\r\n                    (this._size * (this._aspect * this._viewport.width)) / this._viewport.height,\r\n                    this._size,\r\n                    this.near,\r\n                    this.far,\r\n                    this._Projectmatrix,\r\n                );\r\n            }\r\n            this.projectMatBedirty = false;\r\n        }\r\n        return this._Projectmatrix;\r\n    }\r\n\r\n    private _viewProjectMatrix: Mat4 = Mat4.create();\r\n    get viewProjectMatrix(): Mat4\r\n    {\r\n        if (this.projectMatBedirty || this.node.worldMatrixBedirty)\r\n        {\r\n            Mat4.multiply(this.projectMatrix, this.viewMatrix, this._viewProjectMatrix);\r\n        }\r\n        return this._viewProjectMatrix;\r\n    }\r\n    private _viewMatrix: Mat4 = Mat4.create();\r\n    get viewMatrix(): Mat4\r\n    {\r\n        if (this.node.worldMatrixBedirty)\r\n        {\r\n            let camworld = this.node.worldMatrix;\r\n            //视矩阵刚好是摄像机世界矩阵的逆\r\n            Mat4.invert(camworld, this._viewMatrix);\r\n        }\r\n        return this._viewMatrix;\r\n    }\r\n    private projectMatBedirty = true;\r\n    /**\r\n     * this._frustum.setFromMatrix(this.viewProjectMatrix);\r\n     */\r\n    private _frustum = new Frustum();\r\n    beActiveFrustum = true;\r\n    get frustum() { return this._frustum; }\r\n\r\n    get worldPos() { return this.node.worldPosition; }\r\n\r\n    private _forward: Vec3 = Vec3.create();\r\n    get forwardInword()\r\n    {\r\n        return this.node.getForwardInWorld(this._forward);\r\n    }\r\n\r\n    constructor()\r\n    {\r\n        super();\r\n        Object.defineProperty(this._viewport, \"x\", {\r\n            get: () => { return this._viewport[0] },\r\n            set: (value: number) => { this._viewport[0] = value; this.projectMatBedirty = true; }\r\n        })\r\n        Object.defineProperty(this._viewport, \"y\", {\r\n            get: () => { return this._viewport[1] },\r\n            set: (value: number) => { this._viewport[1] = value; this.projectMatBedirty = true; }\r\n        })\r\n        Object.defineProperty(this._viewport, \"z\", {\r\n            get: () => { return this._viewport[2] },\r\n            set: (value: number) => { this._viewport[2] = value; this.projectMatBedirty = true; }\r\n        })\r\n        Object.defineProperty(this._viewport, \"w\", {\r\n            get: () => { return this._viewport[3] },\r\n            set: (value: number) => { this._viewport[3] = value; this.projectMatBedirty = true; }\r\n        })\r\n    }\r\n}\r\n\r\n/**\r\n * 渲染mask枚举\r\n */\r\nexport enum CullingMask\r\n{\r\n    ui = 0x00000001,\r\n    default = 0x00000002,\r\n    editor = 0x00000004,\r\n    model = 0x00000008,\r\n    everything = 0xffffffff,\r\n}","//每个组件占据一个二级制位Bitkey, 每个system都有关联的component，组成一个UniteBitkey,每个entity的components同样会组成一个UniteBitkey;\r\n// 通过UniteBitkey 二进制比对来快速检验 entity是否含有system所关心的组件;\r\n//enity addcomponent时候将检查 相关system是否要管理此组件,关心的话就add到system中,这样就避免system的query过程.\r\n\r\nexport interface Icomponent {\r\n    entity: Ientity;\r\n}\r\n\r\nexport interface Ientity {\r\n    _uniteBitkey: UniteBitkey;\r\n    addComponent(comp: string): Icomponent;\r\n    removeComponent(comp: string): void;\r\n}\r\nexport interface Isystem {\r\n    readonly caredComps: string[];\r\n    readonly uniteBitkey: UniteBitkey;\r\n    // entities: Ientity[];\r\n    tryAddEntity(entity: Ientity): void;\r\n    tryRemoveEntity(entity: Ientity): void;\r\n    update(deltaTime: number): void;\r\n}\r\n\r\nexport class Ecs {\r\n    private static registedcomps: { [name: string]: { ctr: any, bitKey: Bitkey, relatedSystem: Isystem[] } } = {};\r\n    static registeComp = (comp: Function) => {\r\n        let target = comp.prototype;\r\n        let compName = target.constructor.name as string;\r\n        if (Ecs.registedcomps[compName] == null) {\r\n            Ecs.registedcomps[compName] = { ctr: target.constructor, bitKey: Bitkey.create(), relatedSystem: [] }\r\n        } else {\r\n            throw new Error(\"重复注册组件: \" + compName);\r\n        }\r\n    }\r\n\r\n    static addComp(entity: Ientity, comp: string): Icomponent {\r\n        let compInfo = this.registedcomps[comp];\r\n        if (compInfo == null) return;\r\n\r\n        let newcomp = new compInfo.ctr() as Icomponent;\r\n        newcomp.entity = entity;\r\n        (entity as any)[comp] = newcomp;\r\n        entity._uniteBitkey.addBitKey(compInfo.bitKey);\r\n\r\n        let relatedSystem = compInfo.relatedSystem;\r\n        relatedSystem.forEach(item => {\r\n            if (entity._uniteBitkey.containe(item.uniteBitkey)) {\r\n                item.tryAddEntity(entity);\r\n            }\r\n        });\r\n        return newcomp;\r\n    }\r\n\r\n    static removeComp(entity: Ientity, comp: string) {\r\n        let component = (entity as any)[comp];\r\n        if (component != null) {\r\n            let relatedSystem = this.registedcomps[comp].relatedSystem;\r\n            relatedSystem.forEach(item => {\r\n                item.tryRemoveEntity(entity);\r\n\r\n            })\r\n        }\r\n    }\r\n\r\n    private static systems: Isystem[] = [];\r\n    static addSystem(system: Isystem) {\r\n        this.systems.push(system);\r\n        system.caredComps.forEach(item => {\r\n            let info = this.registedcomps[item];\r\n            system.uniteBitkey.addBitKey(info.bitKey);\r\n            info.relatedSystem.push(system);\r\n        });\r\n    }\r\n\r\n    static update(deltaTime: number) {\r\n        this.systems.forEach(item => item.update(deltaTime))\r\n    }\r\n}\r\n\r\n\r\n// 每个组件占一个二进制位，50个二进制位作为一个group，如果component数量超过50的话。\r\n// Reference:https://stackoverflow.com/questions/2802957/number-of-bits-in-javascript-numbers\r\n\r\nexport class Bitkey {\r\n    private static currentGroupIndex = 0;\r\n    private static currentItemIndex = 0;\r\n    readonly groupIndex: number;\r\n    private itemIndex: number;\r\n    readonly value: number;\r\n    private constructor(groupIndex: number, itemIndex: number) {\r\n        this.groupIndex = groupIndex;\r\n        this.itemIndex = itemIndex;\r\n        this.value = 1 << itemIndex;\r\n    }\r\n    static create() {\r\n        let newKey = this.currentItemIndex++;\r\n        if (newKey > 50) {\r\n            this.currentGroupIndex++;\r\n            this.currentItemIndex = 0;\r\n        }\r\n        return new Bitkey(this.currentGroupIndex, this.currentItemIndex);\r\n    }\r\n}\r\n\r\nexport class UniteBitkey {\r\n    private keysMap: { [groupKey: number]: number } = {};\r\n    addBitKey(key: Bitkey) {\r\n        let groupKey = key.groupIndex;\r\n        if (this.keysMap[groupKey] == null) {\r\n            this.keysMap[groupKey] = 0;\r\n        }\r\n        let currentValue = this.keysMap[groupKey];\r\n        this.keysMap[groupKey] = currentValue | key.value;\r\n    }\r\n    removeBitKey(key: Bitkey) {\r\n        let groupKey = key.groupIndex;\r\n        let currentValue = this.keysMap[groupKey];\r\n        this.keysMap[groupKey] = currentValue & ~key.value;\r\n    }\r\n\r\n    containe(otherKey: UniteBitkey) {\r\n        let keys = Object.keys(otherKey.keysMap);\r\n        let key, otherValue, thisValue, becontained\r\n        for (let i = 0; i < keys.length; i++) {\r\n            key = keys[i] as any;\r\n            otherValue = otherKey.keysMap[key];\r\n            thisValue = this.keysMap[key];\r\n            becontained = thisValue != null && ((otherValue & thisValue) == otherValue);\r\n            if (!becontained) return false;\r\n        }\r\n        return true;\r\n    }\r\n}\r\n","import { Mat4 } from \"./mat4\";\r\nimport { Vec2 } from \"./vec2\";\r\nimport { Mat2d } from \"./mat2d\";\r\nimport { EPSILON } from \"./common\";\r\nimport { Quat } from \"./quat\";\r\n\r\nexport class Mat3 extends Float32Array {\r\n    private static Recycle: Mat3[] = [];\r\n    public static create(): Mat3 {\r\n        if (Mat3.Recycle && Mat3.Recycle.length > 0) {\r\n            let item = Mat3.Recycle.pop();\r\n            Mat3.identity(item);\r\n            return item;\r\n        } else {\r\n            let item = new Float32Array(9);\r\n            item[0] = 1;\r\n            item[4] = 1;\r\n            item[8] = 1;\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Mat3): Mat3 {\r\n        if (Mat3.Recycle.length > 0) {\r\n            let item = Mat3.Recycle.pop();\r\n            Mat3.copy(from, item);\r\n            return item;\r\n        } else {\r\n            let out = new Float32Array(9);\r\n            out[0] = from[0];\r\n            out[1] = from[1];\r\n            out[2] = from[2];\r\n            out[3] = from[3];\r\n            out[4] = from[4];\r\n            out[5] = from[5];\r\n            out[6] = from[6];\r\n            out[7] = from[7];\r\n            out[8] = from[8];\r\n            return out;\r\n        }\r\n    }\r\n    public static recycle(item: Mat3) {\r\n        Mat3.Recycle.push(item);\r\n    }\r\n    public static disposeRecycledItems() {\r\n        Mat3.Recycle.length = 0;\r\n    }\r\n    constructor() {\r\n        super(9);\r\n        this[0] = 1;\r\n        this[4] = 1;\r\n        this[8] = 1;\r\n    }\r\n\r\n    /**\r\n     * Copies the upper-left 3x3 values into the given mat3.\r\n     *\r\n     * @param {Mat3} out the receiving 3x3 matrix\r\n     * @param {mat4} a   the source 4x4 matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromMat4(a: Mat4, out: Mat3) {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[4];\r\n        out[4] = a[5];\r\n        out[5] = a[6];\r\n        out[6] = a[8];\r\n        out[7] = a[9];\r\n        out[8] = a[10];\r\n        return out;\r\n    }\r\n    /**\r\n     * Copy the values from one mat3 to another\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static copy(a: Mat3, out: Mat3) {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        out[4] = a[4];\r\n        out[5] = a[5];\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Set a mat3 to the identity matrix\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static identity(out: Mat3) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Transpose the values of a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static transpose(a: Mat3, out: Mat3) {\r\n        // If we are transposing ourselves we can skip a few steps but have to cache some values\r\n        if (out === a) {\r\n            let a01 = a[1],\r\n                a02 = a[2],\r\n                a12 = a[5];\r\n            out[1] = a[3];\r\n            out[2] = a[6];\r\n            out[3] = a01;\r\n            out[5] = a[7];\r\n            out[6] = a02;\r\n            out[7] = a12;\r\n        } else {\r\n            out[0] = a[0];\r\n            out[1] = a[3];\r\n            out[2] = a[6];\r\n            out[3] = a[1];\r\n            out[4] = a[4];\r\n            out[5] = a[7];\r\n            out[6] = a[2];\r\n            out[7] = a[5];\r\n            out[8] = a[8];\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Inverts a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static invert(a: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        let b01 = a22 * a11 - a12 * a21;\r\n        let b11 = -a22 * a10 + a12 * a20;\r\n        let b21 = a21 * a10 - a11 * a20;\r\n\r\n        // Calculate the determinant\r\n        let det = a00 * b01 + a01 * b11 + a02 * b21;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = b01 * det;\r\n        out[1] = (-a22 * a01 + a02 * a21) * det;\r\n        out[2] = (a12 * a01 - a02 * a11) * det;\r\n        out[3] = b11 * det;\r\n        out[4] = (a22 * a00 - a02 * a20) * det;\r\n        out[5] = (-a12 * a00 + a02 * a10) * det;\r\n        out[6] = b21 * det;\r\n        out[7] = (-a21 * a00 + a01 * a20) * det;\r\n        out[8] = (a11 * a00 - a01 * a10) * det;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the adjugate of a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Mat3} out\r\n     */\r\n    public static adjoint(a: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        out[0] = a11 * a22 - a12 * a21;\r\n        out[1] = a02 * a21 - a01 * a22;\r\n        out[2] = a01 * a12 - a02 * a11;\r\n        out[3] = a12 * a20 - a10 * a22;\r\n        out[4] = a00 * a22 - a02 * a20;\r\n        out[5] = a02 * a10 - a00 * a12;\r\n        out[6] = a10 * a21 - a11 * a20;\r\n        out[7] = a01 * a20 - a00 * a21;\r\n        out[8] = a00 * a11 - a01 * a10;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the determinant of a mat3\r\n     *\r\n     * @param {Mat3} a the source matrix\r\n     * @returns {Number} determinant of a\r\n     */\r\n    public static determinant(a: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        return a00 * (a22 * a11 - a12 * a21) + a01 * (-a22 * a10 + a12 * a20) + a02 * (a21 * a10 - a11 * a20);\r\n    }\r\n\r\n    /**\r\n     * Multiplies two mat3's\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @returns {Mat3} out\r\n     */\r\n    public static multiply(a: Mat3, b: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2];\r\n        let a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5];\r\n        let a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8];\r\n\r\n        let b00 = b[0],\r\n            b01 = b[1],\r\n            b02 = b[2];\r\n        let b10 = b[3],\r\n            b11 = b[4],\r\n            b12 = b[5];\r\n        let b20 = b[6],\r\n            b21 = b[7],\r\n            b22 = b[8];\r\n\r\n        out[0] = b00 * a00 + b01 * a10 + b02 * a20;\r\n        out[1] = b00 * a01 + b01 * a11 + b02 * a21;\r\n        out[2] = b00 * a02 + b01 * a12 + b02 * a22;\r\n\r\n        out[3] = b10 * a00 + b11 * a10 + b12 * a20;\r\n        out[4] = b10 * a01 + b11 * a11 + b12 * a21;\r\n        out[5] = b10 * a02 + b11 * a12 + b12 * a22;\r\n\r\n        out[6] = b20 * a00 + b21 * a10 + b22 * a20;\r\n        out[7] = b20 * a01 + b21 * a11 + b22 * a21;\r\n        out[8] = b20 * a02 + b21 * a12 + b22 * a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Translate a mat3 by the given vector\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to translate\r\n     * @param {vec2} v vector to translate by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static translate(a: Mat3, v: Mat3, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5],\r\n            a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8],\r\n            x = v[0],\r\n            y = v[1];\r\n\r\n        out[0] = a00;\r\n        out[1] = a01;\r\n        out[2] = a02;\r\n\r\n        out[3] = a10;\r\n        out[4] = a11;\r\n        out[5] = a12;\r\n\r\n        out[6] = x * a00 + y * a10 + a20;\r\n        out[7] = x * a01 + y * a11 + a21;\r\n        out[8] = x * a02 + y * a12 + a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a mat3 by the given angle\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to rotate\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static rotate(a: Mat3, rad: number, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a10 = a[3],\r\n            a11 = a[4],\r\n            a12 = a[5],\r\n            a20 = a[6],\r\n            a21 = a[7],\r\n            a22 = a[8],\r\n            s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n\r\n        out[0] = c * a00 + s * a10;\r\n        out[1] = c * a01 + s * a11;\r\n        out[2] = c * a02 + s * a12;\r\n\r\n        out[3] = c * a10 - s * a00;\r\n        out[4] = c * a11 - s * a01;\r\n        out[5] = c * a12 - s * a02;\r\n\r\n        out[6] = a20;\r\n        out[7] = a21;\r\n        out[8] = a22;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales the mat3 by the dimensions in the given vec2\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to rotate\r\n     * @param {vec2} v the vec2 to scale the matrix by\r\n     * @returns {Mat3} out\r\n     **/\r\n    public static scale(a: Mat3, v: Vec2, out: Mat3) {\r\n        let x = v[0],\r\n            y = v[1];\r\n\r\n        out[0] = x * a[0];\r\n        out[1] = x * a[1];\r\n        out[2] = x * a[2];\r\n\r\n        out[3] = y * a[3];\r\n        out[4] = y * a[4];\r\n        out[5] = y * a[5];\r\n\r\n        out[6] = a[6];\r\n        out[7] = a[7];\r\n        out[8] = a[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector translation\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat3.identity(dest);\r\n     *     mat3.translate(dest, dest, vec);\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {vec2} v Translation vector\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromTranslation(v: Vec2, out: Mat3) {\r\n        out[0] = 1;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = 1;\r\n        out[5] = 0;\r\n        out[6] = v[0];\r\n        out[7] = v[1];\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a given angle\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat3.identity(dest);\r\n     *     mat3.rotate(dest, dest, rad);\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {Number} rad the angle to rotate the matrix by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromRotation(rad: number, out: Mat3) {\r\n        let s = Math.sin(rad),\r\n            c = Math.cos(rad);\r\n\r\n        out[0] = c;\r\n        out[1] = s;\r\n        out[2] = 0;\r\n\r\n        out[3] = -s;\r\n        out[4] = c;\r\n        out[5] = 0;\r\n\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a matrix from a vector scaling\r\n     * This is equivalent to (but much faster than):\r\n     *\r\n     *     mat3.identity(dest);\r\n     *     mat3.scale(dest, dest, vec);\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {vec2} v Scaling vector\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromScaling(v: Vec2, out: Mat3) {\r\n        out[0] = v[0];\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n\r\n        out[3] = 0;\r\n        out[4] = v[1];\r\n        out[5] = 0;\r\n\r\n        out[6] = 0;\r\n        out[7] = 0;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Copies the values from a mat2d into a mat3\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {mat2d} a the matrix to copy\r\n     * @returns {Mat3} out\r\n     **/\r\n    public static fromMat2d(a: Mat2d, out: Mat3) {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = 0;\r\n\r\n        out[3] = a[2];\r\n        out[4] = a[3];\r\n        out[5] = 0;\r\n\r\n        out[6] = a[4];\r\n        out[7] = a[5];\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 3x3 matrix from the given quaternion\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {quat} q Quaternion to create matrix from\r\n     *\r\n     * @returns {Mat3} out\r\n     */\r\n    public static fromQuat(q: Quat, out: Mat3) {\r\n        let x = q[0],\r\n            y = q[1],\r\n            z = q[2],\r\n            w = q[3];\r\n        let x2 = x + x;\r\n        let y2 = y + y;\r\n        let z2 = z + z;\r\n\r\n        let xx = x * x2;\r\n        let yx = y * x2;\r\n        let yy = y * y2;\r\n        let zx = z * x2;\r\n        let zy = z * y2;\r\n        let zz = z * z2;\r\n        let wx = w * x2;\r\n        let wy = w * y2;\r\n        let wz = w * z2;\r\n\r\n        out[0] = 1 - yy - zz;\r\n        out[3] = yx - wz;\r\n        out[6] = zx + wy;\r\n\r\n        out[1] = yx + wz;\r\n        out[4] = 1 - xx - zz;\r\n        out[7] = zy - wx;\r\n\r\n        out[2] = zx - wy;\r\n        out[5] = zy + wx;\r\n        out[8] = 1 - xx - yy;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates a 3x3 normal matrix (transpose inverse) from the 4x4 matrix\r\n     *\r\n     * @param {Mat3} out mat3 receiving operation result\r\n     * @param {mat4} a Mat4 to derive the normal matrix from\r\n     *\r\n     * @returns {Mat3} out\r\n     */\r\n    public static normalFromMat4(a: Mat4, out: Mat3) {\r\n        let a00 = a[0],\r\n            a01 = a[1],\r\n            a02 = a[2],\r\n            a03 = a[3];\r\n        let a10 = a[4],\r\n            a11 = a[5],\r\n            a12 = a[6],\r\n            a13 = a[7];\r\n        let a20 = a[8],\r\n            a21 = a[9],\r\n            a22 = a[10],\r\n            a23 = a[11];\r\n        let a30 = a[12],\r\n            a31 = a[13],\r\n            a32 = a[14],\r\n            a33 = a[15];\r\n\r\n        let b00 = a00 * a11 - a01 * a10;\r\n        let b01 = a00 * a12 - a02 * a10;\r\n        let b02 = a00 * a13 - a03 * a10;\r\n        let b03 = a01 * a12 - a02 * a11;\r\n        let b04 = a01 * a13 - a03 * a11;\r\n        let b05 = a02 * a13 - a03 * a12;\r\n        let b06 = a20 * a31 - a21 * a30;\r\n        let b07 = a20 * a32 - a22 * a30;\r\n        let b08 = a20 * a33 - a23 * a30;\r\n        let b09 = a21 * a32 - a22 * a31;\r\n        let b10 = a21 * a33 - a23 * a31;\r\n        let b11 = a22 * a33 - a23 * a32;\r\n\r\n        // Calculate the determinant\r\n        let det = b00 * b11 - b01 * b10 + b02 * b09 + b03 * b08 - b04 * b07 + b05 * b06;\r\n\r\n        if (!det) {\r\n            return null;\r\n        }\r\n        det = 1.0 / det;\r\n\r\n        out[0] = (a11 * b11 - a12 * b10 + a13 * b09) * det;\r\n        out[1] = (a12 * b08 - a10 * b11 - a13 * b07) * det;\r\n        out[2] = (a10 * b10 - a11 * b08 + a13 * b06) * det;\r\n\r\n        out[3] = (a02 * b10 - a01 * b11 - a03 * b09) * det;\r\n        out[4] = (a00 * b11 - a02 * b08 + a03 * b07) * det;\r\n        out[5] = (a01 * b08 - a00 * b10 - a03 * b06) * det;\r\n\r\n        out[6] = (a31 * b05 - a32 * b04 + a33 * b03) * det;\r\n        out[7] = (a32 * b02 - a30 * b05 - a33 * b01) * det;\r\n        out[8] = (a30 * b04 - a31 * b02 + a33 * b00) * det;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Generates a 2D projection matrix with the given bounds\r\n     *\r\n     * @param {Mat3} out mat3 frustum matrix will be written into\r\n     * @param {number} width Width of your gl context\r\n     * @param {number} height Height of gl context\r\n     * @returns {Mat3} out\r\n     */\r\n    public static projection(width: number, height: number, out: Mat3) {\r\n        out[0] = 2 / width;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 0;\r\n        out[4] = -2 / height;\r\n        out[5] = 0;\r\n        out[6] = -1;\r\n        out[7] = 1;\r\n        out[8] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a mat3\r\n     *\r\n     * @param {Mat3} a matrix to represent as a string\r\n     * @returns {String} string representation of the matrix\r\n     */\r\n    public static str(a: Mat3) {\r\n        return (\r\n            \"mat3(\" +\r\n            a[0] +\r\n            \", \" +\r\n            a[1] +\r\n            \", \" +\r\n            a[2] +\r\n            \", \" +\r\n            a[3] +\r\n            \", \" +\r\n            a[4] +\r\n            \", \" +\r\n            a[5] +\r\n            \", \" +\r\n            a[6] +\r\n            \", \" +\r\n            a[7] +\r\n            \", \" +\r\n            a[8] +\r\n            \")\"\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns Frobenius norm of a mat3\r\n     *\r\n     * @param {Mat3} a the matrix to calculate Frobenius norm of\r\n     * @returns {Number} Frobenius norm\r\n     */\r\n    public static frob(a: Mat3) {\r\n        return Math.sqrt(\r\n            Math.pow(a[0], 2) +\r\n                Math.pow(a[1], 2) +\r\n                Math.pow(a[2], 2) +\r\n                Math.pow(a[3], 2) +\r\n                Math.pow(a[4], 2) +\r\n                Math.pow(a[5], 2) +\r\n                Math.pow(a[6], 2) +\r\n                Math.pow(a[7], 2) +\r\n                Math.pow(a[8], 2),\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Adds two mat3's\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @returns {Mat3} out\r\n     */\r\n    public static add(a: Mat3, b: Mat3, out: Mat3) {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        out[4] = a[4] + b[4];\r\n        out[5] = a[5] + b[5];\r\n        out[6] = a[6] + b[6];\r\n        out[7] = a[7] + b[7];\r\n        out[8] = a[8] + b[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Subtracts matrix b from matrix a\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @returns {Mat3} out\r\n     */\r\n    public static subtract(a: Mat3, b: Mat3, out: Mat3) {\r\n        out[0] = a[0] - b[0];\r\n        out[1] = a[1] - b[1];\r\n        out[2] = a[2] - b[2];\r\n        out[3] = a[3] - b[3];\r\n        out[4] = a[4] - b[4];\r\n        out[5] = a[5] - b[5];\r\n        out[6] = a[6] - b[6];\r\n        out[7] = a[7] - b[7];\r\n        out[8] = a[8] - b[8];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiply each element of the matrix by a scalar.\r\n     *\r\n     * @param {Mat3} out the receiving matrix\r\n     * @param {Mat3} a the matrix to scale\r\n     * @param {Number} b amount to scale the matrix's elements by\r\n     * @returns {Mat3} out\r\n     */\r\n    public static multiplyScalar(a: Mat3, b: number, out: Mat3) {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        out[4] = a[4] * b;\r\n        out[5] = a[5] * b;\r\n        out[6] = a[6] * b;\r\n        out[7] = a[7] * b;\r\n        out[8] = a[8] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Adds two mat3's after multiplying each element of the second operand by a scalar value.\r\n     *\r\n     * @param {Mat3} out the receiving vector\r\n     * @param {Mat3} a the first operand\r\n     * @param {Mat3} b the second operand\r\n     * @param {Number} scale the amount to scale b's elements by before adding\r\n     * @returns {Mat3} out\r\n     */\r\n    public static multiplyScalarAndAdd(a: Mat3, b: Mat3, scale: number, out: Mat3) {\r\n        out[0] = a[0] + b[0] * scale;\r\n        out[1] = a[1] + b[1] * scale;\r\n        out[2] = a[2] + b[2] * scale;\r\n        out[3] = a[3] + b[3] * scale;\r\n        out[4] = a[4] + b[4] * scale;\r\n        out[5] = a[5] + b[5] * scale;\r\n        out[6] = a[6] + b[6] * scale;\r\n        out[7] = a[7] + b[7] * scale;\r\n        out[8] = a[8] + b[8] * scale;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Mat3} a The first matrix.\r\n     * @param {Mat3} b The second matrix.\r\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Mat3, b: Mat3) {\r\n        return (\r\n            a[0] === b[0] &&\r\n            a[1] === b[1] &&\r\n            a[2] === b[2] &&\r\n            a[3] === b[3] &&\r\n            a[4] === b[4] &&\r\n            a[5] === b[5] &&\r\n            a[6] === b[6] &&\r\n            a[7] === b[7] &&\r\n            a[8] === b[8]\r\n        );\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the matrices have approximately the same elements in the same position.\r\n     *\r\n     * @param {Mat3} a The first matrix.\r\n     * @param {Mat3} b The second matrix.\r\n     * @returns {Boolean} True if the matrices are equal, false otherwise.\r\n     */\r\n    public static equals(a: Mat3, b: Mat3) {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3],\r\n            a4 = a[4],\r\n            a5 = a[5],\r\n            a6 = a[6],\r\n            a7 = a[7],\r\n            a8 = a[8];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3],\r\n            b4 = b[4],\r\n            b5 = b[5],\r\n            b6 = b[6],\r\n            b7 = b[7],\r\n            b8 = b[8];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON &&\r\n            Math.abs(a1 - b1) <= EPSILON &&\r\n            Math.abs(a2 - b2) <= EPSILON &&\r\n            Math.abs(a3 - b3) <= EPSILON &&\r\n            Math.abs(a4 - b4) <= EPSILON &&\r\n            Math.abs(a5 - b5) <= EPSILON &&\r\n            Math.abs(a6 - b6) <= EPSILON &&\r\n            Math.abs(a7 - b7) <= EPSILON &&\r\n            Math.abs(a8 - b8) <= EPSILON\r\n        );\r\n    }\r\n}\r\n","import { Vec3 } from \"./vec3\";\r\nimport { Mat3 } from \"./Mat3\";\r\nimport { clamp, EPSILON } from \"./common\";\r\n\r\nexport class Quat extends Float32Array\r\n{\r\n    get x()\r\n    {\r\n        return this[0];\r\n    }\r\n    set x(value: number)\r\n    {\r\n        this[0] = value;\r\n    }\r\n\r\n    get y()\r\n    {\r\n        return this[1];\r\n    }\r\n    set y(value: number)\r\n    {\r\n        this[1] = value;\r\n    }\r\n\r\n    get z()\r\n    {\r\n        return this[2];\r\n    }\r\n    set z(value: number)\r\n    {\r\n        this[2] = value;\r\n    }\r\n\r\n    get w()\r\n    {\r\n        return this[3];\r\n    }\r\n    set w(value: number)\r\n    {\r\n        this[3] = value;\r\n    }\r\n\r\n    private static Recycle: Quat[] = [];\r\n    public static readonly norot = Quat.create();\r\n    public static create()\r\n    {\r\n        if (Quat.Recycle && Quat.Recycle.length > 0)\r\n        {\r\n            let item = Quat.Recycle.pop() as Quat;\r\n            Quat.identity(item);\r\n            return item;\r\n        } else\r\n        {\r\n            let item = new Quat();\r\n            return item;\r\n        }\r\n    }\r\n    public static clone(from: Quat): Quat\r\n    {\r\n        if (Quat.Recycle.length > 0)\r\n        {\r\n            let item = Quat.Recycle.pop() as Quat;\r\n            Quat.copy(from, item);\r\n            return item;\r\n        } else\r\n        {\r\n            let item = new Quat();\r\n            item[0] = from[0];\r\n            item[1] = from[1];\r\n            item[2] = from[2];\r\n            item[3] = from[3];\r\n            return item;\r\n        }\r\n    }\r\n    public static recycle(item: Quat)\r\n    {\r\n        Quat.Recycle.push(item);\r\n    }\r\n\r\n    public static disposeRecycledItems()\r\n    {\r\n        Quat.Recycle.length = 0;\r\n    }\r\n    constructor()\r\n    {\r\n        super(4);\r\n        // this[0]=0;\r\n        // this[1]=0;\r\n        // this[2]=0;\r\n        this[3] = 1;\r\n    }\r\n\r\n    /**\r\n     * Copy the values from one Quat to another\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the source Quaternion\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static copy(a: Quat | number[], out: Quat = Quat.create()): Quat\r\n    {\r\n        out[0] = a[0];\r\n        out[1] = a[1];\r\n        out[2] = a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Set a Quat to the identity Quaternion\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @returns out\r\n     */\r\n    public static identity(out: Quat = Quat.create()): Quat\r\n    {\r\n        out[0] = 0;\r\n        out[1] = 0;\r\n        out[2] = 0;\r\n        out[3] = 1;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Gets the rotation axis and angle for a given\r\n     *  Quaternion. If a Quaternion is created with\r\n     *  setAxisAngle, this method will return the same\r\n     *  values as providied in the original parameter list\r\n     *  OR functionally equivalent values.\r\n     * Example: The Quaternion formed by axis [0, 0, 1] and\r\n     *  angle -90 is the same as the Quaternion formed by\r\n     *  [0, 0, 1] and 270. This method favors the latter.\r\n     * @param  {Vec3} axis  Vector receiving the axis of rotation\r\n     * @param  {Quat} q     Quaternion to be decomposed\r\n     * @return {number}     Angle, in radians, of the rotation\r\n     */\r\n    public static getAxisAngle(axis: Vec3, q: Quat): number\r\n    {\r\n        let rad = Math.acos(q[3]) * 2.0;\r\n        let s = Math.sin(rad / 2.0);\r\n        if (s != 0.0)\r\n        {\r\n            axis[0] = q[0] / s;\r\n            axis[1] = q[1] / s;\r\n            axis[2] = q[2] / s;\r\n        } else\r\n        {\r\n            // If s is zero, return any axis (no rotation - axis does not matter)\r\n            axis[0] = 1;\r\n            axis[1] = 0;\r\n            axis[2] = 0;\r\n        }\r\n        return rad;\r\n    }\r\n\r\n    /**\r\n     * Adds two Quat's\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static add(a: Quat, b: Quat, out: Quat = Quat.create()): Quat\r\n    {\r\n        out[0] = a[0] + b[0];\r\n        out[1] = a[1] + b[1];\r\n        out[2] = a[2] + b[2];\r\n        out[3] = a[3] + b[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Multiplies two Quat's\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns out\r\n     */\r\n    public static multiply(a: Quat, b: Quat, out: Quat = Quat.create()): Quat\r\n    {\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bx = b[0],\r\n            by = b[1],\r\n            bz = b[2],\r\n            bw = b[3];\r\n\r\n        out[0] = ax * bw + aw * bx + ay * bz - az * by;\r\n        out[1] = ay * bw + aw * by + az * bx - ax * bz;\r\n        out[2] = az * bw + aw * bz + ax * by - ay * bx;\r\n        out[3] = aw * bw - ax * bx - ay * by - az * bz;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Scales a Quat by a scalar number\r\n     *\r\n     * @param out the receiving vector\r\n     * @param a the vector to scale\r\n     * @param b amount to scale the vector by\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static scale(a: Quat, b: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        out[0] = a[0] * b;\r\n        out[1] = a[1] * b;\r\n        out[2] = a[2] * b;\r\n        out[3] = a[3] * b;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the length of a Quat\r\n     *\r\n     * @param a vector to calculate length of\r\n     * @returns length of a\r\n     * @function\r\n     */\r\n    public static length_(a: Quat): number\r\n    {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        return Math.sqrt(x * x + y * y + z * z + w * w);\r\n    }\r\n\r\n    /**\r\n     * Calculates the squared length of a Quat\r\n     *\r\n     * @param a vector to calculate squared length of\r\n     * @returns squared length of a\r\n     * @function\r\n     */\r\n    public static squaredLength(a: Quat): number\r\n    {\r\n        let x = a[0];\r\n        let y = a[1];\r\n        let z = a[2];\r\n        let w = a[3];\r\n        return x * x + y * y + z * z + w * w;\r\n    }\r\n\r\n    /**\r\n     * Normalize a Quat\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param src Quaternion to normalize\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static normalize(src: Quat, out: Quat = Quat.create()): Quat\r\n    {\r\n        let x = src[0];\r\n        let y = src[1];\r\n        let z = src[2];\r\n        let w = src[3];\r\n        let len = x * x + y * y + z * z + w * w;\r\n        if (len > 0)\r\n        {\r\n            len = 1 / Math.sqrt(len);\r\n            out[0] = x * len;\r\n            out[1] = y * len;\r\n            out[2] = z * len;\r\n            out[3] = w * len;\r\n        }\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the dot product of two Quat's\r\n     *\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @returns dot product of a and b\r\n     * @function\r\n     */\r\n    public static dot(a: Quat, b: Quat): number\r\n    {\r\n        return a[0] * b[0] + a[1] * b[1] + a[2] * b[2] + a[3] * b[3];\r\n    }\r\n\r\n    /**\r\n     * Performs a linear interpolation between two Quat's\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param t interpolation amount between the two inputs\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static lerp(a: Quat, b: Quat, t: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        let ax = a[0];\r\n        let ay = a[1];\r\n        let az = a[2];\r\n        let aw = a[3];\r\n        out[0] = ax + t * (b[0] - ax);\r\n        out[1] = ay + t * (b[1] - ay);\r\n        out[2] = az + t * (b[2] - az);\r\n        out[3] = aw + t * (b[3] - aw);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a spherical linear interpolation between two Quat\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a the first operand\r\n     * @param b the second operand\r\n     * @param t interpolation amount between the two inputs\r\n     * @returns out\r\n     */\r\n    public static slerp(a: Quat, b: Quat, t: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        // benchmarks:\r\n        //    http://jsperf.com/Quaternion-slerp-implementations\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bx = b[0],\r\n            by = b[1],\r\n            bz = b[2],\r\n            bw = b[3];\r\n\r\n        let omega: number = void 0,\r\n            cosom: number = void 0,\r\n            sinom: number = void 0,\r\n            scale0: number = void 0,\r\n            scale1: number = void 0;\r\n\r\n        // calc cosine\r\n        cosom = ax * bx + ay * by + az * bz + aw * bw;\r\n        // adjust signs (if necessary)\r\n        if (cosom < 0.0)\r\n        {\r\n            cosom = -cosom;\r\n            bx = -bx;\r\n            by = -by;\r\n            bz = -bz;\r\n            bw = -bw;\r\n        }\r\n        // calculate coefficients\r\n        if (1.0 - cosom > 0.000001)\r\n        {\r\n            // standard case (slerp)\r\n            omega = Math.acos(cosom);\r\n            sinom = Math.sin(omega);\r\n            scale0 = Math.sin((1.0 - t) * omega) / sinom;\r\n            scale1 = Math.sin(t * omega) / sinom;\r\n        } else\r\n        {\r\n            // \"from\" and \"to\" Quaternions are very close\r\n            //  ... so we can do a linear interpolation\r\n            scale0 = 1.0 - t;\r\n            scale1 = t;\r\n        }\r\n        // calculate final values\r\n        out[0] = scale0 * ax + scale1 * bx;\r\n        out[1] = scale0 * ay + scale1 * by;\r\n        out[2] = scale0 * az + scale1 * bz;\r\n        out[3] = scale0 * aw + scale1 * bw;\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Performs a spherical linear interpolation with two control points\r\n     *\r\n     * @param {Quat} out the receiving Quaternion\r\n     * @param {Quat} a the first operand\r\n     * @param {Quat} b the second operand\r\n     * @param {Quat} c the third operand\r\n     * @param {Quat} d the fourth operand\r\n     * @param {number} t interpolation amount\r\n     * @returns {Quat} out\r\n     */\r\n    public static sqlerp(a: Quat, b: Quat, c: Quat, d: Quat, t: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        let temp1 = Quat.create();\r\n        let temp2 = Quat.create();\r\n\r\n        Quat.slerp(a, d, t, temp1);\r\n        Quat.slerp(b, c, t, temp2);\r\n        Quat.slerp(temp1, temp2, 2 * t * (1 - t), out);\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Calculates the inverse of a Quat\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a Quat to calculate inverse of\r\n     * @returns out\r\n     */\r\n    public static inverse(a: Quat, out: Quat = Quat.create()): Quat\r\n    {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let dot = a0 * a0 + a1 * a1 + a2 * a2 + a3 * a3;\r\n        let invDot = dot ? 1.0 / dot : 0;\r\n\r\n        // TODO: Would be faster to return [0,0,0,0] immediately if dot == 0\r\n\r\n        out[0] = -a0 * invDot;\r\n        out[1] = -a1 * invDot;\r\n        out[2] = -a2 * invDot;\r\n        out[3] = a3 * invDot;\r\n        return out;\r\n    }\r\n    /**\r\n     * Calculates the conjugate of a Quat\r\n     * If the Quaternion is normalized, this function is faster than Quat.inverse and produces the same result.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a Quat to calculate conjugate of\r\n     * @returns out\r\n     */\r\n    public static conjugate(a: Quat, out: Quat = Quat.create()): Quat\r\n    {\r\n        out[0] = -a[0];\r\n        out[1] = -a[1];\r\n        out[2] = -a[2];\r\n        out[3] = a[3];\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns a string representation of a Quaternion\r\n     *\r\n     * @param a Quat to represent as a string\r\n     * @returns string representation of the Quat\r\n     */\r\n    public static str(a: Quat): string\r\n    {\r\n        return \"Quat(\" + a[0] + \", \" + a[1] + \", \" + a[2] + \", \" + a[3] + \")\";\r\n    }\r\n\r\n    /**\r\n     * Rotates a Quaternion by the given angle about the X axis\r\n     *\r\n     * @param out Quat receiving operation result\r\n     * @param a Quat to rotate\r\n     * @param rad angle (in radians) to rotate\r\n     * @returns out\r\n     */\r\n    public static rotateX(a: Quat, rad: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        rad *= 0.5;\r\n\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bx = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n\r\n        out[0] = ax * bw + aw * bx;\r\n        out[1] = ay * bw + az * bx;\r\n        out[2] = az * bw - ay * bx;\r\n        out[3] = aw * bw - ax * bx;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a Quaternion by the given angle about the Y axis\r\n     *\r\n     * @param out Quat receiving operation result\r\n     * @param a Quat to rotate\r\n     * @param rad angle (in radians) to rotate\r\n     * @returns out\r\n     */\r\n    public static rotateY(a: Quat, rad: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        rad *= 0.5;\r\n\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let by = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n\r\n        out[0] = ax * bw - az * by;\r\n        out[1] = ay * bw + aw * by;\r\n        out[2] = az * bw + ax * by;\r\n        out[3] = aw * bw - ay * by;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Rotates a Quaternion by the given angle about the Z axis\r\n     *\r\n     * @param out Quat receiving operation result\r\n     * @param a Quat to rotate\r\n     * @param rad angle (in radians) to rotate\r\n     * @returns out\r\n     */\r\n    public static rotateZ(a: Quat, rad: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        rad *= 0.5;\r\n\r\n        let ax = a[0],\r\n            ay = a[1],\r\n            az = a[2],\r\n            aw = a[3];\r\n        let bz = Math.sin(rad),\r\n            bw = Math.cos(rad);\r\n\r\n        out[0] = ax * bw + ay * bz;\r\n        out[1] = ay * bw - ax * bz;\r\n        out[2] = az * bw + aw * bz;\r\n        out[3] = aw * bw - az * bz;\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Creates a Quaternion from the given 3x3 rotation matrix.\r\n     *\r\n     * NOTE: The resultant Quaternion is not normalized, so you should be sure\r\n     * to renormalize the Quaternion yourself where necessary.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param m rotation matrix\r\n     * @returns out\r\n     * @function\r\n     */\r\n    public static fromMat3(m: Mat3, out: Quat = Quat.create()): Quat\r\n    {\r\n        // Algorithm in Ken Shoemake's article in 1987 SIGGRAPH course notes\r\n        // article \"Quaternion Calculus and Fast Animation\".\r\n        let fTrace = m[0] + m[4] + m[8];\r\n        let fRoot: number = void 0;\r\n\r\n        if (fTrace > 0.0)\r\n        {\r\n            // |w| > 1/2, may as well choose w > 1/2\r\n            fRoot = Math.sqrt(fTrace + 1.0); // 2w\r\n            out[3] = 0.5 * fRoot;\r\n            fRoot = 0.5 / fRoot; // 1/(4w)\r\n            out[0] = (m[5] - m[7]) * fRoot;\r\n            out[1] = (m[6] - m[2]) * fRoot;\r\n            out[2] = (m[1] - m[3]) * fRoot;\r\n        } else\r\n        {\r\n            // |w| <= 1/2\r\n            let i = 0;\r\n            if (m[4] > m[0]) i = 1;\r\n            if (m[8] > m[i * 3 + i]) i = 2;\r\n            let j = (i + 1) % 3;\r\n            let k = (i + 2) % 3;\r\n\r\n            fRoot = Math.sqrt(m[i * 3 + i] - m[j * 3 + j] - m[k * 3 + k] + 1.0);\r\n            out[i] = 0.5 * fRoot;\r\n            fRoot = 0.5 / fRoot;\r\n            out[3] = (m[j * 3 + k] - m[k * 3 + j]) * fRoot;\r\n            out[j] = (m[j * 3 + i] + m[i * 3 + j]) * fRoot;\r\n            out[k] = (m[k * 3 + i] + m[i * 3 + k]) * fRoot;\r\n        }\r\n\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Sets the specified Quaternion with values corresponding to the given\r\n     * axes. Each axis is a Vec3 and is expected to be unit length and\r\n     * perpendicular to all other specified axes.\r\n     *\r\n     * @param out the receiving Quat\r\n     * @param view  the vector representing the viewing direction\r\n     * @param right the vector representing the local \"right\" direction\r\n     * @param up    the vector representing the local \"up\" direction\r\n     * @returns out\r\n     */\r\n    public static setAxes(view: Vec3, right: Vec3, up: Vec3, out: Quat = Quat.create()): Quat\r\n    {\r\n        let matr = Mat3.create();\r\n\r\n        matr[0] = right[0];\r\n        matr[3] = right[1];\r\n        matr[6] = right[2];\r\n\r\n        matr[1] = up[0];\r\n        matr[4] = up[1];\r\n        matr[7] = up[2];\r\n\r\n        matr[2] = -view[0];\r\n        matr[5] = -view[1];\r\n        matr[8] = -view[2];\r\n        Quat.fromMat3(matr, out);\r\n        matr = null;\r\n\r\n        return Quat.normalize(out, out);\r\n    }\r\n\r\n    /**\r\n     * Calculates the W component of a Quat from the X, Y, and Z components.\r\n     * Assumes that Quaternion is 1 unit in length.\r\n     * Any existing W component will be ignored.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param a Quat to calculate W component of\r\n     * @returns out\r\n     */\r\n    public static calculateW(a: Quat, out: Quat = Quat.create()): Quat\r\n    {\r\n        let x = a[0],\r\n            y = a[1],\r\n            z = a[2];\r\n\r\n        out[0] = x;\r\n        out[1] = y;\r\n        out[2] = z;\r\n        out[3] = Math.sqrt(Math.abs(1.0 - x * x - y * y - z * z));\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the Quaternions have exactly the same elements in the same position (when compared with ===)\r\n     *\r\n     * @param {Quat} a The first vector.\r\n     * @param {Quat} b The second vector.\r\n     * @returns {boolean} True if the Quaternions are equal, false otherwise.\r\n     */\r\n    public static exactEquals(a: Quat, b: Quat): boolean\r\n    {\r\n        return a[0] === b[0] && a[1] === b[1] && a[2] === b[2] && a[3] === b[3];\r\n    }\r\n\r\n    // /**\r\n    //  * Returns whether or not the Quaternions have approximately the same elements in the same position.\r\n    //  *\r\n    //  * @param {Quat} a The first vector.\r\n    //  * @param {Quat} b The second vector.\r\n    //  * @returns {boolean} True if the Quaternions are equal, false otherwise.\r\n    //  */\r\n    // public static equals (a: Quat, b: Quat): boolean{\r\n    //     let a0 = a[0],\r\n    //     a1 = a[1],\r\n    //     a2 = a[2],\r\n    //     a3 = a[3];\r\n    // let b0 = b[0],\r\n    //     b1 = b[1],\r\n    //     b2 = b[2],\r\n    //     b3 = b[3];\r\n    // return Math.abs(a0 - b0) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a0), Math.abs(b0)) && Math.abs(a1 - b1) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a1), Math.abs(b1)) && Math.abs(a2 - b2) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a2), Math.abs(b2)) && Math.abs(a3 - b3) <= glMatrix.EPSILON * Math.max(1.0, Math.abs(a3), Math.abs(b3));\r\n\r\n    // }\r\n    static fromYawPitchRoll(yaw: number, pitch: number, roll: number, result: Quat): void\r\n    {\r\n        // Produces a Quaternion from Euler angles in the z-y-x orientation (Tait-Bryan angles)\r\n        let halfRoll = roll * 0.5;\r\n        let halfPitch = pitch * 0.5;\r\n        let halfYaw = yaw * 0.5;\r\n\r\n        let sinRoll = Math.sin(halfRoll);\r\n        let cosRoll = Math.cos(halfRoll);\r\n        let sinPitch = Math.sin(halfPitch);\r\n        let cosPitch = Math.cos(halfPitch);\r\n        let sinYaw = Math.sin(halfYaw);\r\n        let cosYaw = Math.cos(halfYaw);\r\n\r\n        result[0] = cosYaw * sinPitch * cosRoll + sinYaw * cosPitch * sinRoll;\r\n        result[1] = sinYaw * cosPitch * cosRoll - cosYaw * sinPitch * sinRoll;\r\n        result[2] = cosYaw * cosPitch * sinRoll - sinYaw * sinPitch * cosRoll;\r\n        result[3] = cosYaw * cosPitch * cosRoll + sinYaw * sinPitch * sinRoll;\r\n    }\r\n    /**舍弃glmatrix 的fromeuler  （坐标系不同算法不同）\r\n     * Creates a Quaternion from the given euler angle x, y, z.\r\n     * rot order： z-y-x\r\n     * @param {x} Angle to rotate around X axis in degrees.（角度）\r\n     * @param {y} Angle to rotate around Y axis in degrees.\r\n     * @param {z} Angle to rotate around Z axis in degrees.\r\n     * @param {Quat} out the receiving Quaternion\r\n     * @returns {Quat} out\r\n     * @function\r\n     */\r\n    static FromEuler(x: number, y: number, z: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        x *= (0.5 * Math.PI) / 180;\r\n        y *= (0.5 * Math.PI) / 180;\r\n        z *= (0.5 * Math.PI) / 180;\r\n\r\n        let cosX: number = Math.cos(x),\r\n            sinX: number = Math.sin(x);\r\n        let cosY: number = Math.cos(y),\r\n            sinY: number = Math.sin(y);\r\n        let cosZ: number = Math.cos(z),\r\n            sinZ: number = Math.sin(z);\r\n\r\n        out[0] = sinX * cosY * cosZ + cosX * sinY * sinZ;\r\n        out[1] = cosX * sinY * cosZ - sinX * cosY * sinZ;\r\n        out[2] = cosX * cosY * sinZ - sinX * sinY * cosZ;\r\n        out[3] = cosX * cosY * cosZ + sinX * sinY * sinZ;\r\n\r\n        this.normalize(out, out);\r\n        return out;\r\n    }\r\n    static ToEuler(src: Quat, out: Vec3)\r\n    {\r\n        let x = src[0],\r\n            y = src[1],\r\n            z = src[2],\r\n            w = src[3];\r\n        let temp: number = 2.0 * (w * x - y * z);\r\n        temp = clamp(temp, -1.0, 1.0);\r\n        out[0] = Math.asin(temp);\r\n        out[1] = Math.atan2(2.0 * (w * y + z * x), 1.0 - 2.0 * (y * y + x * x));\r\n        out[2] = Math.atan2(2.0 * (w * z + y * x), 1.0 - 2.0 * (x * x + z * z));\r\n\r\n        out[0] /= Math.PI / 180;\r\n        out[1] /= Math.PI / 180;\r\n        out[2] /= Math.PI / 180;\r\n    }\r\n\r\n    /**\r\n     * Sets a Quat from the given angle and rotation axis,\r\n     * then returns it.\r\n     *\r\n     * @param out the receiving Quaternion\r\n     * @param axis the axis around which to rotate\r\n     * @param rad （弧度）the angle in radians\r\n     * @returns out\r\n     **/\r\n    public static AxisAngle(axis: Vec3, rad: number, out: Quat = Quat.create()): Quat\r\n    {\r\n        rad = rad * 0.5;\r\n        let s = Math.sin(rad);\r\n        out[0] = s * axis[0];\r\n        out[1] = s * axis[1];\r\n        out[2] = s * axis[2];\r\n        out[3] = Math.cos(rad);\r\n        return out;\r\n    }\r\n\r\n    /**\r\n     * Sets a Quaternion to represent the shortest rotation from one\r\n     * vector to another.\r\n     *\r\n     * Both vectors are assumed to be unit length.\r\n     *\r\n     * @param out the receiving Quaternion.\r\n     * @param from the initial vector\r\n     * @param to the destination vector\r\n     * @returns out\r\n     */\r\n    public static rotationTo(from: Vec3, to: Vec3, out: Quat = Quat.create()): Quat\r\n    {\r\n        let tmpVec3 = Vec3.create();\r\n        let xUnitVec3 = Vec3.RIGHT;\r\n        let yUnitVec3 = Vec3.UP;\r\n\r\n        let dot = Vec3.dot(from, to);\r\n        if (dot < -0.999999)\r\n        {\r\n            Vec3.cross(tmpVec3, xUnitVec3, from);\r\n            if (Vec3.magnitude(tmpVec3) < 0.000001) Vec3.cross(tmpVec3, yUnitVec3, from);\r\n            Vec3.normalize(tmpVec3, tmpVec3);\r\n            Quat.AxisAngle(tmpVec3, Math.PI, out);\r\n            return out;\r\n        } else if (dot > 0.999999)\r\n        {\r\n            out[0] = 0;\r\n            out[1] = 0;\r\n            out[2] = 0;\r\n            out[3] = 1;\r\n            return out;\r\n        } else\r\n        {\r\n            Vec3.cross(tmpVec3, from, to);\r\n            out[0] = tmpVec3[0];\r\n            out[1] = tmpVec3[1];\r\n            out[2] = tmpVec3[2];\r\n            out[3] = 1 + dot;\r\n            return Quat.normalize(out, out);\r\n        }\r\n    }\r\n    static myLookRotation(dir: Vec3, out: Quat = Quat.create(), up: Vec3 = Vec3.UP)\r\n    {\r\n        if (Vec3.exactEquals(dir, Vec3.ZERO))\r\n        {\r\n            console.log(\"Zero direction in MyLookRotation\");\r\n            return Quat.norot;\r\n        }\r\n        if (!Vec3.exactEquals(dir, up))\r\n        {\r\n            let tempv = Vec3.create();\r\n            Vec3.scale(up, Vec3.dot(up, dir), tempv);\r\n            Vec3.subtract(dir, tempv, tempv);\r\n            let qu = Quat.create();\r\n            this.rotationTo(Vec3.FORWARD, tempv, qu);\r\n            let qu2 = Quat.create();\r\n            this.rotationTo(tempv, dir, qu2);\r\n            Quat.multiply(qu, qu2, out);\r\n        } else\r\n        {\r\n            this.rotationTo(Vec3.FORWARD, dir, out);\r\n        }\r\n    }\r\n    // /**\r\n    //  *\r\n    //  * @param pos transform self pos\r\n    //  * @param targetpos targetpos\r\n    //  * @param out\r\n    //  * @param up\r\n    //  */\r\n    // static lookat(pos: Vec3, targetpos: Vec3, out: Quat = Quat.create(),up:Vec3=Vec3.UP)\r\n    // {\r\n    //     let baseDir=Vec3.BACKWARD;\r\n\r\n    //     let dir = Vec3.create();\r\n    //     Vec3.subtract(targetpos, pos, dir);\r\n    //     Vec3.normalize(dir, dir);\r\n    //     let dot = Vec3.dot(baseDir, dir);\r\n    //     if (Math.abs(dot - (-1.0)) < 0.000001)\r\n    //     {\r\n    //         this.AxisAngle(Vec3.UP, Math.PI, out);\r\n    //     }else if(Math.abs(dot - 1.0) < 0.000001)\r\n    //     {\r\n    //         Quat.identity(out);\r\n    //     }else\r\n    //     {\r\n    //         dot = clamp(dot, -1, 1);\r\n    //         let rotangle = Math.acos(dot);\r\n    //         let rotAxis = Vec3.create();\r\n    //         Vec3.cross(baseDir, dir, rotAxis);\r\n    //         Vec3.normalize(rotAxis,rotAxis);\r\n    //         Quat.AxisAngle(rotAxis, rotangle, out);\r\n    //     }\r\n\r\n    //     let targetdirx:Vec3=Vec3.create();\r\n    //     Vec3.cross(up,out,targetdirx);\r\n    //     let dotx = Vec3.dot(targetdirx,Vec3.RIGHT);\r\n    //     let rot2=Quat.create();\r\n    //     if (Math.abs(dotx - 1.0) < 0.000001)\r\n    //     {\r\n    //     }else if(Math.abs(dotx - 1.0) < 0.000001)\r\n    //     {\r\n    //         this.AxisAngle(Vec3.FORWARD, Math.PI, rot2);\r\n    //         Quat.multiply(out,rot2,out);\r\n    //     }else\r\n    //     {\r\n    //         let rotAxis=Vec3.create();\r\n    //         Vec3.cross(Vec3.RIGHT,targetdirx,rotAxis);\r\n    //         dotx = clamp(dotx, -1, 1);\r\n    //         let rotangle = Math.acos(dotx);\r\n    //         Quat.AxisAngle(rotAxis, rotangle, rot2);\r\n    //         Quat.multiply(out,rot2,out);\r\n    //     }\r\n\r\n    //     Vec3.recycle(dir);\r\n    //     // Vec3.recycle(rotAxis);\r\n\r\n    //     // let dir = Vec3.create();\r\n    //     // Vec3.subtract(targetpos, pos, dir);\r\n    //     // Vec3.normalize(dir, dir);\r\n    //     // this.rotationTo(Vec3.BACKWARD,dir,out);\r\n    // }\r\n\r\n    static LookRotation(lookAt: Vec3, up: Vec3 = Vec3.UP)\r\n    {\r\n        /*Vector forward = lookAt.Normalized();\r\n            Vector right = Vector::Cross(up.Normalized(), forward);\r\n            Vector up = Vector::Cross(forward, right);*/\r\n\r\n        // Vector forward = lookAt.Normalized();\r\n        // Vector::OrthoNormalize(&up, &forward); // Keeps up the same, make forward orthogonal to up\r\n        // Vector right = Vector::Cross(up, forward);\r\n\r\n        // Quaternion ret;\r\n        // ret.w = sqrtf(1.0f + right.x + up.y + forward.z) * 0.5f;\r\n        // float w4_recip = 1.0f / (4.0f * ret.w);\r\n        // ret.x = (forward.y - up.z) * w4_recip;\r\n        // ret.y = (right.z - forward.x) * w4_recip;\r\n        // ret.z = (up.x - right.y) * w4_recip;\r\n\r\n        // return ret;\r\n\r\n        let forward = Vec3.create();\r\n        Vec3.normalize(lookAt, forward);\r\n        let right = Vec3.create();\r\n        Vec3.cross(up, forward, right);\r\n    }\r\n\r\n    static transformVector(src: Quat, vector: Vec3, out: Vec3)\r\n    {\r\n        var x1: number, y1: number, z1: number, w1: number;\r\n        var x2: number = vector[0],\r\n            y2: number = vector[1],\r\n            z2: number = vector[2];\r\n\r\n        w1 = -src[0] * x2 - src[1] * y2 - src[2] * z2;\r\n        x1 = src[3] * x2 + src[1] * z2 - src[2] * y2;\r\n        y1 = src[3] * y2 - src[0] * z2 + src[2] * x2;\r\n        z1 = src[3] * z2 + src[0] * y2 - src[1] * x2;\r\n\r\n        out.x = -w1 * src[0] + x1 * src[3] - y1 * src[2] + z1 * src[1];\r\n        out.y = -w1 * src[1] + x1 * src[2] + y1 * src[3] - z1 * src[0];\r\n        out.z = -w1 * src[2] - x1 * src[1] + y1 * src[0] + z1 * src[3];\r\n    }\r\n    static fromUnitXYZ(xAxis: Vec3, yAxis: Vec3, zAxis: Vec3, out: Quat = Quat.create())\r\n    {\r\n        var m11 = xAxis[0],\r\n            m12 = yAxis[0],\r\n            m13 = zAxis[0];\r\n        var m21 = xAxis[1],\r\n            m22 = yAxis[1],\r\n            m23 = zAxis[1];\r\n        var m31 = xAxis[2],\r\n            m32 = yAxis[2],\r\n            m33 = zAxis[2];\r\n        var trace = m11 + m22 + m33;\r\n        var s;\r\n        if (trace > 0)\r\n        {\r\n            s = 0.5 / Math.sqrt(trace + 1.0);\r\n\r\n            out.w = 0.25 / s;\r\n            out.x = (m32 - m23) * s;\r\n            out.y = (m13 - m31) * s;\r\n            out.z = (m21 - m12) * s;\r\n        } else if (m11 > m22 && m11 > m33)\r\n        {\r\n            s = 2.0 * Math.sqrt(1.0 + m11 - m22 - m33);\r\n\r\n            out.w = (m32 - m23) / s;\r\n            out.x = 0.25 * s;\r\n            out.y = (m12 + m21) / s;\r\n            out.z = (m13 + m31) / s;\r\n        } else if (m22 > m33)\r\n        {\r\n            s = 2.0 * Math.sqrt(1.0 + m22 - m11 - m33);\r\n\r\n            out.w = (m13 - m31) / s;\r\n            out.x = (m12 + m21) / s;\r\n            out.y = 0.25 * s;\r\n            out.z = (m23 + m32) / s;\r\n        } else\r\n        {\r\n            s = 2.0 * Math.sqrt(1.0 + m33 - m11 - m22);\r\n\r\n            out.w = (m21 - m12) / s;\r\n            out.x = (m13 + m31) / s;\r\n            out.y = (m23 + m32) / s;\r\n            out.z = 0.25 * s;\r\n        }\r\n        return out;\r\n    }\r\n    static lookat(pos: Vec3, targetpos: Vec3, out: Quat = Quat.create(), up: Vec3 = Vec3.UP)\r\n    {\r\n        // let baseDir=Vec3.BACKWARD;\r\n        let dirz = Vec3.create();\r\n        Vec3.subtract(pos, targetpos, dirz);\r\n        Vec3.normalize(dirz, dirz);\r\n\r\n        let dirx: Vec3 = Vec3.create();\r\n        Vec3.cross(up, dirz, dirx);\r\n        Vec3.normalize(dirx, dirx);\r\n\r\n        let diry: Vec3 = Vec3.create();\r\n        Vec3.cross(dirz, dirx, diry);\r\n        // Vec3.normalize(diry, diry);\r\n\r\n        this.fromUnitXYZ(dirx, diry, dirz, out);\r\n\r\n        Vec3.recycle(dirx);\r\n        Vec3.recycle(diry);\r\n        Vec3.recycle(dirz);\r\n    }\r\n\r\n    /**\r\n     * Returns whether or not the vectors have approximately the same elements in the same Quat.\r\n     *\r\n     * @param {vec4} a The first vector.\r\n     * @param {vec4} b The second vector.\r\n     * @returns {boolean} True if the vectors are equal, false otherwise.\r\n     */\r\n    public static equals(a: Quat, b: Quat): boolean\r\n    {\r\n        let a0 = a[0],\r\n            a1 = a[1],\r\n            a2 = a[2],\r\n            a3 = a[3];\r\n        let b0 = b[0],\r\n            b1 = b[1],\r\n            b2 = b[2],\r\n            b3 = b[3];\r\n        return (\r\n            Math.abs(a0 - b0) <= EPSILON &&\r\n            Math.abs(a1 - b1) <= EPSILON &&\r\n            Math.abs(a2 - b2) <= EPSILON &&\r\n            Math.abs(a3 - b3) <= EPSILON\r\n        );\r\n    }\r\n    /**\r\n     *\r\n     * @param from\r\n     * @param to\r\n     * @param out\r\n     */\r\n    static fromToRotation(from: Vec3, to: Vec3, out: Quat = Quat.create())\r\n    {\r\n        let dir1 = Vec3.create();\r\n        let dir2 = Vec3.create();\r\n\r\n        Vec3.normalize(from, dir1);\r\n        Vec3.normalize(to, dir2);\r\n\r\n        let dir = Vec3.create();\r\n        Vec3.cross(dir1, dir2, dir);\r\n        if (Vec3.magnitude(dir) < 0.001)\r\n        {\r\n            Quat.identity(out);\r\n        } else\r\n        {\r\n            Vec3.normalize(dir, dir);\r\n            let dot = Vec3.dot(dir1, dir2);\r\n            Quat.AxisAngle(dir, Math.acos(dot), out);\r\n        }\r\n        Vec3.recycle(dir);\r\n        Vec3.recycle(dir1);\r\n        Vec3.recycle(dir2);\r\n        return out;\r\n    }\r\n}\r\n","import { Vec3 } from \"../mathD/vec3\";\r\nimport { Quat } from \"../mathD/quat\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { EventHandler } from \"./Event\";\r\n\r\nenum DirtyFlagEnum {\r\n    WWORLD_POS = 0b000100,\r\n    WORLD_ROTATION = 0b001000,\r\n    WORLD_SCALE = 0b010000,\r\n    LOCALMAT = 0b000001,\r\n    WORLDMAT = 0b000010,\r\n}\r\n\r\nexport class Transform {\r\n    // refScene: Scene;\r\n    parent: Transform;\r\n    children: Transform[] = [];\r\n    private dirtyFlag: number = 0;\r\n    get beDirty() { return this.dirtyFlag != 0 }\r\n    name: string;\r\n    constructor(name?: string) {\r\n        this.name = name;\r\n        //--------attach to dirty-------\r\n        Object.defineProperty(this._localPosition, \"x\", {\r\n            get: () => { return this._localPosition[0] },\r\n            set: value => { this._localPosition[0] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localPosition, \"y\", {\r\n            get: () => { return this._localPosition[1] },\r\n            set: value => { this._localPosition[1] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localPosition, \"z\", {\r\n            get: () => { return this._localPosition[2] },\r\n            set: value => { this._localPosition[2] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localRotation, \"x\", {\r\n            get: () => { return this._localRotation[0] },\r\n            set: value => { this._localRotation[0] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localRotation, \"y\", {\r\n            get: () => { return this._localRotation[1] },\r\n            set: value => { this._localRotation[1] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localRotation, \"z\", {\r\n            get: () => { return this._localRotation[2] },\r\n            set: value => { this._localRotation[2] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localRotation, \"w\", {\r\n            get: () => { return this._localRotation[3] },\r\n            set: value => { this._localRotation[3] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localScale, \"x\", {\r\n            get: () => { return this._localScale[0] },\r\n            set: value => { this._localScale[0] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localScale, \"y\", {\r\n            get: () => { return this._localScale[1] },\r\n            set: value => { this._localScale[1] = value; this.markDirty() }\r\n        })\r\n        Object.defineProperty(this._localScale, \"z\", {\r\n            get: () => { return this._localScale[2] },\r\n            set: value => { this._localScale[2] = value; this.markDirty() }\r\n        })\r\n    }\r\n\r\n    private _localPosition: Vec3 = Vec3.create();\r\n    private _localRotation: Quat = Quat.create();\r\n    private _localScale: Vec3 = Vec3.create(1, 1, 1);\r\n\r\n    set localPosition(value: Vec3) {\r\n        Vec3.copy(value, this._localPosition);\r\n        this.markDirty();\r\n    }\r\n    get localPosition(): Vec3 {\r\n        return this._localPosition;\r\n    }\r\n\r\n    set localRotation(value: Quat) {\r\n        Quat.copy(value, this._localRotation);\r\n        this.markDirty();\r\n    }\r\n    get localRotation(): Quat {\r\n        return this._localRotation;\r\n    }\r\n\r\n    set localScale(value: Vec3) {\r\n        Vec3.copy(value, this._localScale);\r\n        // this._localScale = value;\r\n        this.markDirty();\r\n    }\r\n    get localScale(): Vec3 {\r\n        return this._localScale;\r\n    }\r\n\r\n    private _localMatrix: Mat4 = Mat4.create();\r\n    set localMatrix(value: Mat4) {\r\n        this._localMatrix = value;\r\n        Mat4.decompose(this._localMatrix, this._localScale, this._localRotation, this._localPosition);\r\n        this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.LOCALMAT;\r\n        this.dirtyFlag = this.dirtyFlag | DirtyFlagEnum.WORLDMAT;\r\n\r\n        Transform.NotifyChildSelfDirty(this);\r\n    }\r\n\r\n    get localMatrix() {\r\n        if (this.dirtyFlag & DirtyFlagEnum.LOCALMAT) {\r\n            Mat4.RTS(this._localPosition, this._localScale, this._localRotation, this._localMatrix);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.LOCALMAT;\r\n        }\r\n        return this._localMatrix;\r\n    }\r\n\r\n    //-------------------------world属性--------------------------------------------------------------\r\n    //------------------------------------------------------------------------------------------------\r\n    //得到worldmatrix后，不会立刻decompse得到worldpos/worldscale/worldort,而是dirty标记起来.\r\n    //setworld属性转换到setlocal属性\r\n    //------------------------------------------------------------------------------------------------\r\n    private _worldPosition: Vec3 = Vec3.create();\r\n    get worldPosition(): Vec3 {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.WWORLD_POS)) {\r\n            Mat4.getTranslationing(this.worldMatrix, this._worldPosition);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WWORLD_POS;\r\n        }\r\n        return this._worldPosition;\r\n    }\r\n    set worldPosition(value: Vec3) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            this._localPosition = value;\r\n        } else {\r\n            let invparentworld = Mat4.create();\r\n            Mat4.invert(this.parent.worldMatrix, invparentworld);\r\n            Mat4.transformPoint(value, invparentworld, this._localPosition);\r\n            Mat4.recycle(invparentworld);\r\n        }\r\n        this.markDirty();\r\n    }\r\n\r\n    private _worldRotation: Quat = Quat.create();\r\n    get worldRotation() {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.WORLD_ROTATION)) {\r\n            Mat4.getRotationing(this.worldMatrix, this._worldRotation, this.worldScale);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLD_ROTATION;\r\n        }\r\n        return this._worldRotation;\r\n    }\r\n    set worldRotation(value: Quat) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            this._localRotation = value;\r\n        } else {\r\n            let invparentworldrot = Quat.create();\r\n            Quat.inverse(this.parent.worldRotation, invparentworldrot);\r\n            Quat.multiply(invparentworldrot, value, this._localRotation);\r\n            Quat.recycle(invparentworldrot);\r\n        }\r\n        this.markDirty();\r\n    }\r\n\r\n    private _worldScale: Vec3 = Vec3.create(1, 1, 1);\r\n    get worldScale(): Vec3 {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.WORLD_SCALE)) {\r\n            Mat4.getScaling(this.worldMatrix, this._worldScale);\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLD_SCALE;\r\n        }\r\n        return this._worldScale;\r\n    }\r\n    set worldScale(value: Vec3) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        if (this.parent.parent == null) {\r\n            this._localScale = value;\r\n        } else {\r\n            Vec3.divide(value, this.parent.worldScale, this._localScale);\r\n        }\r\n        this.markDirty();\r\n    }\r\n\r\n    private _worldMatrix: Mat4 = Mat4.create();\r\n    get worldMatrix(): Mat4 {\r\n        if (this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.LOCALMAT)) {\r\n            if (this.parent) {\r\n                Mat4.multiply(this.parent.worldMatrix, this.localMatrix, this._worldMatrix);\r\n            } else {\r\n                Mat4.copy(this.localMatrix, this._worldMatrix);\r\n            }\r\n            this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLDMAT;\r\n            this.dirtyFlag =\r\n                this.dirtyFlag | DirtyFlagEnum.WORLD_ROTATION | DirtyFlagEnum.WORLD_SCALE | DirtyFlagEnum.WWORLD_POS;\r\n        }\r\n        return this._worldMatrix;\r\n    }\r\n\r\n    get worldMatrixBedirty() {\r\n        return this.dirtyFlag & (DirtyFlagEnum.WORLDMAT | DirtyFlagEnum.LOCALMAT);\r\n    }\r\n\r\n    set worldMatrix(value: Mat4) {\r\n        if (this.parent == null) {\r\n            return;\r\n        }\r\n        Mat4.copy(value, this._worldMatrix);\r\n        if (this.parent.parent == null) {\r\n            Mat4.copy(value, this.localMatrix);\r\n            // this.localMatrix = this._localMatrix;\r\n        } else {\r\n            let invparentworld = Mat4.create();\r\n            Mat4.invert(this.parent.worldMatrix, invparentworld);\r\n            Mat4.multiply(invparentworld, value, this.localMatrix);\r\n            // this.setlocalMatrix(this._localMatrix);\r\n            Mat4.recycle(invparentworld);\r\n        }\r\n        this.dirtyFlag = this.dirtyFlag & ~DirtyFlagEnum.WORLDMAT;\r\n        this.dirtyFlag =\r\n            this.dirtyFlag | DirtyFlagEnum.WORLD_ROTATION | DirtyFlagEnum.WORLD_SCALE | DirtyFlagEnum.WWORLD_POS;\r\n    }\r\n\r\n    private _worldTolocalMatrix: Mat4 = Mat4.create();\r\n    get worldTolocalMatrix(): Mat4 {\r\n        Mat4.invert(this.worldMatrix, this._worldTolocalMatrix);\r\n        return this._worldTolocalMatrix;\r\n    }\r\n\r\n    /**\r\n     * 通知子节点需要计算worldmatrix\r\n     * @param node\r\n     */\r\n    private static NotifyChildSelfDirty(node: Transform) {\r\n        for (let child of node.children) {\r\n            if (!(child.dirtyFlag & DirtyFlagEnum.WORLDMAT)) {\r\n                child.dirtyFlag = child.dirtyFlag | DirtyFlagEnum.WORLDMAT;\r\n                this.NotifyChildSelfDirty(child);\r\n            }\r\n        }\r\n    }\r\n\r\n    // private static linkRefScene(node: Transform, scene: Scene)\r\n    // {\r\n    //     if (node.refScene != scene)\r\n    //     {\r\n    //         node.refScene = scene;\r\n    //         for (let child of node.children)\r\n    //         {\r\n    //             this.linkRefScene(child, scene);\r\n    //         }\r\n    //     }\r\n    // }\r\n\r\n    /**\r\n     * 修改local属性后，标记dirty\r\n     */\r\n    private markDirty() {\r\n        this.dirtyFlag = this.dirtyFlag | DirtyFlagEnum.LOCALMAT | DirtyFlagEnum.WORLDMAT;\r\n        Transform.NotifyChildSelfDirty(this);\r\n    }\r\n\r\n    ///------------------------------------------父子结构\r\n    /**\r\n     * 添加子物体实例\r\n     */\r\n    addChild(node: Transform) {\r\n        if (node.parent != null) {\r\n            node.parent.removeChild(node);\r\n        }\r\n        this.children.push(node);\r\n        node.parent = this;\r\n        node.markDirty();\r\n        // Transform.linkRefScene(node, this.refScene);\r\n    }\r\n    /**\r\n     * 移除所有子物体\r\n     */\r\n    removeAllChild() {\r\n        //if(this.children==undefined||this.children.length==0) return;\r\n        if (this.children.length == 0) return;\r\n        for (let i = 0, len = this.children.length; i < len; i++) {\r\n            this.children[i].parent = null;\r\n        }\r\n        this.children.length = 0;\r\n    }\r\n    /**\r\n     * 移除指定子物体\r\n     */\r\n    removeChild(node: Transform) {\r\n        if (node.parent != this || this.children.length == 0) {\r\n            throw new Error(\"not my child.\");\r\n        }\r\n        let i = this.children.indexOf(node);\r\n        if (i >= 0) {\r\n            this.children.splice(i, 1);\r\n            node.parent = null;\r\n        }\r\n    }\r\n    //-------易用性拓展\r\n    /**\r\n     * 获取世界坐标系下当前z轴的朝向\r\n     */\r\n    getForwardInWorld(out: Vec3): Vec3 {\r\n        Mat4.transformVector3(Vec3.FORWARD, this.worldMatrix, out);\r\n        Vec3.normalize(out, out);\r\n        return out;\r\n    }\r\n    getRightInWorld(out: Vec3): Vec3 {\r\n        Mat4.transformVector3(Vec3.RIGHT, this.worldMatrix, out);\r\n        Vec3.normalize(out, out);\r\n        return out;\r\n    }\r\n    getUpInWorld(out: Vec3): Vec3 {\r\n        Mat4.transformVector3(Vec3.UP, this.worldMatrix, out);\r\n        Vec3.normalize(out, out);\r\n        return out;\r\n    }\r\n\r\n    moveInWorld(dir: Vec3, amount: number) {\r\n        let dirInLocal = Vec3.create();\r\n        Mat4.transformVector3(dir, this.worldTolocalMatrix, dirInLocal);\r\n        Vec3.AddscaledVec(this._localPosition, dirInLocal, amount, this._localPosition);\r\n        this.markDirty();\r\n        return this;\r\n    }\r\n    moveInlocal(dir: Vec3, amount: number) {\r\n        Vec3.AddscaledVec(this._localPosition, dir, amount, this._localPosition);\r\n        this.markDirty();\r\n        return this;\r\n    }\r\n\r\n    lookAtPoint(pos: Vec3, up?: Vec3) {\r\n        let dirz = Vec3.subtract(this.worldPosition, pos);\r\n        Vec3.normalize(dirz, dirz);\r\n        let dirx = Vec3.cross(up || Vec3.UP, dirz);\r\n        if (Vec3.magnitude(dirx) == 0) {\r\n            let dot = Vec3.dot(up || Vec3.UP, dirz);\r\n            if (dot == 1) {\r\n                let currentDir = this.getForwardInWorld(Vec3.create());\r\n                this.worldRotation = Quat.fromToRotation(currentDir, dirz, this.worldRotation);\r\n            }\r\n        } else {\r\n            Vec3.normalize(dirx, dirx);\r\n            let diry = Vec3.cross(dirz, dirx);\r\n            this.worldRotation = Quat.fromUnitXYZ(dirx, diry, dirz, this.worldRotation);\r\n\r\n            Vec3.recycle(diry);\r\n        }\r\n\r\n        Vec3.recycle(dirz);\r\n        Vec3.recycle(dirx);\r\n    }\r\n\r\n    lookAt(tran: Transform, up?: Vec3) {\r\n        this.lookAtPoint(tran.worldPosition, up);\r\n    }\r\n\r\n    dispose(): void {\r\n        this.parent = null;\r\n        this.children = null;\r\n    }\r\n}\r\n","import { EventHandler } from \"./Event\";\r\n\r\nexport class RefData<T>\r\n{\r\n    private _data: T;\r\n    set data(value: T)\r\n    {\r\n        if (this._data != value)\r\n        {\r\n            let oldData = this._data;\r\n            this._data = value;\r\n\r\n            this.onDataChange.raiseEvent(value);\r\n        }\r\n    };\r\n    get data() { return this._data };\r\n    onDataChange: EventHandler<T> = new EventHandler();\r\n\r\n    constructor(data: T)\r\n    {\r\n        this._data = data;\r\n    }\r\n\r\n    destroy()\r\n    {\r\n        this._data = undefined;\r\n        this.onDataChange.destroy();\r\n        this.onDataChange = undefined;\r\n    }\r\n\r\n}","import { Icomponent, Ecs, Ientity, UniteBitkey } from \"./Ecs\";\r\nimport { Transform } from \"./Transform\";\r\nimport { EventHandler } from \"./Event\";\r\nimport { RefData } from \"./RefData\";\r\n\r\nnamespace Private {\r\n    export let id = 0;\r\n}\r\n\r\nexport class Entity extends Transform implements Ientity {\r\n    name: string;\r\n    ref_beActive = new RefData<boolean>(true);\r\n    get beActive() { return this.ref_beActive.data };\r\n    set beActive(value: boolean) {\r\n        this.ref_beActive.data = value;\r\n    }\r\n    readonly id: number;\r\n    constructor(name?: string) {\r\n        super();\r\n        this.name = name;\r\n        this.id = Private.id++;\r\n    }\r\n    _uniteBitkey: UniteBitkey = new UniteBitkey();\r\n    addComponent(comp: string): Icomponent {\r\n        let newComp = Ecs.addComp(this, comp);\r\n        return newComp;\r\n    }\r\n    getComponent(comp: string) { return (this as any)[comp] }\r\n    removeComponent(comp: string): void {\r\n        Ecs.removeComp(this, comp);\r\n    }\r\n\r\n    traverse(handler: (e: Entity) => boolean, includeSelf: boolean = true) {\r\n        let _continue = true;\r\n        if (includeSelf) {\r\n            _continue = handler(this);\r\n        }\r\n        if (_continue !== false) {\r\n            let child;\r\n            for (let i = 0; i < this.children.length; i++) {\r\n                child = this.children[i] as Entity;\r\n                child.traverse(handler, true);\r\n            }\r\n        }\r\n    }\r\n\r\n    find(check: (e: Entity) => boolean) {\r\n        if (check(this)) return this;\r\n        let child: Entity, result: Entity;\r\n        for (let i = 0; i < this.children.length; i++) {\r\n            child = this.children[i] as Entity;\r\n            result = child.find(check);\r\n            if (result) break;\r\n        }\r\n        return result;\r\n    }\r\n\r\n    findInParents(check: (e: Entity) => boolean) {\r\n        if (check(this)) {\r\n            return this\r\n        } else {\r\n            let result: Entity;\r\n            if (this.parent) {\r\n                result = (this.parent as Entity).findInParents(check) as Entity;\r\n            }\r\n            return result;\r\n        }\r\n    }\r\n\r\n    clone(): Entity {\r\n        //TODO\r\n        return new Entity();\r\n    }\r\n}\r\n","import { LayerComposition } from \"./LayerComposition\";\r\nimport { MeshInstance } from \"./primitive/MeshInstance\";\r\nimport { ForwardRender } from \"./render/ForwardRender\";\r\nimport { Camera } from \"./Camera\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { EventHandler } from \"../core/Event\";\r\nimport { UniformState } from \"./UniformState\";\r\n\r\nexport class InterScene {\r\n\r\n    private _cameras: Map<string, Camera> = new Map();\r\n    tryAddCamera(cam: Camera) {\r\n        if (!this._cameras.has(cam.id)) {\r\n            this._cameras.set(cam.id, cam)\r\n        }\r\n    }\r\n    get cameras() { return this._cameras }\r\n\r\n    private render: ForwardRender;\r\n    constructor(render: ForwardRender) {\r\n        this.render = render;\r\n    }\r\n    private root: Entity = new Entity();\r\n    createChild(): Entity {\r\n        let trans = new Entity();\r\n        this.root.addChild(trans);\r\n        return trans;\r\n    }\r\n\r\n    addChild(item: Entity) {\r\n        this.root.addChild(item);\r\n    }\r\n\r\n    createCamera() {\r\n        let cam = new Camera();\r\n        cam.node = this.createChild();\r\n        this.tryAddCamera(cam);\r\n        return cam;\r\n    }\r\n}","/**\r\n * Enum containing WebGL Constant values by name.\r\n * for use without an active WebGL context, or in cases where certain constants are unavailable using the WebGL context\r\n * (For example, in [Safari 9]{@link https://github.com/AnalyticalGraphicsInc/cesium/issues/2989}).\r\n *\r\n * These match the constants from the [WebGL 1.0]{@link https://www.khronos.org/registry/webgl/specs/latest/1.0/}\r\n * and [WebGL 2.0]{@link https://www.khronos.org/registry/webgl/specs/latest/2.0/}\r\n * specifications.\r\n */\r\nexport enum GlConstants {\r\n    DEPTH_BUFFER_BIT = 0x00000100,\r\n    STENCIL_BUFFER_BIT = 0x00000400,\r\n    COLOR_BUFFER_BIT = 0x00004000,\r\n    POINTS = 0x0000,\r\n    LINES = 0x0001,\r\n    LINE_LOOP = 0x0002,\r\n    LINE_STRIP = 0x0003,\r\n    TRIANGLES = 0x0004,\r\n    TRIANGLE_STRIP = 0x0005,\r\n    TRIANGLE_FAN = 0x0006,\r\n    ZERO = 0,\r\n    ONE = 1,\r\n    SRC_COLOR = 0x0300,\r\n    ONE_MINUS_SRC_COLOR = 0x0301,\r\n    SRC_ALPHA = 0x0302,\r\n    ONE_MINUS_SRC_ALPHA = 0x0303,\r\n    DST_ALPHA = 0x0304,\r\n    ONE_MINUS_DST_ALPHA = 0x0305,\r\n    DST_COLOR = 0x0306,\r\n    ONE_MINUS_DST_COLOR = 0x0307,\r\n    SRC_ALPHA_SATURATE = 0x0308,\r\n    FUNC_ADD = 0x8006,\r\n    BLEND_EQUATION = 0x8009,\r\n    BLEND_EQUATION_RGB = 0x8009, // same as BLEND_EQUATION\r\n    BLEND_EQUATION_ALPHA = 0x883d,\r\n    FUNC_SUBTRACT = 0x800a,\r\n    FUNC_REVERSE_SUBTRACT = 0x800b,\r\n    BLEND_DST_RGB = 0x80c8,\r\n    BLEND_SRC_RGB = 0x80c9,\r\n    BLEND_DST_ALPHA = 0x80ca,\r\n    BLEND_SRC_ALPHA = 0x80cb,\r\n    CONSTANT_COLOR = 0x8001,\r\n    ONE_MINUS_CONSTANT_COLOR = 0x8002,\r\n    CONSTANT_ALPHA = 0x8003,\r\n    ONE_MINUS_CONSTANT_ALPHA = 0x8004,\r\n    BLEND_COLOR = 0x8005,\r\n    ARRAY_BUFFER = 0x8892,\r\n    ELEMENT_ARRAY_BUFFER = 0x8893,\r\n    ARRAY_BUFFER_BINDING = 0x8894,\r\n    ELEMENT_ARRAY_BUFFER_BINDING = 0x8895,\r\n    STREAM_DRAW = 0x88e0,\r\n    STATIC_DRAW = 0x88e4,\r\n    DYNAMIC_DRAW = 0x88e8,\r\n    BUFFER_SIZE = 0x8764,\r\n    BUFFER_USAGE = 0x8765,\r\n    CURRENT_VERTEX_ATTRIB = 0x8626,\r\n    FRONT = 0x0404,\r\n    BACK = 0x0405,\r\n    FRONT_AND_BACK = 0x0408,\r\n    CULL_FACE = 0x0b44,\r\n    BLEND = 0x0be2,\r\n    DITHER = 0x0bd0,\r\n    STENCIL_TEST = 0x0b90,\r\n    DEPTH_TEST = 0x0b71,\r\n    SCISSOR_TEST = 0x0c11,\r\n    POLYGON_OFFSET_FILL = 0x8037,\r\n    SAMPLE_ALPHA_TO_COVERAGE = 0x809e,\r\n    SAMPLE_COVERAGE = 0x80a0,\r\n    NO_ERROR = 0,\r\n    INVALID_ENUM = 0x0500,\r\n    INVALID_VALUE = 0x0501,\r\n    INVALID_OPERATION = 0x0502,\r\n    OUT_OF_MEMORY = 0x0505,\r\n    CW = 0x0900,\r\n    CCW = 0x0901,\r\n    LINE_WIDTH = 0x0b21,\r\n    ALIASED_POINT_SIZE_RANGE = 0x846d,\r\n    ALIASED_LINE_WIDTH_RANGE = 0x846e,\r\n    CULL_FACE_MODE = 0x0b45,\r\n    FRONT_FACE = 0x0b46,\r\n    DEPTH_RANGE = 0x0b70,\r\n    DEPTH_WRITEMASK = 0x0b72,\r\n    DEPTH_CLEAR_VALUE = 0x0b73,\r\n    DEPTH_FUNC = 0x0b74,\r\n    STENCIL_CLEAR_VALUE = 0x0b91,\r\n    STENCIL_FUNC = 0x0b92,\r\n    STENCIL_FAIL = 0x0b94,\r\n    STENCIL_PASS_DEPTH_FAIL = 0x0b95,\r\n    STENCIL_PASS_DEPTH_PASS = 0x0b96,\r\n    STENCIL_REF = 0x0b97,\r\n    STENCIL_VALUE_MASK = 0x0b93,\r\n    STENCIL_WRITEMASK = 0x0b98,\r\n    STENCIL_BACK_FUNC = 0x8800,\r\n    STENCIL_BACK_FAIL = 0x8801,\r\n    STENCIL_BACK_PASS_DEPTH_FAIL = 0x8802,\r\n    STENCIL_BACK_PASS_DEPTH_PASS = 0x8803,\r\n    STENCIL_BACK_REF = 0x8ca3,\r\n    STENCIL_BACK_VALUE_MASK = 0x8ca4,\r\n    STENCIL_BACK_WRITEMASK = 0x8ca5,\r\n    VIEWPORT = 0x0ba2,\r\n    SCISSOR_BOX = 0x0c10,\r\n    COLOR_CLEAR_VALUE = 0x0c22,\r\n    COLOR_WRITEMASK = 0x0c23,\r\n    UNPACK_ALIGNMENT = 0x0cf5,\r\n    PACK_ALIGNMENT = 0x0d05,\r\n    MAX_TEXTURE_SIZE = 0x0d33,\r\n    MAX_VIEWPORT_DIMS = 0x0d3a,\r\n    SUBPIXEL_BITS = 0x0d50,\r\n    RED_BITS = 0x0d52,\r\n    GREEN_BITS = 0x0d53,\r\n    BLUE_BITS = 0x0d54,\r\n    ALPHA_BITS = 0x0d55,\r\n    DEPTH_BITS = 0x0d56,\r\n    STENCIL_BITS = 0x0d57,\r\n    POLYGON_OFFSET_UNITS = 0x2a00,\r\n    POLYGON_OFFSET_FACTOR = 0x8038,\r\n    TEXTURE_BINDING_2D = 0x8069,\r\n    SAMPLE_BUFFERS = 0x80a8,\r\n    SAMPLES = 0x80a9,\r\n    SAMPLE_COVERAGE_VALUE = 0x80aa,\r\n    SAMPLE_COVERAGE_INVERT = 0x80ab,\r\n    COMPRESSED_TEXTURE_FORMATS = 0x86a3,\r\n    DONT_CARE = 0x1100,\r\n    FASTEST = 0x1101,\r\n    NICEST = 0x1102,\r\n    GENERATE_MIPMAP_HINT = 0x8192,\r\n    BYTE = 0x1400,\r\n    UNSIGNED_BYTE = 0x1401,\r\n    SHORT = 0x1402,\r\n    UNSIGNED_SHORT = 0x1403,\r\n    INT = 0x1404,\r\n    UNSIGNED_INT = 0x1405,\r\n    FLOAT = 0x1406,\r\n    DEPTH_COMPONENT = 0x1902,\r\n    ALPHA = 0x1906,\r\n    RGB = 0x1907,\r\n    RGBA = 0x1908,\r\n    LUMINANCE = 0x1909,\r\n    LUMINANCE_ALPHA = 0x190a,\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    FRAGMENT_SHADER = 0x8b30,\r\n    VERTEX_SHADER = 0x8b31,\r\n    MAX_VERTEX_ATTRIBS = 0x8869,\r\n    MAX_VERTEX_UNIFORM_VECTORS = 0x8dfb,\r\n    MAX_VARYING_VECTORS = 0x8dfc,\r\n    MAX_COMBINED_TEXTURE_IMAGE_UNITS = 0x8b4d,\r\n    MAX_VERTEX_TEXTURE_IMAGE_UNITS = 0x8b4c,\r\n    MAX_TEXTURE_IMAGE_UNITS = 0x8872,\r\n    MAX_FRAGMENT_UNIFORM_VECTORS = 0x8dfd,\r\n    SHADER_TYPE = 0x8b4f,\r\n    DELETE_STATUS = 0x8b80,\r\n    LINK_STATUS = 0x8b82,\r\n    VALIDATE_STATUS = 0x8b83,\r\n    ATTACHED_SHADERS = 0x8b85,\r\n    ACTIVE_UNIFORMS = 0x8b86,\r\n    ACTIVE_ATTRIBUTES = 0x8b89,\r\n    SHADING_LANGUAGE_VERSION = 0x8b8c,\r\n    CURRENT_PROGRAM = 0x8b8d,\r\n    NEVER = 0x0200,\r\n    LESS = 0x0201,\r\n    EQUAL = 0x0202,\r\n    LEQUAL = 0x0203,\r\n    GREATER = 0x0204,\r\n    NOTEQUAL = 0x0205,\r\n    GEQUAL = 0x0206,\r\n    ALWAYS = 0x0207,\r\n    KEEP = 0x1e00,\r\n    REPLACE = 0x1e01,\r\n    INCR = 0x1e02,\r\n    DECR = 0x1e03,\r\n    INVERT = 0x150a,\r\n    INCR_WRAP = 0x8507,\r\n    DECR_WRAP = 0x8508,\r\n    VENDOR = 0x1f00,\r\n    RENDERER = 0x1f01,\r\n    VERSION = 0x1f02,\r\n    NEAREST = 0x2600,\r\n    LINEAR = 0x2601,\r\n    NEAREST_MIPMAP_NEAREST = 0x2700,\r\n    LINEAR_MIPMAP_NEAREST = 0x2701,\r\n    NEAREST_MIPMAP_LINEAR = 0x2702,\r\n    LINEAR_MIPMAP_LINEAR = 0x2703,\r\n    TEXTURE_MAG_FILTER = 0x2800,\r\n    TEXTURE_MIN_FILTER = 0x2801,\r\n    TEXTURE_WRAP_S = 0x2802,\r\n    TEXTURE_WRAP_T = 0x2803,\r\n    TEXTURE_2D = 0x0de1,\r\n    TEXTURE = 0x1702,\r\n    TEXTURE_CUBE_MAP = 0x8513,\r\n    TEXTURE_BINDING_CUBE_MAP = 0x8514,\r\n    TEXTURE_CUBE_MAP_POSITIVE_X = 0x8515,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_X = 0x8516,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Y = 0x8517,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Y = 0x8518,\r\n    TEXTURE_CUBE_MAP_POSITIVE_Z = 0x8519,\r\n    TEXTURE_CUBE_MAP_NEGATIVE_Z = 0x851a,\r\n    MAX_CUBE_MAP_TEXTURE_SIZE = 0x851c,\r\n    TEXTURE0 = 0x84c0,\r\n    TEXTURE1 = 0x84c1,\r\n    TEXTURE2 = 0x84c2,\r\n    TEXTURE3 = 0x84c3,\r\n    TEXTURE4 = 0x84c4,\r\n    TEXTURE5 = 0x84c5,\r\n    TEXTURE6 = 0x84c6,\r\n    TEXTURE7 = 0x84c7,\r\n    TEXTURE8 = 0x84c8,\r\n    TEXTURE9 = 0x84c9,\r\n    TEXTURE10 = 0x84ca,\r\n    TEXTURE11 = 0x84cb,\r\n    TEXTURE12 = 0x84cc,\r\n    TEXTURE13 = 0x84cd,\r\n    TEXTURE14 = 0x84ce,\r\n    TEXTURE15 = 0x84cf,\r\n    TEXTURE16 = 0x84d0,\r\n    TEXTURE17 = 0x84d1,\r\n    TEXTURE18 = 0x84d2,\r\n    TEXTURE19 = 0x84d3,\r\n    TEXTURE20 = 0x84d4,\r\n    TEXTURE21 = 0x84d5,\r\n    TEXTURE22 = 0x84d6,\r\n    TEXTURE23 = 0x84d7,\r\n    TEXTURE24 = 0x84d8,\r\n    TEXTURE25 = 0x84d9,\r\n    TEXTURE26 = 0x84da,\r\n    TEXTURE27 = 0x84db,\r\n    TEXTURE28 = 0x84dc,\r\n    TEXTURE29 = 0x84dd,\r\n    TEXTURE30 = 0x84de,\r\n    TEXTURE31 = 0x84df,\r\n    ACTIVE_TEXTURE = 0x84e0,\r\n    REPEAT = 0x2901,\r\n    CLAMP_TO_EDGE = 0x812f,\r\n    MIRRORED_REPEAT = 0x8370,\r\n    FLOAT_VEC2 = 0x8b50,\r\n    FLOAT_VEC3 = 0x8b51,\r\n    FLOAT_VEC4 = 0x8b52,\r\n    INT_VEC2 = 0x8b53,\r\n    INT_VEC3 = 0x8b54,\r\n    INT_VEC4 = 0x8b55,\r\n    BOOL = 0x8b56,\r\n    BOOL_VEC2 = 0x8b57,\r\n    BOOL_VEC3 = 0x8b58,\r\n    BOOL_VEC4 = 0x8b59,\r\n    FLOAT_MAT2 = 0x8b5a,\r\n    FLOAT_MAT3 = 0x8b5b,\r\n    FLOAT_MAT4 = 0x8b5c,\r\n    SAMPLER_2D = 0x8b5e,\r\n    SAMPLER_CUBE = 0x8b60,\r\n    VERTEX_ATTRIB_ARRAY_ENABLED = 0x8622,\r\n    VERTEX_ATTRIB_ARRAY_SIZE = 0x8623,\r\n    VERTEX_ATTRIB_ARRAY_STRIDE = 0x8624,\r\n    VERTEX_ATTRIB_ARRAY_TYPE = 0x8625,\r\n    VERTEX_ATTRIB_ARRAY_NORMALIZED = 0x886a,\r\n    VERTEX_ATTRIB_ARRAY_POINTER = 0x8645,\r\n    VERTEX_ATTRIB_ARRAY_BUFFER_BINDING = 0x889f,\r\n    IMPLEMENTATION_COLOR_READ_TYPE = 0x8b9a,\r\n    IMPLEMENTATION_COLOR_READ_FORMAT = 0x8b9b,\r\n    COMPILE_STATUS = 0x8b81,\r\n    LOW_FLOAT = 0x8df0,\r\n    MEDIUM_FLOAT = 0x8df1,\r\n    HIGH_FLOAT = 0x8df2,\r\n    LOW_INT = 0x8df3,\r\n    MEDIUM_INT = 0x8df4,\r\n    HIGH_INT = 0x8df5,\r\n    FRAMEBUFFER = 0x8d40,\r\n    RENDERBUFFER = 0x8d41,\r\n    RGBA4 = 0x8056,\r\n    RGB5_A1 = 0x8057,\r\n    RGB565 = 0x8d62,\r\n    DEPTH_COMPONENT16 = 0x81a5,\r\n    STENCIL_INDEX = 0x1901,\r\n    STENCIL_INDEX8 = 0x8d48,\r\n    DEPTH_STENCIL = 0x84f9,\r\n    RENDERBUFFER_WIDTH = 0x8d42,\r\n    RENDERBUFFER_HEIGHT = 0x8d43,\r\n    RENDERBUFFER_INTERNAL_FORMAT = 0x8d44,\r\n    RENDERBUFFER_RED_SIZE = 0x8d50,\r\n    RENDERBUFFER_GREEN_SIZE = 0x8d51,\r\n    RENDERBUFFER_BLUE_SIZE = 0x8d52,\r\n    RENDERBUFFER_ALPHA_SIZE = 0x8d53,\r\n    RENDERBUFFER_DEPTH_SIZE = 0x8d54,\r\n    RENDERBUFFER_STENCIL_SIZE = 0x8d55,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_TYPE = 0x8cd0,\r\n    FRAMEBUFFER_ATTACHMENT_OBJECT_NAME = 0x8cd1,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LEVEL = 0x8cd2,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_CUBE_MAP_FACE = 0x8cd3,\r\n    COLOR_ATTACHMENT0 = 0x8ce0,\r\n    DEPTH_ATTACHMENT = 0x8d00,\r\n    STENCIL_ATTACHMENT = 0x8d20,\r\n    DEPTH_STENCIL_ATTACHMENT = 0x821a,\r\n    NONE = 0,\r\n    FRAMEBUFFER_COMPLETE = 0x8cd5,\r\n    FRAMEBUFFER_INCOMPLETE_ATTACHMENT = 0x8cd6,\r\n    FRAMEBUFFER_INCOMPLETE_MISSING_ATTACHMENT = 0x8cd7,\r\n    FRAMEBUFFER_INCOMPLETE_DIMENSIONS = 0x8cd9,\r\n    FRAMEBUFFER_UNSUPPORTED = 0x8cdd,\r\n    FRAMEBUFFER_BINDING = 0x8ca6,\r\n    RENDERBUFFER_BINDING = 0x8ca7,\r\n    MAX_RENDERBUFFER_SIZE = 0x84e8,\r\n    INVALID_FRAMEBUFFER_OPERATION = 0x0506,\r\n    UNPACK_FLIP_Y_WEBGL = 0x9240,\r\n    UNPACK_PREMULTIPLY_ALPHA_WEBGL = 0x9241,\r\n    CONTEXT_LOST_WEBGL = 0x9242,\r\n    UNPACK_COLORSPACE_CONVERSION_WEBGL = 0x9243,\r\n    BROWSER_DEFAULT_WEBGL = 0x9244,\r\n\r\n    // WEBGL_compressed_texture_s3tc\r\n    COMPRESSED_RGB_S3TC_DXT1_EXT = 0x83f0,\r\n    COMPRESSED_RGBA_S3TC_DXT1_EXT = 0x83f1,\r\n    COMPRESSED_RGBA_S3TC_DXT3_EXT = 0x83f2,\r\n    COMPRESSED_RGBA_S3TC_DXT5_EXT = 0x83f3,\r\n\r\n    // WEBGL_compressed_texture_pvrtc\r\n    COMPRESSED_RGB_PVRTC_4BPPV1_IMG = 0x8c00,\r\n    COMPRESSED_RGB_PVRTC_2BPPV1_IMG = 0x8c01,\r\n    COMPRESSED_RGBA_PVRTC_4BPPV1_IMG = 0x8c02,\r\n    COMPRESSED_RGBA_PVRTC_2BPPV1_IMG = 0x8c03,\r\n\r\n    // WEBGL_compressed_texture_etc1\r\n    COMPRESSED_RGB_ETC1_WEBGL = 0x8d64,\r\n\r\n    // Desktop OpenGL\r\n    DOUBLE = 0x140a,\r\n\r\n    // WebGL 2\r\n    READ_BUFFER = 0x0c02,\r\n    UNPACK_ROW_LENGTH = 0x0cf2,\r\n    UNPACK_SKIP_ROWS = 0x0cf3,\r\n    UNPACK_SKIP_PIXELS = 0x0cf4,\r\n    PACK_ROW_LENGTH = 0x0d02,\r\n    PACK_SKIP_ROWS = 0x0d03,\r\n    PACK_SKIP_PIXELS = 0x0d04,\r\n    COLOR = 0x1800,\r\n    DEPTH = 0x1801,\r\n    STENCIL = 0x1802,\r\n    RED = 0x1903,\r\n    RGB8 = 0x8051,\r\n    RGBA8 = 0x8058,\r\n    RGB10_A2 = 0x8059,\r\n    TEXTURE_BINDING_3D = 0x806a,\r\n    UNPACK_SKIP_IMAGES = 0x806d,\r\n    UNPACK_IMAGE_HEIGHT = 0x806e,\r\n    TEXTURE_3D = 0x806f,\r\n    TEXTURE_WRAP_R = 0x8072,\r\n    MAX_3D_TEXTURE_SIZE = 0x8073,\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    MAX_ELEMENTS_VERTICES = 0x80e8,\r\n    MAX_ELEMENTS_INDICES = 0x80e9,\r\n    TEXTURE_MIN_LOD = 0x813a,\r\n    TEXTURE_MAX_LOD = 0x813b,\r\n    TEXTURE_BASE_LEVEL = 0x813c,\r\n    TEXTURE_MAX_LEVEL = 0x813d,\r\n    MIN = 0x8007,\r\n    MAX = 0x8008,\r\n    DEPTH_COMPONENT24 = 0x81a6,\r\n    MAX_TEXTURE_LOD_BIAS = 0x84fd,\r\n    TEXTURE_COMPARE_MODE = 0x884c,\r\n    TEXTURE_COMPARE_FUNC = 0x884d,\r\n    CURRENT_QUERY = 0x8865,\r\n    QUERY_RESULT = 0x8866,\r\n    QUERY_RESULT_AVAILABLE = 0x8867,\r\n    STREAM_READ = 0x88e1,\r\n    STREAM_COPY = 0x88e2,\r\n    STATIC_READ = 0x88e5,\r\n    STATIC_COPY = 0x88e6,\r\n    DYNAMIC_READ = 0x88e9,\r\n    DYNAMIC_COPY = 0x88ea,\r\n    MAX_DRAW_BUFFERS = 0x8824,\r\n    DRAW_BUFFER0 = 0x8825,\r\n    DRAW_BUFFER1 = 0x8826,\r\n    DRAW_BUFFER2 = 0x8827,\r\n    DRAW_BUFFER3 = 0x8828,\r\n    DRAW_BUFFER4 = 0x8829,\r\n    DRAW_BUFFER5 = 0x882a,\r\n    DRAW_BUFFER6 = 0x882b,\r\n    DRAW_BUFFER7 = 0x882c,\r\n    DRAW_BUFFER8 = 0x882d,\r\n    DRAW_BUFFER9 = 0x882e,\r\n    DRAW_BUFFER10 = 0x882f,\r\n    DRAW_BUFFER11 = 0x8830,\r\n    DRAW_BUFFER12 = 0x8831,\r\n    DRAW_BUFFER13 = 0x8832,\r\n    DRAW_BUFFER14 = 0x8833,\r\n    DRAW_BUFFER15 = 0x8834,\r\n    MAX_FRAGMENT_UNIFORM_COMPONENTS = 0x8b49,\r\n    MAX_VERTEX_UNIFORM_COMPONENTS = 0x8b4a,\r\n    SAMPLER_3D = 0x8b5f,\r\n    SAMPLER_2D_SHADOW = 0x8b62,\r\n    FRAGMENT_SHADER_DERIVATIVE_HINT = 0x8b8b,\r\n    PIXEL_PACK_BUFFER = 0x88eb,\r\n    PIXEL_UNPACK_BUFFER = 0x88ec,\r\n    PIXEL_PACK_BUFFER_BINDING = 0x88ed,\r\n    PIXEL_UNPACK_BUFFER_BINDING = 0x88ef,\r\n    FLOAT_MAT2X3 = 0x8b65,\r\n    FLOAT_MAT2X4 = 0x8b66,\r\n    FLOAT_MAT3X2 = 0x8b67,\r\n    FLOAT_MAT3X4 = 0x8b68,\r\n    FLOAT_MAT4X2 = 0x8b69,\r\n    FLOAT_MAT4X3 = 0x8b6a,\r\n    SRGB = 0x8c40,\r\n    SRGB8 = 0x8c41,\r\n    SRGB8_ALPHA8 = 0x8c43,\r\n    COMPARE_REF_TO_TEXTURE = 0x884e,\r\n    RGBA32F = 0x8814,\r\n    RGB32F = 0x8815,\r\n    RGBA16F = 0x881a,\r\n    RGB16F = 0x881b,\r\n    VERTEX_ATTRIB_ARRAY_INTEGER = 0x88fd,\r\n    MAX_ARRAY_TEXTURE_LAYERS = 0x88ff,\r\n    MIN_PROGRAM_TEXEL_OFFSET = 0x8904,\r\n    MAX_PROGRAM_TEXEL_OFFSET = 0x8905,\r\n    MAX_VARYING_COMPONENTS = 0x8b4b,\r\n    TEXTURE_2D_ARRAY = 0x8c1a,\r\n    TEXTURE_BINDING_2D_ARRAY = 0x8c1d,\r\n    R11F_G11F_B10F = 0x8c3a,\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b,\r\n    RGB9_E5 = 0x8c3d,\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8c3e,\r\n    TRANSFORM_FEEDBACK_BUFFER_MODE = 0x8c7f,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_COMPONENTS = 0x8c80,\r\n    TRANSFORM_FEEDBACK_VARYINGS = 0x8c83,\r\n    TRANSFORM_FEEDBACK_BUFFER_START = 0x8c84,\r\n    TRANSFORM_FEEDBACK_BUFFER_SIZE = 0x8c85,\r\n    TRANSFORM_FEEDBACK_PRIMITIVES_WRITTEN = 0x8c88,\r\n    RASTERIZER_DISCARD = 0x8c89,\r\n    MAX_TRANSFORM_FEEDBACK_INTERLEAVED_COMPONENTS = 0x8c8a,\r\n    MAX_TRANSFORM_FEEDBACK_SEPARATE_ATTRIBS = 0x8c8b,\r\n    INTERLEAVED_ATTRIBS = 0x8c8c,\r\n    SEPARATE_ATTRIBS = 0x8c8d,\r\n    TRANSFORM_FEEDBACK_BUFFER = 0x8c8e,\r\n    TRANSFORM_FEEDBACK_BUFFER_BINDING = 0x8c8f,\r\n    RGBA32UI = 0x8d70,\r\n    RGB32UI = 0x8d71,\r\n    RGBA16UI = 0x8d76,\r\n    RGB16UI = 0x8d77,\r\n    RGBA8UI = 0x8d7c,\r\n    RGB8UI = 0x8d7d,\r\n    RGBA32I = 0x8d82,\r\n    RGB32I = 0x8d83,\r\n    RGBA16I = 0x8d88,\r\n    RGB16I = 0x8d89,\r\n    RGBA8I = 0x8d8e,\r\n    RGB8I = 0x8d8f,\r\n    RED_INTEGER = 0x8d94,\r\n    RGB_INTEGER = 0x8d98,\r\n    RGBA_INTEGER = 0x8d99,\r\n    SAMPLER_2D_ARRAY = 0x8dc1,\r\n    SAMPLER_2D_ARRAY_SHADOW = 0x8dc4,\r\n    SAMPLER_CUBE_SHADOW = 0x8dc5,\r\n    UNSIGNED_INT_VEC2 = 0x8dc6,\r\n    UNSIGNED_INT_VEC3 = 0x8dc7,\r\n    UNSIGNED_INT_VEC4 = 0x8dc8,\r\n    INT_SAMPLER_2D = 0x8dca,\r\n    INT_SAMPLER_3D = 0x8dcb,\r\n    INT_SAMPLER_CUBE = 0x8dcc,\r\n    INT_SAMPLER_2D_ARRAY = 0x8dcf,\r\n    UNSIGNED_INT_SAMPLER_2D = 0x8dd2,\r\n    UNSIGNED_INT_SAMPLER_3D = 0x8dd3,\r\n    UNSIGNED_INT_SAMPLER_CUBE = 0x8dd4,\r\n    UNSIGNED_INT_SAMPLER_2D_ARRAY = 0x8dd7,\r\n    DEPTH_COMPONENT32F = 0x8cac,\r\n    DEPTH32F_STENCIL8 = 0x8cad,\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad,\r\n    FRAMEBUFFER_ATTACHMENT_COLOR_ENCODING = 0x8210,\r\n    FRAMEBUFFER_ATTACHMENT_COMPONENT_TYPE = 0x8211,\r\n    FRAMEBUFFER_ATTACHMENT_RED_SIZE = 0x8212,\r\n    FRAMEBUFFER_ATTACHMENT_GREEN_SIZE = 0x8213,\r\n    FRAMEBUFFER_ATTACHMENT_BLUE_SIZE = 0x8214,\r\n    FRAMEBUFFER_ATTACHMENT_ALPHA_SIZE = 0x8215,\r\n    FRAMEBUFFER_ATTACHMENT_DEPTH_SIZE = 0x8216,\r\n    FRAMEBUFFER_ATTACHMENT_STENCIL_SIZE = 0x8217,\r\n    FRAMEBUFFER_DEFAULT = 0x8218,\r\n    UNSIGNED_INT_24_8 = 0x84fa,\r\n    DEPTH24_STENCIL8 = 0x88f0,\r\n    UNSIGNED_NORMALIZED = 0x8c17,\r\n    DRAW_FRAMEBUFFER_BINDING = 0x8ca6, // Same as FRAMEBUFFER_BINDING\r\n    READ_FRAMEBUFFER = 0x8ca8,\r\n    DRAW_FRAMEBUFFER = 0x8ca9,\r\n    READ_FRAMEBUFFER_BINDING = 0x8caa,\r\n    RENDERBUFFER_SAMPLES = 0x8cab,\r\n    FRAMEBUFFER_ATTACHMENT_TEXTURE_LAYER = 0x8cd4,\r\n    MAX_COLOR_ATTACHMENTS = 0x8cdf,\r\n    COLOR_ATTACHMENT1 = 0x8ce1,\r\n    COLOR_ATTACHMENT2 = 0x8ce2,\r\n    COLOR_ATTACHMENT3 = 0x8ce3,\r\n    COLOR_ATTACHMENT4 = 0x8ce4,\r\n    COLOR_ATTACHMENT5 = 0x8ce5,\r\n    COLOR_ATTACHMENT6 = 0x8ce6,\r\n    COLOR_ATTACHMENT7 = 0x8ce7,\r\n    COLOR_ATTACHMENT8 = 0x8ce8,\r\n    COLOR_ATTACHMENT9 = 0x8ce9,\r\n    COLOR_ATTACHMENT10 = 0x8cea,\r\n    COLOR_ATTACHMENT11 = 0x8ceb,\r\n    COLOR_ATTACHMENT12 = 0x8cec,\r\n    COLOR_ATTACHMENT13 = 0x8ced,\r\n    COLOR_ATTACHMENT14 = 0x8cee,\r\n    COLOR_ATTACHMENT15 = 0x8cef,\r\n    FRAMEBUFFER_INCOMPLETE_MULTISAMPLE = 0x8d56,\r\n    MAX_SAMPLES = 0x8d57,\r\n    HALF_FLOAT = 0x140b,\r\n    HALF_FLOAT_OES = 0x8d61,\r\n    RG = 0x8227,\r\n    RG_INTEGER = 0x8228,\r\n    R8 = 0x8229,\r\n    RG8 = 0x822b,\r\n    R16F = 0x822d,\r\n    R32F = 0x822e,\r\n    RG16F = 0x822f,\r\n    RG32F = 0x8230,\r\n    R8I = 0x8231,\r\n    R8UI = 0x8232,\r\n    R16I = 0x8233,\r\n    R16UI = 0x8234,\r\n    R32I = 0x8235,\r\n    R32UI = 0x8236,\r\n    RG8I = 0x8237,\r\n    RG8UI = 0x8238,\r\n    RG16I = 0x8239,\r\n    RG16UI = 0x823a,\r\n    RG32I = 0x823b,\r\n    RG32UI = 0x823c,\r\n    VERTEX_ARRAY_BINDING = 0x85b5,\r\n    R8_SNORM = 0x8f94,\r\n    RG8_SNORM = 0x8f95,\r\n    RGB8_SNORM = 0x8f96,\r\n    RGBA8_SNORM = 0x8f97,\r\n    SIGNED_NORMALIZED = 0x8f9c,\r\n    COPY_READ_BUFFER = 0x8f36,\r\n    COPY_WRITE_BUFFER = 0x8f37,\r\n    COPY_READ_BUFFER_BINDING = 0x8f36, // Same as COPY_READ_BUFFER\r\n    COPY_WRITE_BUFFER_BINDING = 0x8f37, // Same as COPY_WRITE_BUFFER\r\n    UNIFORM_BUFFER = 0x8a11,\r\n    UNIFORM_BUFFER_BINDING = 0x8a28,\r\n    UNIFORM_BUFFER_START = 0x8a29,\r\n    UNIFORM_BUFFER_SIZE = 0x8a2a,\r\n    MAX_VERTEX_UNIFORM_BLOCKS = 0x8a2b,\r\n    MAX_FRAGMENT_UNIFORM_BLOCKS = 0x8a2d,\r\n    MAX_COMBINED_UNIFORM_BLOCKS = 0x8a2e,\r\n    MAX_UNIFORM_BUFFER_BINDINGS = 0x8a2f,\r\n    MAX_UNIFORM_BLOCK_SIZE = 0x8a30,\r\n    MAX_COMBINED_VERTEX_UNIFORM_COMPONENTS = 0x8a31,\r\n    MAX_COMBINED_FRAGMENT_UNIFORM_COMPONENTS = 0x8a33,\r\n    UNIFORM_BUFFER_OFFSET_ALIGNMENT = 0x8a34,\r\n    ACTIVE_UNIFORM_BLOCKS = 0x8a36,\r\n    UNIFORM_TYPE = 0x8a37,\r\n    UNIFORM_SIZE = 0x8a38,\r\n    UNIFORM_BLOCK_INDEX = 0x8a3a,\r\n    UNIFORM_OFFSET = 0x8a3b,\r\n    UNIFORM_ARRAY_STRIDE = 0x8a3c,\r\n    UNIFORM_MATRIX_STRIDE = 0x8a3d,\r\n    UNIFORM_IS_ROW_MAJOR = 0x8a3e,\r\n    UNIFORM_BLOCK_BINDING = 0x8a3f,\r\n    UNIFORM_BLOCK_DATA_SIZE = 0x8a40,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORMS = 0x8a42,\r\n    UNIFORM_BLOCK_ACTIVE_UNIFORM_INDICES = 0x8a43,\r\n    UNIFORM_BLOCK_REFERENCED_BY_VERTEX_SHADER = 0x8a44,\r\n    UNIFORM_BLOCK_REFERENCED_BY_FRAGMENT_SHADER = 0x8a46,\r\n    INVALID_INDEX = 0xffffffff,\r\n    MAX_VERTEX_OUTPUT_COMPONENTS = 0x9122,\r\n    MAX_FRAGMENT_INPUT_COMPONENTS = 0x9125,\r\n    MAX_SERVER_WAIT_TIMEOUT = 0x9111,\r\n    OBJECT_TYPE = 0x9112,\r\n    SYNC_CONDITION = 0x9113,\r\n    SYNC_STATUS = 0x9114,\r\n    SYNC_FLAGS = 0x9115,\r\n    SYNC_FENCE = 0x9116,\r\n    SYNC_GPU_COMMANDS_COMPLETE = 0x9117,\r\n    UNSIGNALED = 0x9118,\r\n    SIGNALED = 0x9119,\r\n    ALREADY_SIGNALED = 0x911a,\r\n    TIMEOUT_EXPIRED = 0x911b,\r\n    CONDITION_SATISFIED = 0x911c,\r\n    WAIT_FAILED = 0x911d,\r\n    SYNC_FLUSH_COMMANDS_BIT = 0x00000001,\r\n    VERTEX_ATTRIB_ARRAY_DIVISOR = 0x88fe,\r\n    ANY_SAMPLES_PASSED = 0x8c2f,\r\n    ANY_SAMPLES_PASSED_CONSERVATIVE = 0x8d6a,\r\n    SAMPLER_BINDING = 0x8919,\r\n    RGB10_A2UI = 0x906f,\r\n    INT_2_10_10_10_REV = 0x8d9f,\r\n    TRANSFORM_FEEDBACK = 0x8e22,\r\n    TRANSFORM_FEEDBACK_PAUSED = 0x8e23,\r\n    TRANSFORM_FEEDBACK_ACTIVE = 0x8e24,\r\n    TRANSFORM_FEEDBACK_BINDING = 0x8e25,\r\n    COMPRESSED_R11_EAC = 0x9270,\r\n    COMPRESSED_SIGNED_R11_EAC = 0x9271,\r\n    COMPRESSED_RG11_EAC = 0x9272,\r\n    COMPRESSED_SIGNED_RG11_EAC = 0x9273,\r\n    COMPRESSED_RGB8_ETC2 = 0x9274,\r\n    COMPRESSED_SRGB8_ETC2 = 0x9275,\r\n    COMPRESSED_RGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9276,\r\n    COMPRESSED_SRGB8_PUNCHTHROUGH_ALPHA1_ETC2 = 0x9277,\r\n    COMPRESSED_RGBA8_ETC2_EAC = 0x9278,\r\n    COMPRESSED_SRGB8_ALPHA8_ETC2_EAC = 0x9279,\r\n    TEXTURE_IMMUTABLE_FORMAT = 0x912f,\r\n    MAX_ELEMENT_INDEX = 0x8d6b,\r\n    TEXTURE_IMMUTABLE_LEVELS = 0x82df,\r\n\r\n    // Extensions\r\n    MAX_TEXTURE_MAX_ANISOTROPY_EXT = 0x84ff,\r\n}\r\n","import { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { GlConstants } from \"./GLconstant\";\r\n\r\n/* eslint-disable @typescript-eslint/class-name-casing */\r\n/* eslint-disable @typescript-eslint/camelcase */\r\nexport class DeviceCapability\r\n{\r\n    /** Maximum textures units per fragment shader */\r\n    public maxTexturesImageUnits: number;\r\n    /** Maximum texture units per vertex shader */\r\n    public maxVertexTextureImageUnits: number;\r\n    /** Maximum textures units in the entire pipeline */\r\n    public maxCombinedTexturesImageUnits: number;\r\n    /** Maximum texture size */\r\n    public maxTextureSize: number;\r\n    /** Maximum cube texture size */\r\n    public maxCubemapTextureSize: number;\r\n    /** Maximum render texture size */\r\n    public maxRenderTextureSize: number;\r\n    /** Maximum number of vertex attributes */\r\n    public maxVertexAttribs: number;\r\n    /** Maximum number of varyings */\r\n    public maxVaryingVectors: number;\r\n    /** Maximum number of uniforms per vertex shader */\r\n    public maxVertexUniformVectors: number;\r\n    /** Maximum number of uniforms per fragment shader */\r\n    public maxFragmentUniformVectors: number;\r\n    /** Defines if standard derivates (dx/dy) are supported */\r\n    public standardDerivatives: boolean;\r\n    /** Defines if s3tc texture compression is supported */\r\n    public s3tc: WEBGL_compressed_texture_s3tc;\r\n    /** Defines if pvrtc texture compression is supported */\r\n    public pvrtc: any; //WEBGL_compressed_texture_pvrtc;\r\n    /** Defines if etc1 texture compression is supported */\r\n    public etc1: any; //WEBGL_compressed_texture_etc1;\r\n    /** Defines if etc2 texture compression is supported */\r\n    public etc2: any; //WEBGL_compressed_texture_etc;\r\n    /** Defines if astc texture compression is supported */\r\n    public astc: any; //WEBGL_compressed_texture_astc;\r\n    /** Defines if float textures are supported */\r\n    public textureFloat: boolean;\r\n    /** Defines if vertex array objects are supported */\r\n    public vertexArrayObject: boolean;\r\n    /** Gets the webgl extension for anisotropic filtering (null if not supported) */\r\n    public textureAnisotropicFilterExtension: EXT_texture_filter_anisotropic;\r\n    /** Gets the maximum level of anisotropy supported */\r\n    public maxAnisotropy: number;\r\n    /** Defines if instancing is supported */\r\n    public instancedArrays: boolean;\r\n    /** Defines if 32 bits indices are supported */\r\n    public uintIndices: boolean;\r\n    /** Defines if high precision shaders are supported */\r\n    public highPrecisionShaderSupported: boolean;\r\n    /** Defines if depth reading in the fragment shader is supported */\r\n    public fragmentDepthSupported: boolean;\r\n    /** Defines if float texture linear filtering is supported*/\r\n    public textureFloatLinearFiltering: boolean;\r\n    /** Defines if rendering to float textures is supported */\r\n    public textureFloatRender: boolean;\r\n    /** Defines if half float textures are supported*/\r\n    public textureHalfFloat: boolean;\r\n    /** Defines if half float texture linear filtering is supported*/\r\n    public textureHalfFloatLinearFiltering: boolean;\r\n    /** Defines if rendering to half float textures is supported */\r\n    public textureHalfFloatRender: boolean;\r\n    /** Defines if textureLOD shader command is supported */\r\n    public textureLOD: boolean;\r\n    /** Defines if draw buffers extension is supported */\r\n    public drawBuffersExtension: boolean;\r\n    /** Defines if depth textures are supported */\r\n    public depthTexture: boolean;\r\n    /** Defines if float color buffer are supported */\r\n    public colorBufferFloat: boolean;\r\n    /** Gets disjoint timer query extension (null if not supported) */\r\n    public timerQuery: EXT_disjoint_timer_query;\r\n    /** Defines if timestamp can be used with timer query */\r\n    public canUseTimestampForTimerQuery: boolean;\r\n    /** Defines if multiview is supported (https://www.khronos.org/registry/webgl/extensions/WEBGL_multiview/) */\r\n    public multiview: any;\r\n    /** Function used to let the system compiles shaders in background */\r\n    public parallelShaderCompile: {\r\n        COMPLETION_STATUS_KHR: number;\r\n    };\r\n    /** Max number of texture samples for MSAA */\r\n    public maxMSAASamples = 1;\r\n\r\n    constructor(context: GraphicsDevice)\r\n    {\r\n        let _gl = context.gl;\r\n        let _webGLVersion = context.webGLVersion;\r\n        // Extensions\r\n        this.standardDerivatives = _webGLVersion > 1 || _gl.getExtension(\"OES_standard_derivatives\") !== null;\r\n        this.astc =\r\n            _gl.getExtension(\"WEBGL_compressed_texture_astc\") ||\r\n            _gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_astc\");\r\n        this.s3tc =\r\n            _gl.getExtension(\"WEBGL_compressed_texture_s3tc\") ||\r\n            _gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_s3tc\");\r\n        this.pvrtc =\r\n            _gl.getExtension(\"WEBGL_compressed_texture_pvrtc\") ||\r\n            _gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_pvrtc\");\r\n        this.etc1 =\r\n            _gl.getExtension(\"WEBGL_compressed_texture_etc1\") ||\r\n            _gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_etc1\");\r\n        this.etc2 =\r\n            _gl.getExtension(\"WEBGL_compressed_texture_etc\") ||\r\n            _gl.getExtension(\"WEBKIT_WEBGL_compressed_texture_etc\") ||\r\n            _gl.getExtension(\"WEBGL_compressed_texture_es3_0\"); // also a requirement of OpenGL ES 3\r\n\r\n        this.textureAnisotropicFilterExtension =\r\n            _gl.getExtension(\"EXT_texture_filter_anisotropic\") ||\r\n            _gl.getExtension(\"WEBKIT_EXT_texture_filter_anisotropic\") ||\r\n            _gl.getExtension(\"MOZ_EXT_texture_filter_anisotropic\");\r\n        this.maxAnisotropy = this.textureAnisotropicFilterExtension\r\n            ? _gl.getParameter(this.textureAnisotropicFilterExtension.MAX_TEXTURE_MAX_ANISOTROPY_EXT)\r\n            : 0;\r\n        this.uintIndices = _webGLVersion > 1 || _gl.getExtension(\"OES_element_index_uint\") !== null;\r\n        this.fragmentDepthSupported = _webGLVersion > 1 || _gl.getExtension(\"EXT_frag_depth\") !== null;\r\n        this.highPrecisionShaderSupported = false;\r\n        this.timerQuery =\r\n            _gl.getExtension(\"EXT_disjoint_timer_query_webgl2\") || _gl.getExtension(\"EXT_disjoint_timer_query\");\r\n        if (this.timerQuery)\r\n        {\r\n            if (_webGLVersion === 1)\r\n            {\r\n                _gl.getQuery = (this.timerQuery as any).getQueryEXT.bind(this.timerQuery);\r\n            }\r\n            this.canUseTimestampForTimerQuery =\r\n                _gl.getQuery(this.timerQuery.TIMESTAMP_EXT, this.timerQuery.QUERY_COUNTER_BITS_EXT) > 0;\r\n        }\r\n\r\n        // Checks if some of the format renders first to allow the use of webgl inspector.\r\n        this.colorBufferFloat = _webGLVersion > 1 && _gl.getExtension(\"EXT_color_buffer_float\");\r\n\r\n        this.textureFloat = _webGLVersion > 1 || _gl.getExtension(\"OES_texture_float\") ? true : false;\r\n        this.textureFloatLinearFiltering =\r\n            this.textureFloat && _gl.getExtension(\"OES_texture_float_linear\") ? true : false;\r\n        this.textureFloatRender =\r\n            this.textureFloat && this._canRenderToFloatFramebuffer(_gl, _webGLVersion) ? true : false;\r\n\r\n        this.textureHalfFloat = _webGLVersion > 1 || _gl.getExtension(\"OES_texture_half_float\") ? true : false;\r\n        this.textureHalfFloatLinearFiltering =\r\n            _webGLVersion > 1 || (this.textureHalfFloat && _gl.getExtension(\"OES_texture_half_float_linear\"))\r\n                ? true\r\n                : false;\r\n        this.textureHalfFloatRender =\r\n            this.textureHalfFloat && this._canRenderToHalfFloatFramebuffer(_gl, _webGLVersion);\r\n\r\n        this.textureLOD = _webGLVersion > 1 || _gl.getExtension(\"EXT_shader_texture_lod\") ? true : false;\r\n\r\n        this.multiview = _gl.getExtension(\"OVR_multiview2\");\r\n\r\n        // Shader compiler threads\r\n        this.parallelShaderCompile = _gl.getExtension(\"KHR_parallel_shader_compile\");\r\n\r\n        // Depth Texture\r\n        if (_webGLVersion > 1)\r\n        {\r\n            this.depthTexture = true;\r\n        } else\r\n        {\r\n            var depthTextureExtension = _gl.getExtension(\"WEBGL_depth_texture\");\r\n\r\n            if (depthTextureExtension != null)\r\n            {\r\n                this.depthTexture = true;\r\n                // _gl.UNSIGNED_INT_24_8 = depthTextureExtension.UNSIGNED_INT_24_8_WEBGL;\r\n            }\r\n        }\r\n\r\n        // Vertex array object\r\n        if (_webGLVersion > 1)\r\n        {\r\n            this.vertexArrayObject = true;\r\n        } else\r\n        {\r\n            var vertexArrayObjectExtension = _gl.getExtension(\"OES_vertex_array_object\");\r\n\r\n            if (vertexArrayObjectExtension != null)\r\n            {\r\n                this.vertexArrayObject = true;\r\n                _gl.createVertexArray = vertexArrayObjectExtension.createVertexArrayOES.bind(\r\n                    vertexArrayObjectExtension,\r\n                );\r\n                _gl.bindVertexArray = vertexArrayObjectExtension.bindVertexArrayOES.bind(vertexArrayObjectExtension);\r\n                _gl.deleteVertexArray = vertexArrayObjectExtension.deleteVertexArrayOES.bind(\r\n                    vertexArrayObjectExtension,\r\n                );\r\n            } else\r\n            {\r\n                this.vertexArrayObject = false;\r\n            }\r\n        }\r\n\r\n        // Instances count\r\n        if (_webGLVersion > 1)\r\n        {\r\n            this.instancedArrays = true;\r\n        } else\r\n        {\r\n            var instanceExtension = _gl.getExtension(\"ANGLE_instanced_arrays\");\r\n\r\n            if (instanceExtension != null)\r\n            {\r\n                this.instancedArrays = true;\r\n                _gl.drawArraysInstanced = instanceExtension.drawArraysInstancedANGLE.bind(instanceExtension);\r\n                _gl.drawElementsInstanced = instanceExtension.drawElementsInstancedANGLE.bind(instanceExtension);\r\n                _gl.vertexAttribDivisor = instanceExtension.vertexAttribDivisorANGLE.bind(instanceExtension);\r\n            } else\r\n            {\r\n                this.instancedArrays = false;\r\n            }\r\n        }\r\n    }\r\n\r\n    private _canRenderToFloatFramebuffer(_gl: WebGLRenderingContext, _webGLVersion: number): boolean\r\n    {\r\n        if (_webGLVersion > 1)\r\n        {\r\n            return this.colorBufferFloat;\r\n        }\r\n        return CheckCanRenderToFrameBuffer(_gl, GlConstants.FLOAT);\r\n    }\r\n    private _canRenderToHalfFloatFramebuffer(_gl: WebGLRenderingContext, _webGLVersion: number): boolean\r\n    {\r\n        if (_webGLVersion > 1)\r\n        {\r\n            return this.colorBufferFloat;\r\n        }\r\n        return CheckCanRenderToFrameBuffer(_gl, GlConstants.HALF_FLOAT);\r\n    }\r\n}\r\n\r\nexport function CheckCanRenderToFrameBuffer(\r\n    gl: WebGLRenderingContext,\r\n    texType: GlConstants.FLOAT | GlConstants.HALF_FLOAT,\r\n)\r\n{\r\n    while (gl.getError() !== gl.NO_ERROR) { }\r\n\r\n    let successful = true;\r\n\r\n    let texture = gl.createTexture();\r\n    gl.bindTexture(gl.TEXTURE_2D, texture);\r\n    let interFromat = texType === GlConstants.FLOAT ? GlConstants.RGBA32F : GlConstants.RGBA16F;\r\n    gl.texImage2D(gl.TEXTURE_2D, 0, interFromat, 1, 1, 0, gl.RGBA, texType, null);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MIN_FILTER, gl.NEAREST);\r\n    gl.texParameteri(gl.TEXTURE_2D, gl.TEXTURE_MAG_FILTER, gl.NEAREST);\r\n\r\n    let fb = gl.createFramebuffer();\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, fb);\r\n    gl.framebufferTexture2D(gl.FRAMEBUFFER, gl.COLOR_ATTACHMENT0, gl.TEXTURE_2D, texture, 0);\r\n    let status = gl.checkFramebufferStatus(gl.FRAMEBUFFER);\r\n\r\n    successful = successful && status === gl.FRAMEBUFFER_COMPLETE;\r\n    successful = successful && gl.getError() === gl.NO_ERROR;\r\n\r\n    //try render by clearing frame buffer's color buffer\r\n    if (successful)\r\n    {\r\n        gl.clear(gl.COLOR_BUFFER_BIT);\r\n        successful = successful && gl.getError() === gl.NO_ERROR;\r\n    }\r\n\r\n    //try reading from frame to ensure render occurs (just creating the FBO is not sufficient to determine if rendering is supported)\r\n    if (successful)\r\n    {\r\n        //in practice it's sufficient to just read from the backbuffer rather than handle potentially issues reading from the texture\r\n        gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n        let readFormat = gl.RGBA;\r\n        let readType = gl.UNSIGNED_BYTE;\r\n        let buffer = new Uint8Array(4);\r\n        gl.readPixels(0, 0, 1, 1, readFormat, readType, buffer);\r\n        successful = successful && gl.getError() === gl.NO_ERROR;\r\n    }\r\n\r\n    //clean up\r\n    gl.deleteTexture(texture);\r\n    gl.deleteFramebuffer(fb);\r\n    gl.bindFramebuffer(gl.FRAMEBUFFER, null);\r\n\r\n    //clear accumulated errors\r\n    while (!successful && gl.getError() !== gl.NO_ERROR) { }\r\n\r\n    return successful;\r\n}\r\n","import { GlConstants } from \"./GLconstant\";\r\nimport { IuniformInfo } from \"./ShaderProgam\";\r\nimport { GraphicsDevice } from \"./GraphicsDevice\";\r\n\r\nexport enum UniformTypeEnum {\r\n    FLOAT = \"FLOAT\",\r\n    FLOAT_VEC2 = \"FLOAT_VEC2\",\r\n    FLOAT_VEC3 = \"FLOAT_VEC3\",\r\n    FLOAT_VEC4 = \"FLOAT_VEC4\",\r\n    BOOL = \"BOOL\",\r\n    BOOL_VEC2 = \"BOOL_VEC2\",\r\n    BOOL_VEC3 = \"BOOL_VEC3\",\r\n    BOOL_VEC4 = \"BOOL_VEC4\",\r\n    INT = \"INT\",\r\n    INT_VEC2 = \"INT_VEC2\",\r\n    INT_VEC3 = \"INT_VEC3\",\r\n    INT_VEC4 = \"INT_VEC4\",\r\n    FLOAT_MAT2 = \"FLOAT_MAT2\",\r\n    FLOAT_MAT3 = \"FLOAT_MAT3\",\r\n    FLOAT_MAT4 = \"FLOAT_MAT4\",\r\n    SAMPLER_2D = \"SAMPLER_2D\",\r\n    SAMPLER_CUBE = \"SAMPLER_CUBE\",\r\n    FLOAT_ARRAY = \"FLOAT\",\r\n    FLOAT_VEC2_ARRAY = \"FLOAT_VEC2_ARRAY\",\r\n    FLOAT_VEC3_ARRAY = \"FLOAT_VEC3_ARRAY\",\r\n    FLOAT_VEC4_ARRAY = \"FLOAT_VEC4_ARRAY\",\r\n    BOOL_ARRAY = \"BOOL_ARRAY\",\r\n    BOOL_VEC2_ARRAY = \"BOOL_VEC2_ARRAY\",\r\n    BOOL_VEC3_ARRAY = \"BOOL_VEC3_ARRAY\",\r\n    BOOL_VEC4_ARRAY = \"BOOL_VEC4_ARRAY\",\r\n    INT_ARRAY = \"INT_ARRAY\",\r\n    INT_VEC2_ARRAY = \"INT_VEC2_ARRAY\",\r\n    INT_VEC3_ARRAY = \"INT_VEC3_ARRAY\",\r\n    INT_VEC4_ARRAY = \"INT_VEC4_ARRAY\",\r\n    FLOAT_MAT2_ARRAY = \"FLOAT_MAT2_ARRAY\",\r\n    FLOAT_MAT3_ARRAY = \"FLOAT_MAT3_ARRAY\",\r\n    FLOAT_MAT4_ARRAY = \"FLOAT_MAT4_ARRAY\",\r\n    SAMPLER_2D_ARRAY = \"SAMPLER_2D_ARRAY\",\r\n    SAMPLER_CUBE_ARRAY = \"SAMPLER_CUBE_ARRAY\",\r\n}\r\n\r\nexport namespace UniformTypeEnum {\r\n    const gltypeToUniformType: { [glType: number]: UniformTypeEnum } = {};\r\n    {\r\n        gltypeToUniformType[GlConstants.FLOAT] = UniformTypeEnum.FLOAT;\r\n        gltypeToUniformType[GlConstants.FLOAT_VEC2] = UniformTypeEnum.FLOAT_VEC2;\r\n        gltypeToUniformType[GlConstants.FLOAT_VEC3] = UniformTypeEnum.FLOAT_VEC3;\r\n        gltypeToUniformType[GlConstants.FLOAT_VEC4] = UniformTypeEnum.FLOAT_VEC4;\r\n        gltypeToUniformType[GlConstants.INT] = UniformTypeEnum.INT;\r\n        gltypeToUniformType[GlConstants.INT_VEC2] = UniformTypeEnum.INT_VEC2;\r\n        gltypeToUniformType[GlConstants.INT_VEC3] = UniformTypeEnum.INT_VEC3;\r\n        gltypeToUniformType[GlConstants.INT_VEC4] = UniformTypeEnum.INT_VEC4;\r\n        gltypeToUniformType[GlConstants.BOOL] = UniformTypeEnum.BOOL;\r\n        gltypeToUniformType[GlConstants.BOOL_VEC2] = UniformTypeEnum.BOOL_VEC2;\r\n        gltypeToUniformType[GlConstants.BOOL_VEC3] = UniformTypeEnum.BOOL_VEC3;\r\n        gltypeToUniformType[GlConstants.BOOL_VEC4] = UniformTypeEnum.BOOL_VEC4;\r\n        gltypeToUniformType[GlConstants.FLOAT_MAT2] = UniformTypeEnum.FLOAT_MAT2;\r\n        gltypeToUniformType[GlConstants.FLOAT_MAT3] = UniformTypeEnum.FLOAT_MAT3;\r\n        gltypeToUniformType[GlConstants.FLOAT_MAT4] = UniformTypeEnum.FLOAT_MAT4;\r\n        gltypeToUniformType[GlConstants.SAMPLER_2D] = UniformTypeEnum.SAMPLER_2D;\r\n        gltypeToUniformType[GlConstants.SAMPLER_CUBE] = UniformTypeEnum.SAMPLER_CUBE;\r\n    }\r\n\r\n    const gltypeArrayToUniformType: { [glType: number]: UniformTypeEnum } = {};\r\n    {\r\n        gltypeArrayToUniformType[GlConstants.FLOAT] = UniformTypeEnum.FLOAT_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.FLOAT_VEC2] = UniformTypeEnum.FLOAT_VEC2_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.FLOAT_VEC3] = UniformTypeEnum.FLOAT_VEC3_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.FLOAT_VEC4] = UniformTypeEnum.FLOAT_VEC4_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.INT] = UniformTypeEnum.INT_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.INT_VEC2] = UniformTypeEnum.INT_VEC2_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.INT_VEC3] = UniformTypeEnum.INT_VEC3_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.INT_VEC4] = UniformTypeEnum.INT_VEC4_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.BOOL] = UniformTypeEnum.BOOL_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.BOOL_VEC2] = UniformTypeEnum.BOOL_VEC2_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.BOOL_VEC3] = UniformTypeEnum.BOOL_VEC3_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.BOOL_VEC4] = UniformTypeEnum.BOOL_VEC4_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.FLOAT_MAT2] = UniformTypeEnum.FLOAT_MAT2_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.FLOAT_MAT3] = UniformTypeEnum.FLOAT_MAT3_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.FLOAT_MAT4] = UniformTypeEnum.FLOAT_MAT4_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.SAMPLER_2D] = UniformTypeEnum.SAMPLER_2D_ARRAY;\r\n        gltypeArrayToUniformType[GlConstants.SAMPLER_CUBE] = UniformTypeEnum.SAMPLER_CUBE_ARRAY;\r\n    }\r\n\r\n    export function fromGlType(type: number, beArray: boolean = false) {\r\n        if (beArray) {\r\n            return gltypeArrayToUniformType[type]\r\n        } else {\r\n            return gltypeToUniformType[type]\r\n        }\r\n    }\r\n}\r\n","import { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { IglElement } from \"../core/IglElement\";\r\nimport { TypedArray } from \"../core/TypedArray\";\r\nimport { GlConstants } from \"./GLconstant\";\r\n\r\nexport type bufferOption =\r\n    | {\r\n        context: GraphicsDevice;\r\n        target: BufferTargetEnum;\r\n        typedArray: TypedArray;\r\n        usage?: BufferUsageEnum;\r\n    }\r\n    | {\r\n        context: GraphicsDevice;\r\n        target: BufferTargetEnum;\r\n        sizeInBytes: number;\r\n        usage?: BufferUsageEnum;\r\n    };\r\nexport class Buffer implements IglElement\r\n{\r\n    protected target: BufferTargetEnum;\r\n    readonly usage: BufferUsageEnum;\r\n    protected _typedArray: TypedArray;\r\n    get typedArray() { return this._typedArray };\r\n    protected _sizeInBytes: number;\r\n    get sizeInbytes() { return this._sizeInBytes };\r\n    protected _buffer: WebGLBuffer;\r\n    private device: GraphicsDevice;\r\n    private _gl: WebGLRenderingContext;\r\n    protected constructor(options: bufferOption)\r\n    {\r\n        this.device = options.context;\r\n        this.target = options.target;\r\n        this.usage = options.usage ?? BufferUsageEnum.STATIC_DRAW;\r\n        this._typedArray = (options as any).typedArray;\r\n        this._sizeInBytes = (options as any).sizeInBytes;\r\n\r\n        if (this._typedArray != null)\r\n        {\r\n            this._sizeInBytes = this._typedArray.byteLength;\r\n        }\r\n\r\n        let gl = options.context.gl;\r\n        let buffer = gl.createBuffer();\r\n        gl.bindBuffer(this.target, buffer);\r\n        gl.bufferData(this.target, this._typedArray ?? this._sizeInBytes as any, this.usage);\r\n        gl.bindBuffer(this.target, null);\r\n\r\n        this.bind = () =>\r\n        {\r\n            gl.bindBuffer(this.target, buffer);\r\n        }\r\n        this.unbind = () =>\r\n        {\r\n            gl.bindBuffer(this.target, null);\r\n        }\r\n\r\n        this.update = (sizeInBytesOrTypedArray: TypedArray | number) =>\r\n        {\r\n            gl.bindBuffer(this.target, buffer);\r\n            gl.bufferData(this.target, sizeInBytesOrTypedArray as any, this.usage);\r\n            if (typeof sizeInBytesOrTypedArray == \"number\")\r\n            {\r\n                this._sizeInBytes = sizeInBytesOrTypedArray\r\n            } else\r\n            {\r\n                this._typedArray = sizeInBytesOrTypedArray;\r\n            }\r\n            // gl.bindBuffer(this.target, null);\r\n        }\r\n\r\n        this.destroy = () =>\r\n        {\r\n            gl.deleteBuffer(buffer);\r\n        }\r\n    }\r\n\r\n    bind() { }\r\n    unbind() { }\r\n    update(sizeInBytesOrTypedArray: TypedArray | number) { }\r\n    destroy() { }\r\n}\r\n\r\nexport enum BufferTargetEnum\r\n{\r\n    ARRAY_BUFFER = GlConstants.ARRAY_BUFFER,\r\n    ELEMENT_ARRAY_BUFFER = GlConstants.ELEMENT_ARRAY_BUFFER,\r\n}\r\nexport enum BufferUsageEnum\r\n{\r\n    STATIC_DRAW = GlConstants.STATIC_DRAW,\r\n    DYNAMIC_DRAW = GlConstants.DYNAMIC_DRAW\r\n}\r\n\r\nexport class BufferConfig\r\n{\r\n    static bufferUsageToGLNumber: { [useage: string]: number } = {};\r\n    static bufferTargetToGLNumber: { [useage: string]: number } = {};\r\n    static vertexAttributeSetter: { [size: number]: (index: number, value: any) => any } = {};\r\n    static init(context: GraphicsDevice)\r\n    {\r\n        this.vertexAttributeSetter[1] = (index, value) =>\r\n        {\r\n            context.gl.vertexAttrib1f(index, value)\r\n        }\r\n        this.vertexAttributeSetter[2] = (index, value) =>\r\n        {\r\n            context.gl.vertexAttrib2fv(index, value)\r\n        }\r\n        this.vertexAttributeSetter[3] = (index, value) =>\r\n        {\r\n            context.gl.vertexAttrib3fv(index, value)\r\n        }\r\n        this.vertexAttributeSetter[4] = (index, value) =>\r\n        {\r\n            context.gl.vertexAttrib4fv(index, value)\r\n        }\r\n    }\r\n}\r\n","import { GraphicsDevice } from \"./GraphicsDevice\";\r\n\r\nexport class DeviceLimit\r\n{\r\n    readonly maximumCombinedTextureImageUnits: number;\r\n    readonly maximumCubeMapSize: number;\r\n    readonly maximumFragmentUniformVectors: number;\r\n    readonly maximumTextureImageUnits: number;\r\n    readonly maximumRenderbufferSize: number;\r\n    readonly maximumTextureSize: number;\r\n    readonly maximumVaryingVectors: number;\r\n    readonly maximumVertexAttributes: number;\r\n    readonly maximumVertexTextureImageUnits: number\r\n    readonly maximumVertexUniformVectors: number\r\n    readonly minimumAliasedLineWidth: number\r\n    readonly maximumAliasedLineWidth: number\r\n    readonly minimumAliasedPointSize: number\r\n    readonly maximumAliasedPointSize: number\r\n    readonly maximumViewportWidth: number\r\n    readonly maximumViewportHeight: number\r\n    readonly highpFloatSupported: boolean\r\n    readonly highpIntSupported: boolean\r\n    constructor(context: GraphicsDevice)\r\n    {\r\n        let gl = context.gl;\r\n        this.maximumCombinedTextureImageUnits = gl.getParameter(gl.MAX_COMBINED_TEXTURE_IMAGE_UNITS); // min: 8\r\n        this.maximumCubeMapSize = gl.getParameter(gl.MAX_CUBE_MAP_TEXTURE_SIZE); // min: 16\r\n        this.maximumFragmentUniformVectors = gl.getParameter(gl.MAX_FRAGMENT_UNIFORM_VECTORS); // min: 16\r\n        this.maximumTextureImageUnits = gl.getParameter(gl.MAX_TEXTURE_IMAGE_UNITS); // min: 8\r\n        this.maximumRenderbufferSize = gl.getParameter(gl.MAX_RENDERBUFFER_SIZE); // min: 1\r\n        this.maximumTextureSize = gl.getParameter(gl.MAX_TEXTURE_SIZE); // min: 64\r\n        this.maximumVaryingVectors = gl.getParameter(gl.MAX_VARYING_VECTORS); // min: 8\r\n        this.maximumVertexAttributes = gl.getParameter(gl.MAX_VERTEX_ATTRIBS); // min: 8\r\n        this.maximumVertexTextureImageUnits = gl.getParameter(gl.MAX_VERTEX_TEXTURE_IMAGE_UNITS); // min: 0\r\n        this.maximumVertexUniformVectors = gl.getParameter(gl.MAX_VERTEX_UNIFORM_VECTORS); // min: 128\r\n\r\n        var aliasedLineWidthRange = gl.getParameter(gl.ALIASED_LINE_WIDTH_RANGE); // must include 1\r\n        this.minimumAliasedLineWidth = aliasedLineWidthRange[0];\r\n        this.maximumAliasedLineWidth = aliasedLineWidthRange[1];\r\n\r\n        var aliasedPointSizeRange = gl.getParameter(gl.ALIASED_POINT_SIZE_RANGE); // must include 1\r\n        this.minimumAliasedPointSize = aliasedPointSizeRange[0];\r\n        this.maximumAliasedPointSize = aliasedPointSizeRange[1];\r\n\r\n        var maximumViewportDimensions = gl.getParameter(gl.MAX_VIEWPORT_DIMS);\r\n        this.maximumViewportWidth = maximumViewportDimensions[0];\r\n        this.maximumViewportHeight = maximumViewportDimensions[1];\r\n\r\n        var highpFloat = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_FLOAT);\r\n        this.highpFloatSupported = highpFloat.precision !== 0;\r\n        var highpInt = gl.getShaderPrecisionFormat(gl.FRAGMENT_SHADER, gl.HIGH_INT);\r\n        this.highpIntSupported = highpInt.rangeMax !== 0;\r\n    }\r\n}","\r\nimport { DeviceCapability } from \"./DeviceCapability\";\r\nimport { IattributeInfo, IuniformInfo, IshaderProgramOption } from \"./ShaderProgam\";\r\nimport { UniformTypeEnum } from \"./UniformType\";\r\nimport { BufferTargetEnum, BufferUsageEnum, BufferConfig } from \"./Buffer\";\r\nimport { DeviceLimit } from \"./DeviceLimit\";\r\nimport { DepthFuncEnum, BlendEquationEnum, BlendParamEnum } from \"../scene/RenderState\";\r\nimport { VertexArray } from \"./VertextArray\";\r\nimport { VertexAttEnum } from \"./VertexAttEnum\";\r\n\r\nexport interface IengineOption {\r\n    disableWebgl2?: boolean;\r\n}\r\n\r\nexport class GraphicsDevice {\r\n\r\n    gl: WebGLRenderingContext;\r\n    readonly webGLVersion: number;\r\n    readonly caps: DeviceCapability;\r\n    readonly limit: DeviceLimit;\r\n\r\n    readonly uniformSetter: { [uniformType: string]: (uniform: any, value: any) => void } = {};\r\n    readonly uniformSamplerSetter: { [uniformType: string]: (uniform: any, value: any, unit: number) => void } = {};\r\n    readonly bufferUsageToGLNumber: { [useage: string]: number } = {};\r\n    readonly bufferTargetToGLNumber: { [useage: string]: number } = {};\r\n    readonly vertexAttributeSetter: { [size: number]: (index: number, value: any) => any } = {};\r\n\r\n    bindingVao: WebGLVertexArrayObject = null;\r\n    // beCreatingVao = false;\r\n    get width() { return this.gl.drawingBufferWidth };\r\n    get height() { return this.gl.drawingBufferHeight };\r\n    constructor(canvasOrContext: HTMLCanvasElement | WebGLRenderingContext, option?: IengineOption) {\r\n        if (canvasOrContext == null) return;\r\n        option = option || {};\r\n        let gl: WebGLRenderingContext;\r\n        if (canvasOrContext instanceof HTMLCanvasElement) {\r\n            if (!option.disableWebgl2) {\r\n                try {\r\n                    gl = canvasOrContext.getContext(\"webgl2\", option) as any;\r\n                } catch (e) { }\r\n            }\r\n            if (!gl) {\r\n                try {\r\n                    gl = canvasOrContext.getContext(\"webgl\", option) as any;\r\n                } catch (e) { }\r\n            }\r\n            if (!gl) {\r\n                throw new Error(\"webgl not supported\");\r\n            }\r\n            canvasOrContext.addEventListener(\"webglcontextlost\", this.handleContextLost, false);\r\n        } else {\r\n            gl = canvasOrContext;\r\n        }\r\n        if (gl.renderbufferStorageMultisample) {\r\n            this.webGLVersion = 2.0;\r\n        }\r\n        this.gl = gl;\r\n        this.caps = new DeviceCapability(this);\r\n        this.limit = new DeviceLimit(this);\r\n\r\n        //-------------config init\r\n        BufferConfig.init(this);\r\n\r\n        //------------------------uniform \r\n        var scopeX, scopeY, scopeZ, scopeW;\r\n        var uniformValue;\r\n        this.uniformSetter[UniformTypeEnum.BOOL] = (uniform: IuniformInfo, value) => {\r\n            if (uniform.value !== value) {\r\n                gl.uniform1i(uniform.location, value);\r\n                uniform.value = value;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.INT] = this.uniformSetter[UniformTypeEnum.BOOL];\r\n        this.uniformSetter[UniformTypeEnum.FLOAT] = (uniform: IuniformInfo, value) => {\r\n            if (uniform.value !== value) {\r\n                gl.uniform1f(uniform.location, value);\r\n                uniform.value = value;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_VEC2] = (uniform: IuniformInfo, value) => {\r\n            uniformValue = uniform.value;\r\n            scopeX = value[0];\r\n            scopeY = value[1];\r\n            if (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY) {\r\n                gl.uniform2fv(uniform.location, value);\r\n                uniformValue[0] = scopeX;\r\n                uniformValue[1] = scopeY;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_VEC3] = (uniform: IuniformInfo, value) => {\r\n            uniformValue = uniform.value;\r\n            scopeX = value[0];\r\n            scopeY = value[1];\r\n            scopeZ = value[2];\r\n            if (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ) {\r\n                gl.uniform3fv(uniform.location, value);\r\n                uniformValue[0] = scopeX;\r\n                uniformValue[1] = scopeY;\r\n                uniformValue[2] = scopeZ;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_VEC4] = (uniform: IuniformInfo, value) => {\r\n            uniformValue = uniform.value;\r\n            scopeX = value[0];\r\n            scopeY = value[1];\r\n            scopeZ = value[2];\r\n            scopeW = value[3];\r\n            if (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ || uniformValue[3] !== scopeW) {\r\n                gl.uniform4fv(uniform.location, value);\r\n                uniformValue[0] = scopeX;\r\n                uniformValue[1] = scopeY;\r\n                uniformValue[2] = scopeZ;\r\n                uniformValue[3] = scopeW;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.INT_VEC2] = (uniform: IuniformInfo, value) => {\r\n            uniformValue = uniform.value;\r\n            scopeX = value[0];\r\n            scopeY = value[1];\r\n            if (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY) {\r\n                gl.uniform2iv(uniform.location, value);\r\n                uniformValue[0] = scopeX;\r\n                uniformValue[1] = scopeY;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.BOOL_VEC2] = this.uniformSetter[UniformTypeEnum.INT_VEC2];\r\n        this.uniformSetter[UniformTypeEnum.INT_VEC3] = (uniform: IuniformInfo, value) => {\r\n            uniformValue = uniform.value;\r\n            scopeX = value[0];\r\n            scopeY = value[1];\r\n            scopeZ = value[2];\r\n            if (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ) {\r\n                gl.uniform3iv(uniform.location, value);\r\n                uniformValue[0] = scopeX;\r\n                uniformValue[1] = scopeY;\r\n                uniformValue[2] = scopeZ;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.BOOL_VEC3] = this.uniformSetter[UniformTypeEnum.INT_VEC3];\r\n        this.uniformSetter[UniformTypeEnum.INT_VEC4] = (uniform: IuniformInfo, value) => {\r\n            uniformValue = uniform.value;\r\n            scopeX = value[0];\r\n            scopeY = value[1];\r\n            scopeZ = value[2];\r\n            scopeW = value[3];\r\n            if (uniformValue[0] !== scopeX || uniformValue[1] !== scopeY || uniformValue[2] !== scopeZ || uniformValue[3] !== scopeW) {\r\n                gl.uniform4iv(uniform.location, value);\r\n                uniformValue[0] = scopeX;\r\n                uniformValue[1] = scopeY;\r\n                uniformValue[2] = scopeZ;\r\n                uniformValue[3] = scopeW;\r\n            }\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.BOOL_VEC4] = this.uniformSetter[UniformTypeEnum.INT_VEC4];\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_MAT2] = (uniform: IuniformInfo, value) => {\r\n            gl.uniformMatrix2fv(uniform.location, false, value);\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_MAT2_ARRAY] = this.uniformSetter[UniformTypeEnum.FLOAT_MAT2];\r\n\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_MAT3] = (uniform: IuniformInfo, value) => {\r\n            gl.uniformMatrix3fv(uniform.location, false, value);\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_MAT3_ARRAY] = this.uniformSetter[UniformTypeEnum.FLOAT_MAT3];\r\n\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_MAT4] = (uniform: IuniformInfo, value) => {\r\n            gl.uniformMatrix4fv(uniform.location, false, value);\r\n        };\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_MAT4_ARRAY] = this.uniformSetter[UniformTypeEnum.FLOAT_MAT4];\r\n\r\n        this.uniformSetter[UniformTypeEnum.FLOAT_ARRAY] = (uniform: IuniformInfo, value) => {\r\n            gl.uniform1fv(uniform.location, value);\r\n        };\r\n        this.uniformSamplerSetter[UniformTypeEnum.SAMPLER_2D] = (uniform: IuniformInfo, value, unit: number) => {\r\n            value.bind(this, unit);\r\n            gl.uniform1i(uniform.location, unit);\r\n        }\r\n\r\n\r\n        //------------------buffer\r\n        this.bufferTargetToGLNumber[BufferTargetEnum.ARRAY_BUFFER] = gl.ARRAY_BUFFER;\r\n        this.bufferTargetToGLNumber[BufferTargetEnum.ELEMENT_ARRAY_BUFFER] = gl.ELEMENT_ARRAY_BUFFER;\r\n\r\n        this.bufferUsageToGLNumber[BufferUsageEnum.STATIC_DRAW] = gl.STATIC_DRAW;\r\n        this.bufferUsageToGLNumber[BufferUsageEnum.DYNAMIC_DRAW] = gl.DYNAMIC_DRAW;\r\n\r\n        //------------------attribute\r\n        this.vertexAttributeSetter[1] = (index, value) => {\r\n            this.gl.vertexAttrib1f(index, value)\r\n        }\r\n        this.vertexAttributeSetter[2] = (index, value) => {\r\n            this.gl.vertexAttrib2fv(index, value)\r\n        }\r\n        this.vertexAttributeSetter[3] = (index, value) => {\r\n            this.gl.vertexAttrib3fv(index, value)\r\n        }\r\n        this.vertexAttributeSetter[4] = (index, value) => {\r\n            this.gl.vertexAttrib4fv(index, value)\r\n        }\r\n    }\r\n\r\n    handleContextLost = () => {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    //--------------------------------------uniform\r\n    private getUniformTypeFromGLtype(gltype: number, beArray?: boolean) {\r\n        let gl = this.gl;\r\n        let type = UniformTypeEnum.fromGlType(gltype, beArray);\r\n        if (type == null) {\r\n            console.error(\"unhandle uniform GLtype:\", gltype);\r\n        }\r\n        return type;\r\n    }\r\n\r\n    /**\r\n     * 创建shader\r\n     * @param definition \r\n     */\r\n    complileAndLinkShader(definition: IshaderProgramOption) {\r\n        let gl = this.gl;\r\n        let vsshader = this.compileShaderSource(gl, definition.vsStr, true);\r\n        let fsshader = this.compileShaderSource(gl, definition.fsStr, false);\r\n\r\n        if (vsshader && fsshader) {\r\n            let shader = gl.createProgram();\r\n            gl.attachShader(shader, vsshader);\r\n            gl.attachShader(shader, fsshader);\r\n            gl.linkProgram(shader);\r\n            let check = gl.getProgramParameter(shader, gl.LINK_STATUS);\r\n            if (check == false) {\r\n                let debguInfo = \"ERROR: compile program Error! \\n\" + gl.getProgramInfoLog(shader);\r\n                console.error(debguInfo);\r\n                gl.deleteProgram(shader);\r\n                return null;\r\n            } else {\r\n                let attributes = this.preSetAttributeLocation(gl, shader, definition.attributes);\r\n                gl.linkProgram(shader);\r\n                let uniformDic = this.getUniformsInfo(gl, shader);\r\n                //TODO :SMAPLES\r\n                let samples = {};\r\n                return { shader, attributes, uniforms: uniformDic }\r\n            }\r\n        }\r\n    }\r\n\r\n    setUniform(uniform: IuniformInfo, value: any) {\r\n        this.uniformSetter[uniform.type](uniform, value)\r\n    }\r\n\r\n    private compileShaderSource(gl: WebGLRenderingContext, source: string, beVertex: boolean) {\r\n        let target = beVertex ? gl.VERTEX_SHADER : gl.FRAGMENT_SHADER;\r\n        let item = gl.createShader(target);\r\n        gl.shaderSource(item, source);\r\n        gl.compileShader(item);\r\n        let check = gl.getShaderParameter(item, gl.COMPILE_STATUS);\r\n        if (check == false) {\r\n            let debug = beVertex ? \"ERROR: compile  VS Shader Error! VS:\" : \"ERROR: compile FS Shader Error! FS:\";\r\n            debug = debug + name + \".\\n\";\r\n            console.error(debug + gl.getShaderInfoLog(item));\r\n            gl.deleteShader(item);\r\n        } else {\r\n            return item\r\n        }\r\n    }\r\n\r\n    private preSetAttributeLocation(\r\n        gl: WebGLRenderingContext,\r\n        program: WebGLProgram,\r\n        attInfo: { [attName: string]: VertexAttEnum }\r\n    ): { [attName: string]: IattributeInfo } {\r\n        let attdic: { [attName: string]: IattributeInfo } = {};\r\n        let numAttribs = gl.getProgramParameter(program, gl.ACTIVE_ATTRIBUTES);\r\n        for (let i = 0; i < numAttribs; i++) {\r\n            let attribInfo = gl.getActiveAttrib(program, i);\r\n            if (!attribInfo) break;\r\n            let attName = attribInfo.name;\r\n            let type = attInfo[attName] ?? VertexAttEnum.fromShaderAttName(attName);\r\n            if (type == null) {\r\n                console.error(`cannot get Vertex Attribute type from shader defination or deduced from shader attname! Info: attname In shader [${attName}]`);\r\n            } else {\r\n                let location = VertexAttEnum.toShaderLocation(type);\r\n                gl.bindAttribLocation(program, location, attName);\r\n                // let attlocation = gl.getAttribLocation(program, attName);\r\n                attdic[type] = { name: attName, type, location: location };\r\n            }\r\n\r\n        }\r\n        return attdic;\r\n    }\r\n\r\n    private getUniformsInfo(gl: WebGLRenderingContext, program: WebGLProgram) {\r\n        let uniformDic: { [name: string]: IuniformInfo } = {};\r\n        // let sampleDic: { [name: string]: IuniformInfo } = {};\r\n\r\n        let numUniforms = gl.getProgramParameter(program, gl.ACTIVE_UNIFORMS);\r\n        let sampleArr: IuniformInfo[] = [];\r\n        for (let i = 0; i < numUniforms; i++) {\r\n            let uniformInfo = gl.getActiveUniform(program, i);\r\n            if (!uniformInfo) break;\r\n\r\n            let name = uniformInfo.name;\r\n            let type = uniformInfo.type;\r\n            let location = gl.getUniformLocation(program, name);\r\n\r\n            let beArray = false;\r\n            // remove the array suffix.\r\n            if (name.substr(-3) === \"[0]\") {\r\n                beArray = true;\r\n                name = name.substr(0, name.length - 3);\r\n            }\r\n            if (location == null) continue;\r\n\r\n            let uniformtype = this.getUniformTypeFromGLtype(type, beArray);\r\n            let newUniformElemt: IuniformInfo = {\r\n                name: name,\r\n                location: location,\r\n                type: uniformtype,\r\n            } as any;\r\n            uniformDic[name] = newUniformElemt;\r\n\r\n            if (uniformtype == UniformTypeEnum.SAMPLER_2D || uniformtype == UniformTypeEnum.SAMPLER_CUBE) {\r\n                newUniformElemt.beTexture = true;\r\n                sampleArr.push(newUniformElemt);\r\n            } else {\r\n                uniformDic[name] = newUniformElemt;\r\n                newUniformElemt.beTexture = false;\r\n                newUniformElemt.setter = this.uniformSetter[uniformtype];\r\n                if (newUniformElemt.setter == null) {\r\n                    console.error(\"cannot find uniform setter!\");\r\n                }\r\n            }\r\n        }\r\n\r\n        sampleArr.forEach((item, index) => {\r\n            item.setter = (info: IuniformInfo, value: any) => { this.uniformSamplerSetter[item.type](info, value, index) }\r\n        })\r\n        return uniformDic;\r\n    }\r\n\r\n    //-----------------------------gl state\r\n    private _cachedClearDepth: number;\r\n    private _cachedclearColor: Float32Array = new Float32Array(4);\r\n    setClear(clearDepth: number | null, clearColor: Float32Array | null, clearStencil: number | null) {\r\n        let cleartag = 0;\r\n        if (clearDepth != null) {\r\n            if (clearDepth != this._cachedClearDepth) {\r\n                this._cachedClearDepth = clearDepth;\r\n                this.gl.clearDepth(clearDepth);\r\n            }\r\n            cleartag |= this.gl.DEPTH_BUFFER_BIT;\r\n        }\r\n        if (clearColor != null) {\r\n            if (this._cachedclearColor[0] != clearColor[0] || this._cachedclearColor[1] != clearColor[1] || this._cachedclearColor[2] != clearColor[2] || this._cachedclearColor[3] != clearColor[3]) {\r\n                this._cachedclearColor[0] = clearColor[0];\r\n                this._cachedclearColor[1] = clearColor[1];\r\n                this._cachedclearColor[2] = clearColor[2];\r\n                this._cachedclearColor[3] = clearColor[3];\r\n                this.gl.clearColor(clearColor[0], clearColor[1], clearColor[2], clearColor[3]);\r\n            }\r\n\r\n            cleartag |= this.gl.COLOR_BUFFER_BIT;\r\n        }\r\n        if (clearStencil != null) {\r\n            this.gl.clearStencil(0);\r\n            cleartag |= this.gl.STENCIL_BUFFER_BIT;\r\n        }\r\n        if (cleartag != 0) {\r\n            this.gl.clear(cleartag);\r\n        }\r\n    }\r\n\r\n    private _cachedViewPortX: number;\r\n    private _cachedViewPortY: number;\r\n    private _cachedViewPortWidth: number;\r\n    private _cachedViewPortHeight: number;\r\n    setViewPort(x: number, y: number, width: number, height: number, force = false) {\r\n        if (\r\n            force ||\r\n            x != this._cachedViewPortX ||\r\n            y != this._cachedViewPortY ||\r\n            width != this._cachedViewPortWidth ||\r\n            height != this._cachedViewPortHeight\r\n        ) {\r\n            this.gl.viewport(x, y, width, height);\r\n            this._cachedViewPortX = x;\r\n            this._cachedViewPortY = y;\r\n            this._cachedViewPortWidth = width;\r\n            this._cachedViewPortHeight = height;\r\n        }\r\n    }\r\n\r\n    private _cacheColorMaskR: boolean;\r\n    private _cacheColorMaskG: boolean;\r\n    private _cacheColorMaskB: boolean;\r\n    private _cacheColorMaskA: boolean;\r\n    setColorMask(maskR: boolean, maskG: boolean, maskB: boolean, maskA: boolean, force = false) {\r\n        if (\r\n            force ||\r\n            this._cacheColorMaskR != maskR ||\r\n            this._cacheColorMaskG != maskG ||\r\n            this._cacheColorMaskB != maskB ||\r\n            this._cacheColorMaskA != maskA\r\n        ) {\r\n            this.gl.colorMask(maskR, maskG, maskB, maskA);\r\n            this._cacheColorMaskR = maskR;\r\n            this._cacheColorMaskG = maskG;\r\n            this._cacheColorMaskB = maskB;\r\n            this._cacheColorMaskA = maskA;\r\n        }\r\n    }\r\n    _cachedEnableCullFace: boolean;\r\n    _cachedCullFace: boolean;\r\n    setCullFaceState(enableCullFace: boolean = true, cullBack: boolean = true, force = false) {\r\n        if (force || this._cachedEnableCullFace != enableCullFace) {\r\n            this._cachedEnableCullFace = enableCullFace;\r\n            if (enableCullFace) {\r\n                this.gl.enable(this.gl.CULL_FACE);\r\n                if (force || this._cachedCullFace != cullBack) {\r\n                    this._cachedCullFace = cullBack;\r\n                    this.gl.cullFace(cullBack ? this.gl.BACK : this.gl.FRONT);\r\n                }\r\n            } else {\r\n                this.gl.disable(this.gl.CULL_FACE);\r\n            }\r\n        } else {\r\n            if (force || this._cachedCullFace != cullBack) {\r\n                this._cachedCullFace = cullBack;\r\n\r\n                this.gl.cullFace(cullBack ? this.gl.BACK : this.gl.FRONT);\r\n            }\r\n        }\r\n    }\r\n    private _cachedDepthWrite: boolean;\r\n    private _cachedDepthTest: boolean;\r\n    private _cachedDepthFunction: number;\r\n    setDepthState(depthWrite: boolean = true, depthTest: boolean = true, depthFunc: number, force = false) {\r\n        if (force || this._cachedDepthWrite != depthWrite) {\r\n            this._cachedDepthWrite = depthWrite;\r\n            this.gl.depthMask(depthWrite);\r\n        }\r\n        if (force || this._cachedDepthTest != depthTest) {\r\n            this._cachedDepthTest = depthTest;\r\n            if (depthTest) {\r\n                this.gl.enable(this.gl.DEPTH_TEST);\r\n                if (depthFunc != null && this._cachedDepthFunction != depthFunc) {\r\n                    this._cachedDepthFunction = depthFunc;\r\n                    this.gl.depthFunc(depthFunc);\r\n                }\r\n            } else {\r\n                this.gl.disable(this.gl.DEPTH_TEST);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _cachedEnableBlend: boolean;\r\n    private _cachedBlendEquation: number;\r\n    private _cachedBlendFuncSrc: number;\r\n    private _cachedBlendFuncDst: number;\r\n\r\n    private enableSeparateBlend: boolean = false;\r\n    private _cachedBlendEquationAlpha: number;\r\n    private _cachedBlendFuncSrc_a: number;\r\n    private _cachedBlendFuncDst_a: number;\r\n\r\n    setBlendState(\r\n        enabled: boolean,\r\n        blendEquation: BlendEquationEnum,\r\n        blendSrc: BlendParamEnum,\r\n        blendDst: BlendParamEnum,\r\n\r\n        enableSeparateBlend: boolean,\r\n        blendAlphaEquation: BlendEquationEnum,\r\n        blendSrcAlpha: BlendParamEnum,\r\n        blendDstAlpha: BlendParamEnum,\r\n        force = false,\r\n    ) {\r\n        if (force || this._cachedEnableBlend != enabled) {\r\n            this._cachedEnableBlend = enabled;\r\n            if (enabled) {\r\n                this.gl.enable(this.gl.BLEND);\r\n\r\n                if (enableSeparateBlend) {\r\n                    this.enableSeparateBlend = true;\r\n                    if (force || this._cachedBlendEquation != blendEquation || this._cachedBlendEquationAlpha != blendAlphaEquation) {\r\n                        this._cachedBlendEquation = blendEquation;\r\n                        this._cachedBlendEquationAlpha = blendAlphaEquation;\r\n                        this.gl.blendEquationSeparate(blendEquation, blendAlphaEquation);\r\n                    }\r\n                    if (force || this._cachedBlendFuncSrc != blendSrc || this._cachedBlendFuncDst != blendDst || this._cachedBlendFuncSrc_a != blendSrcAlpha || this._cachedBlendFuncDst_a != blendDstAlpha) {\r\n                        this._cachedBlendFuncSrc = blendSrc;\r\n                        this._cachedBlendFuncDst = blendDst;\r\n                        this._cachedBlendFuncSrc_a = blendSrcAlpha;\r\n                        this._cachedBlendFuncDst_a = blendDstAlpha;\r\n                        this.gl.blendFuncSeparate(blendSrc, blendDst, blendSrcAlpha, blendDstAlpha);\r\n                    }\r\n                } else {\r\n                    if (force || this.enableSeparateBlend || this._cachedBlendEquation != blendEquation) {\r\n                        this._cachedBlendEquation = blendEquation;\r\n                        this.gl.blendEquation(blendEquation);\r\n                    }\r\n                    if (force || this.enableSeparateBlend || this._cachedBlendFuncSrc != blendSrc || this._cachedBlendFuncDst != blendDst) {\r\n                        this._cachedBlendFuncSrc = blendSrc;\r\n                        this._cachedBlendFuncDst = blendDst;\r\n                        this.gl.blendFunc(blendSrc, blendDst);\r\n                    }\r\n                    this.enableSeparateBlend = false;\r\n                }\r\n            } else {\r\n                this.gl.disable(this.gl.BLEND);\r\n            }\r\n        }\r\n    }\r\n\r\n    private _cachedEnableStencilTest: boolean;\r\n    private _cachedStencilFunc: number;\r\n    private _cachedStencilRefValue: number;\r\n    private _cachedStencilMask: number;\r\n    private _cachedStencilFail: number;\r\n    private _cachedStencilPassZfail: number;\r\n    private _cachedStencilFaileZpass: number;\r\n\r\n    private enableSeparateStencil: boolean = false;\r\n    private _cachedStencilFuncBack: number;\r\n    private _cachedstencilRefValueBack: number;\r\n    private _cachedStencilMaskBack: number;\r\n    private _cachedStencilFailBack: number;\r\n    private _cachedStencilPassZfailBack: number;\r\n    private _cachedStencilFaileZpassBack: number;\r\n\r\n    setStencilState(\r\n        enableStencilTest: boolean = false,\r\n        stencilFunction: number = this.gl.ALWAYS,\r\n        stencilRefValue: number = 1,\r\n        stencilMask: number = 0xff,\r\n        stencilFail: number = this.gl.KEEP,\r\n        stencilFaileZpass: number = this.gl.KEEP,\r\n        stencilPassZfail: number = this.gl.REPLACE,\r\n\r\n        enableSeparateStencil: boolean = false,\r\n        stencilFunctionBack: number = this.gl.ALWAYS,\r\n        stencilRefValueBack: number = 1,\r\n        stencilMaskBack: number = 0xff,\r\n        stencilFailBack: number = this.gl.KEEP,\r\n        stencilFaileZpassBack: number = this.gl.KEEP,\r\n        stencilPassZfailBack: number = this.gl.REPLACE,\r\n    ) {\r\n        if (this._cachedEnableStencilTest != enableStencilTest) {\r\n            this._cachedEnableStencilTest = enableStencilTest;\r\n            if (enableStencilTest) {\r\n                this.gl.enable(this.gl.STENCIL_TEST);\r\n                if (enableSeparateStencil) {\r\n                    this.enableSeparateStencil = true;\r\n\r\n                    if (this._cachedStencilFunc != stencilFunction ||\r\n                        this._cachedStencilRefValue != stencilRefValue ||\r\n                        this._cachedStencilMask != stencilMask\r\n                    ) {\r\n                        this._cachedStencilFunc = stencilFunction;\r\n                        this._cachedStencilRefValue = stencilRefValue;\r\n                        this._cachedStencilMask = stencilMask;\r\n                        this.gl.stencilFuncSeparate(this.gl.FRONT, stencilFunction, stencilRefValue, stencilMask);\r\n                    }\r\n\r\n                    if (this._cachedStencilFuncBack != stencilFunctionBack ||\r\n                        this._cachedstencilRefValueBack != stencilRefValueBack ||\r\n                        this._cachedStencilMaskBack != stencilMaskBack) {\r\n                        this._cachedStencilFuncBack = stencilFunctionBack;\r\n                        this._cachedstencilRefValueBack = stencilRefValueBack;\r\n                        this._cachedStencilMaskBack = stencilMaskBack;\r\n                        this.gl.stencilFuncSeparate(this.gl.BACK, stencilFunctionBack, stencilRefValueBack, stencilMaskBack);\r\n                    }\r\n\r\n                    if (this._cachedStencilFail != stencilFail ||\r\n                        this._cachedStencilPassZfail != stencilPassZfail ||\r\n                        this._cachedStencilFaileZpass != stencilFaileZpass) {\r\n                        this._cachedStencilFail = stencilFail;\r\n                        this._cachedStencilPassZfail = stencilPassZfail;\r\n                        this._cachedStencilFaileZpass = stencilFaileZpass;\r\n                        this.gl.stencilOpSeparate(this.gl.FRONT, stencilFail, stencilPassZfail, stencilFaileZpass);\r\n                    }\r\n\r\n                    if (this._cachedStencilFailBack != stencilFailBack ||\r\n                        this._cachedStencilPassZfailBack != stencilPassZfailBack ||\r\n                        this._cachedStencilFaileZpassBack != stencilFaileZpassBack) {\r\n                        this._cachedStencilFailBack = stencilFailBack;\r\n                        this._cachedStencilPassZfailBack = stencilPassZfailBack;\r\n                        this._cachedStencilFaileZpassBack = stencilFaileZpassBack;\r\n                        this.gl.stencilOpSeparate(this.gl.BACK, stencilFailBack, stencilPassZfailBack, stencilFaileZpassBack);\r\n                    }\r\n                } else {\r\n                    if (this.enableSeparateStencil || this._cachedStencilFunc != stencilFunction ||\r\n                        this._cachedStencilRefValue != stencilRefValue ||\r\n                        this._cachedStencilMask != stencilMask\r\n                    ) {\r\n                        this._cachedStencilFunc = stencilFunction;\r\n                        this._cachedStencilRefValue = stencilRefValue;\r\n                        this._cachedStencilMask = stencilMask;\r\n                        this.gl.stencilFunc(stencilFunction, stencilRefValue, stencilMask);\r\n                    }\r\n\r\n                    if (this.enableSeparateStencil || this._cachedStencilFail != stencilFail ||\r\n                        this._cachedStencilPassZfail != stencilPassZfail ||\r\n                        this._cachedStencilFaileZpass != stencilFaileZpass) {\r\n                        this._cachedStencilFail = stencilFail;\r\n                        this._cachedStencilPassZfail = stencilPassZfail;\r\n                        this._cachedStencilFaileZpass = stencilFaileZpass;\r\n                        this.gl.stencilOp(stencilFail, stencilPassZfail, stencilFaileZpass);\r\n                    }\r\n                    this.enableSeparateStencil = false;\r\n                }\r\n            } else {\r\n                this.gl.disable(this.gl.STENCIL_TEST);\r\n            }\r\n        }\r\n\r\n    }\r\n    draw(vertexArray: VertexArray, instanceCount: number = 0) {\r\n        let indexBuffer = vertexArray.indexBuffer;\r\n        if (indexBuffer) {\r\n            if (instanceCount != 0) {\r\n                this.gl.drawElementsInstanced(vertexArray.primitiveType, vertexArray.primitveCount, indexBuffer.indexDatatype, vertexArray.primitiveByteOffset, instanceCount);\r\n            } else {\r\n                this.gl.drawElements(vertexArray.primitiveType, vertexArray.primitveCount, indexBuffer.indexDatatype, vertexArray.primitiveByteOffset);\r\n            }\r\n        } else {\r\n            if (instanceCount != 0) {\r\n                this.gl.drawArraysInstanced(vertexArray.primitiveType, vertexArray.primitiveByteOffset, vertexArray.primitveCount, instanceCount);\r\n            } else {\r\n                this.gl.drawArrays(vertexArray.primitiveType, vertexArray.primitiveByteOffset, vertexArray.primitveCount);\r\n            }\r\n        }\r\n        if (this.bindingVao != null) {\r\n            vertexArray.unbind();\r\n        }\r\n    }\r\n}\r\n\r\ndeclare global {\r\n    interface WebGLVertexArrayObject extends WebGLObject { }\r\n\r\n    interface WebGLQuery extends WebGLObject { }\r\n\r\n    interface EXT_disjoint_timer_query {\r\n        QUERY_COUNTER_BITS_EXT: number;\r\n        TIME_ELAPSED_EXT: number;\r\n        TIMESTAMP_EXT: number;\r\n        GPU_DISJOINT_EXT: number;\r\n        QUERY_RESULT_EXT: number;\r\n        QUERY_RESULT_AVAILABLE_EXT: number;\r\n        queryCounterEXT(query: WebGLQuery, target: number): void;\r\n        createQueryEXT(): WebGLQuery;\r\n        beginQueryEXT(target: number, query: WebGLQuery): void;\r\n        endQueryEXT(target: number): void;\r\n        getQueryObjectEXT(query: WebGLQuery, target: number): any;\r\n        deleteQueryEXT(query: WebGLQuery): void;\r\n    }\r\n    interface WebGLVertexArrayObject extends WebGLObject { }\r\n\r\n    interface WebGLRenderingContext {\r\n        addExtension(extName: string): void;\r\n        createVertexArray(): any;\r\n        bindVertexArray(vao?: WebGLVertexArrayObject | null): void;\r\n        deleteVertexArray(vao: WebGLVertexArrayObject): void;\r\n\r\n        vertexAttribDivisor(index: number, divisor: number): void;\r\n        drawElementsInstanced(mode: number, count: number, type: number, offset: number, instanceCount: number): void;\r\n        drawArraysInstanced(mode: number, first: number, count: number, instanceCount: number): void;\r\n        renderbufferStorageMultisample(\r\n            target: number,\r\n            samples: number,\r\n            internalformat: number,\r\n            width: number,\r\n            height: number,\r\n        ): void;\r\n\r\n        getQuery(target: number, pname: number): any;\r\n    }\r\n}\r\n\r\n\r\n","//通过url获取资源的名称(包含尾缀)\r\nexport function getFileName(url: string): string\r\n{\r\n    let filei = url.lastIndexOf(\"/\");\r\n    let file = url.substr(filei + 1);\r\n    return file;\r\n}\r\nexport function getFileNameWithoutExtralName(url: string): string\r\n{\r\n    let filei = url.lastIndexOf(\"/\");\r\n    let file = url.substr(filei + 1);\r\n\r\n    let index = file.indexOf(\".\", 0);\r\n    let name = file.substr(0, index);\r\n    return name;\r\n}\r\n// static getAssetExtralType(url: string): AssetExtralEnum {\r\n//     let index = url.lastIndexOf(\"/\");\r\n//     let filename = url.substr(index + 1);\r\n//     index = filename.indexOf(\".\", 0);\r\n//     let extname = filename.substr(index);\r\n//     let type = this.ExtendNameDic[extname];\r\n//     if (type == null) {\r\n//         console.warn(\"Load Asset Failed.type:(\" + type + \") not have loader yet\");\r\n//     }\r\n//     return type;\r\n// }\r\nexport function getAssetExtralName(url: string): string\r\n{\r\n    let index = url.lastIndexOf(\"/\");\r\n    let filename = url.substr(index + 1);\r\n    index = filename.indexOf(\".\", 0);\r\n    let extname = filename.substr(index);\r\n    return extname;\r\n}\r\n\r\nexport function getAssetDirectory(url: string): string\r\n{\r\n    let filei = url.lastIndexOf(\"/\");\r\n    let file = url.substr(0, filei);\r\n    return file;\r\n}\r\n","import { getAssetExtralName } from \"./Util\";\r\nimport { Asset } from \"../scene/asset/Asset\";\r\n\r\nexport interface IassetLoader\r\n{\r\n    load(url: string): Promise<Asset>\r\n}\r\n\r\nexport class Resource\r\n{\r\n    private resLoaderDic: { [ExtralName: string]: IassetLoader } = {};\r\n    registerAssetLoader(extral: string, factory: IassetLoader)\r\n    {\r\n        console.warn(\"loader type:\", extral);\r\n        this.resLoaderDic[extral] = factory;\r\n    }\r\n    getAssetLoader(url: string): IassetLoader\r\n    {\r\n        let extralType = getAssetExtralName(url);\r\n        let factory = this.resLoaderDic[extralType];\r\n        return factory;\r\n    }\r\n    /**\r\n     * 调用load方法就会塞到这里面来\r\n     */\r\n    private loadMap: { [url: string]: Promise<Asset> } = {};\r\n\r\n    /**\r\n     * 加载资源\r\n     * @param url 地址\r\n     * @param onFinish  load回调]\r\n     */\r\n    load(url: string): Promise<Asset> \r\n    {\r\n        if (this.loadMap[url])\r\n        {\r\n            return this.loadMap[url]\r\n        } else\r\n        {\r\n            let loader = this.getAssetLoader(url);\r\n            if (loader == null)\r\n            {\r\n                let errorMsg = \"ERROR: load Asset error. INfo: not have Load Func to handle (\" + getAssetExtralName(url) + \") type File.  load URL:\" + url;\r\n                return Promise.reject(errorMsg);\r\n            } else\r\n            {\r\n                this.loadMap[url] = loader.load(url);\r\n                return this.loadMap[url];\r\n            }\r\n        }\r\n    }\r\n}","/*! *****************************************************************************\r\nCopyright (c) Microsoft Corporation. All rights reserved.\r\nLicensed under the Apache License, Version 2.0 (the \"License\"); you may not use\r\nthis file except in compliance with the License. You may obtain a copy of the\r\nLicense at http://www.apache.org/licenses/LICENSE-2.0\r\n\r\nTHIS CODE IS PROVIDED ON AN *AS IS* BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY\r\nKIND, EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION ANY IMPLIED\r\nWARRANTIES OR CONDITIONS OF TITLE, FITNESS FOR A PARTICULAR PURPOSE,\r\nMERCHANTABLITY OR NON-INFRINGEMENT.\r\n\r\nSee the Apache Version 2.0 License for specific language governing permissions\r\nand limitations under the License.\r\n***************************************************************************** */\r\n/* global Reflect, Promise */\r\n\r\nvar extendStatics = function(d, b) {\r\n    extendStatics = Object.setPrototypeOf ||\r\n        ({ __proto__: [] } instanceof Array && function (d, b) { d.__proto__ = b; }) ||\r\n        function (d, b) { for (var p in b) if (b.hasOwnProperty(p)) d[p] = b[p]; };\r\n    return extendStatics(d, b);\r\n};\r\n\r\nexport function __extends(d, b) {\r\n    extendStatics(d, b);\r\n    function __() { this.constructor = d; }\r\n    d.prototype = b === null ? Object.create(b) : (__.prototype = b.prototype, new __());\r\n}\r\n\r\nexport var __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    }\r\n    return __assign.apply(this, arguments);\r\n}\r\n\r\nexport function __rest(s, e) {\r\n    var t = {};\r\n    for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p) && e.indexOf(p) < 0)\r\n        t[p] = s[p];\r\n    if (s != null && typeof Object.getOwnPropertySymbols === \"function\")\r\n        for (var i = 0, p = Object.getOwnPropertySymbols(s); i < p.length; i++) {\r\n            if (e.indexOf(p[i]) < 0 && Object.prototype.propertyIsEnumerable.call(s, p[i]))\r\n                t[p[i]] = s[p[i]];\r\n        }\r\n    return t;\r\n}\r\n\r\nexport function __decorate(decorators, target, key, desc) {\r\n    var c = arguments.length, r = c < 3 ? target : desc === null ? desc = Object.getOwnPropertyDescriptor(target, key) : desc, d;\r\n    if (typeof Reflect === \"object\" && typeof Reflect.decorate === \"function\") r = Reflect.decorate(decorators, target, key, desc);\r\n    else for (var i = decorators.length - 1; i >= 0; i--) if (d = decorators[i]) r = (c < 3 ? d(r) : c > 3 ? d(target, key, r) : d(target, key)) || r;\r\n    return c > 3 && r && Object.defineProperty(target, key, r), r;\r\n}\r\n\r\nexport function __param(paramIndex, decorator) {\r\n    return function (target, key) { decorator(target, key, paramIndex); }\r\n}\r\n\r\nexport function __metadata(metadataKey, metadataValue) {\r\n    if (typeof Reflect === \"object\" && typeof Reflect.metadata === \"function\") return Reflect.metadata(metadataKey, metadataValue);\r\n}\r\n\r\nexport function __awaiter(thisArg, _arguments, P, generator) {\r\n    function adopt(value) { return value instanceof P ? value : new P(function (resolve) { resolve(value); }); }\r\n    return new (P || (P = Promise))(function (resolve, reject) {\r\n        function fulfilled(value) { try { step(generator.next(value)); } catch (e) { reject(e); } }\r\n        function rejected(value) { try { step(generator[\"throw\"](value)); } catch (e) { reject(e); } }\r\n        function step(result) { result.done ? resolve(result.value) : adopt(result.value).then(fulfilled, rejected); }\r\n        step((generator = generator.apply(thisArg, _arguments || [])).next());\r\n    });\r\n}\r\n\r\nexport function __generator(thisArg, body) {\r\n    var _ = { label: 0, sent: function() { if (t[0] & 1) throw t[1]; return t[1]; }, trys: [], ops: [] }, f, y, t, g;\r\n    return g = { next: verb(0), \"throw\": verb(1), \"return\": verb(2) }, typeof Symbol === \"function\" && (g[Symbol.iterator] = function() { return this; }), g;\r\n    function verb(n) { return function (v) { return step([n, v]); }; }\r\n    function step(op) {\r\n        if (f) throw new TypeError(\"Generator is already executing.\");\r\n        while (_) try {\r\n            if (f = 1, y && (t = op[0] & 2 ? y[\"return\"] : op[0] ? y[\"throw\"] || ((t = y[\"return\"]) && t.call(y), 0) : y.next) && !(t = t.call(y, op[1])).done) return t;\r\n            if (y = 0, t) op = [op[0] & 2, t.value];\r\n            switch (op[0]) {\r\n                case 0: case 1: t = op; break;\r\n                case 4: _.label++; return { value: op[1], done: false };\r\n                case 5: _.label++; y = op[1]; op = [0]; continue;\r\n                case 7: op = _.ops.pop(); _.trys.pop(); continue;\r\n                default:\r\n                    if (!(t = _.trys, t = t.length > 0 && t[t.length - 1]) && (op[0] === 6 || op[0] === 2)) { _ = 0; continue; }\r\n                    if (op[0] === 3 && (!t || (op[1] > t[0] && op[1] < t[3]))) { _.label = op[1]; break; }\r\n                    if (op[0] === 6 && _.label < t[1]) { _.label = t[1]; t = op; break; }\r\n                    if (t && _.label < t[2]) { _.label = t[2]; _.ops.push(op); break; }\r\n                    if (t[2]) _.ops.pop();\r\n                    _.trys.pop(); continue;\r\n            }\r\n            op = body.call(thisArg, _);\r\n        } catch (e) { op = [6, e]; y = 0; } finally { f = t = 0; }\r\n        if (op[0] & 5) throw op[1]; return { value: op[0] ? op[1] : void 0, done: true };\r\n    }\r\n}\r\n\r\nexport function __exportStar(m, exports) {\r\n    for (var p in m) if (!exports.hasOwnProperty(p)) exports[p] = m[p];\r\n}\r\n\r\nexport function __values(o) {\r\n    var s = typeof Symbol === \"function\" && Symbol.iterator, m = s && o[s], i = 0;\r\n    if (m) return m.call(o);\r\n    if (o && typeof o.length === \"number\") return {\r\n        next: function () {\r\n            if (o && i >= o.length) o = void 0;\r\n            return { value: o && o[i++], done: !o };\r\n        }\r\n    };\r\n    throw new TypeError(s ? \"Object is not iterable.\" : \"Symbol.iterator is not defined.\");\r\n}\r\n\r\nexport function __read(o, n) {\r\n    var m = typeof Symbol === \"function\" && o[Symbol.iterator];\r\n    if (!m) return o;\r\n    var i = m.call(o), r, ar = [], e;\r\n    try {\r\n        while ((n === void 0 || n-- > 0) && !(r = i.next()).done) ar.push(r.value);\r\n    }\r\n    catch (error) { e = { error: error }; }\r\n    finally {\r\n        try {\r\n            if (r && !r.done && (m = i[\"return\"])) m.call(i);\r\n        }\r\n        finally { if (e) throw e.error; }\r\n    }\r\n    return ar;\r\n}\r\n\r\nexport function __spread() {\r\n    for (var ar = [], i = 0; i < arguments.length; i++)\r\n        ar = ar.concat(__read(arguments[i]));\r\n    return ar;\r\n}\r\n\r\nexport function __spreadArrays() {\r\n    for (var s = 0, i = 0, il = arguments.length; i < il; i++) s += arguments[i].length;\r\n    for (var r = Array(s), k = 0, i = 0; i < il; i++)\r\n        for (var a = arguments[i], j = 0, jl = a.length; j < jl; j++, k++)\r\n            r[k] = a[j];\r\n    return r;\r\n};\r\n\r\nexport function __await(v) {\r\n    return this instanceof __await ? (this.v = v, this) : new __await(v);\r\n}\r\n\r\nexport function __asyncGenerator(thisArg, _arguments, generator) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var g = generator.apply(thisArg, _arguments || []), i, q = [];\r\n    return i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i;\r\n    function verb(n) { if (g[n]) i[n] = function (v) { return new Promise(function (a, b) { q.push([n, v, a, b]) > 1 || resume(n, v); }); }; }\r\n    function resume(n, v) { try { step(g[n](v)); } catch (e) { settle(q[0][3], e); } }\r\n    function step(r) { r.value instanceof __await ? Promise.resolve(r.value.v).then(fulfill, reject) : settle(q[0][2], r); }\r\n    function fulfill(value) { resume(\"next\", value); }\r\n    function reject(value) { resume(\"throw\", value); }\r\n    function settle(f, v) { if (f(v), q.shift(), q.length) resume(q[0][0], q[0][1]); }\r\n}\r\n\r\nexport function __asyncDelegator(o) {\r\n    var i, p;\r\n    return i = {}, verb(\"next\"), verb(\"throw\", function (e) { throw e; }), verb(\"return\"), i[Symbol.iterator] = function () { return this; }, i;\r\n    function verb(n, f) { i[n] = o[n] ? function (v) { return (p = !p) ? { value: __await(o[n](v)), done: n === \"return\" } : f ? f(v) : v; } : f; }\r\n}\r\n\r\nexport function __asyncValues(o) {\r\n    if (!Symbol.asyncIterator) throw new TypeError(\"Symbol.asyncIterator is not defined.\");\r\n    var m = o[Symbol.asyncIterator], i;\r\n    return m ? m.call(o) : (o = typeof __values === \"function\" ? __values(o) : o[Symbol.iterator](), i = {}, verb(\"next\"), verb(\"throw\"), verb(\"return\"), i[Symbol.asyncIterator] = function () { return this; }, i);\r\n    function verb(n) { i[n] = o[n] && function (v) { return new Promise(function (resolve, reject) { v = o[n](v), settle(resolve, reject, v.done, v.value); }); }; }\r\n    function settle(resolve, reject, d, v) { Promise.resolve(v).then(function(v) { resolve({ value: v, done: d }); }, reject); }\r\n}\r\n\r\nexport function __makeTemplateObject(cooked, raw) {\r\n    if (Object.defineProperty) { Object.defineProperty(cooked, \"raw\", { value: raw }); } else { cooked.raw = raw; }\r\n    return cooked;\r\n};\r\n\r\nexport function __importStar(mod) {\r\n    if (mod && mod.__esModule) return mod;\r\n    var result = {};\r\n    if (mod != null) for (var k in mod) if (Object.hasOwnProperty.call(mod, k)) result[k] = mod[k];\r\n    result.default = mod;\r\n    return result;\r\n}\r\n\r\nexport function __importDefault(mod) {\r\n    return (mod && mod.__esModule) ? mod : { default: mod };\r\n}\r\n\r\nexport function __classPrivateFieldGet(receiver, privateMap) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to get private field on non-instance\");\r\n    }\r\n    return privateMap.get(receiver);\r\n}\r\n\r\nexport function __classPrivateFieldSet(receiver, privateMap, value) {\r\n    if (!privateMap.has(receiver)) {\r\n        throw new TypeError(\"attempted to set private field on non-instance\");\r\n    }\r\n    privateMap.set(receiver, value);\r\n    return value;\r\n}\r\n","﻿export enum ResponseTypeEnum {\r\n    text = \"text\",\r\n    json = \"json\",\r\n    blob = \"blob\",\r\n    arraybuffer = \"arraybuffer\",\r\n}\r\n\r\n/**\r\n * Load a script (identified by an url). When the url returns, the\r\n * content of this file is added into a new script element, attached to the DOM (body element)\r\n */\r\nexport function LoadScript(scriptUrl: string): Promise<void> {\r\n    return new Promise<void>((resolve, reject) => {\r\n        var head = document.getElementsByTagName(\"head\")[0];\r\n        var script = document.createElement(\"script\");\r\n        script.type = \"text/javascript\";\r\n        script.src = scriptUrl;\r\n        head.appendChild(script);\r\n        script.onload = () => {\r\n            resolve();\r\n        };\r\n        script.onerror = e => {\r\n            reject(e);\r\n        };\r\n    });\r\n}\r\ninterface IdownloadInfo {\r\n    loaded: number;\r\n    total: number;\r\n}\r\n\r\nfunction httpRequeset(\r\n    url: string,\r\n    type: ResponseTypeEnum,\r\n    onProgress: (info: IdownloadInfo) => void = null,\r\n): Promise<any> {\r\n    return new Promise<any>((resolve, reject) => {\r\n        let req = new XMLHttpRequest();\r\n        req.open(\"GET\", url);\r\n        req.responseType = type;\r\n\r\n        req.onprogress = e => {\r\n            if (onProgress) {\r\n                onProgress({ loaded: e.loaded, total: e.total });\r\n            }\r\n        };\r\n        req.onerror = e => {\r\n            reject(e);\r\n        };\r\n        req.send();\r\n\r\n        req.onreadystatechange = () => {\r\n            if (req.readyState == 4) {\r\n                if (req.status == 404) {\r\n                    reject(new Error(\"got a 404:\" + url));\r\n                    return;\r\n                }\r\n                resolve(req.response);\r\n            }\r\n        };\r\n    });\r\n}\r\nexport function loadJson(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<JSON> {\r\n    return httpRequeset(url, ResponseTypeEnum.json, onProgress);\r\n}\r\nexport function loadText(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<string> {\r\n    return httpRequeset(url, ResponseTypeEnum.text, onProgress);\r\n}\r\nexport function loadArrayBuffer(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<ArrayBuffer> {\r\n    return httpRequeset(url, ResponseTypeEnum.arraybuffer, onProgress);\r\n}\r\n\r\nexport function loadBlob(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<Blob> {\r\n    return httpRequeset(url, ResponseTypeEnum.blob, onProgress);\r\n}\r\n\r\nexport function loadImg(url: string, onProgress: (info: IdownloadInfo) => void = null): Promise<HTMLImageElement> {\r\n    return new Promise<HTMLImageElement>((resolve, reject) => {\r\n        let img = new Image();\r\n        img.src = url;\r\n        img.onerror = error => {\r\n            reject(error);\r\n        };\r\n        img.onload = () => {\r\n            resolve(img);\r\n        };\r\n        img.onprogress = e => {\r\n            if (onProgress) {\r\n                onProgress({ loaded: e.loaded, total: e.total });\r\n            }\r\n        };\r\n    });\r\n}\r\nexport function arraybufferToImge(data: ArrayBuffer): Promise<HTMLImageElement> {\r\n    return new Promise<HTMLImageElement>((resolve, reject) => {\r\n        var arrayBufferView = new Uint8Array(data);\r\n        var blob = new Blob([arrayBufferView], { type: \"image/jpeg\" });\r\n        var imageUrl = window.URL.createObjectURL(blob);\r\n        let img = new Image();\r\n        img.src = imageUrl;\r\n        img.onerror = error => {\r\n            reject(error);\r\n        };\r\n        img.onload = () => {\r\n            URL.revokeObjectURL(img.src);\r\n            resolve(img);\r\n        };\r\n    });\r\n}\r\n","﻿export class BinReader {\r\n    private _data: DataView;\r\n    private _arrayBuffer: ArrayBuffer;\r\n    constructor(buf: ArrayBuffer, seek: number = 0) {\r\n        this._arrayBuffer = buf;\r\n        this._byteOffset = seek;\r\n        this._data = new DataView(buf, seek);\r\n    }\r\n    private _byteOffset: number;\r\n\r\n    seek(seek: number) {\r\n        this._byteOffset = seek;\r\n    }\r\n    peek(): number {\r\n        return this._byteOffset;\r\n    }\r\n    getPosition(): number {\r\n        return this._byteOffset;\r\n    }\r\n    getLength(): number {\r\n        return this._data.byteLength;\r\n    }\r\n    canread(): number {\r\n        //LogManager.Warn(this._buf.byteLength + \"  &&&&&&&&&&&   \" + this._seek + \"    \" + this._buf.buffer.byteLength);\r\n        return this._data.byteLength - this._byteOffset;\r\n    }\r\n    skipBytes(len: number) {\r\n        this._byteOffset += len;\r\n    }\r\n    readString(): string {\r\n        let slen = this._data.getUint8(this._byteOffset);\r\n        this._byteOffset++;\r\n        let bs = \"\";\r\n        for (let i = 0; i < slen; i++) {\r\n            bs += String.fromCharCode(this._data.getUint8(this._byteOffset));\r\n            this._byteOffset++;\r\n        }\r\n        return bs;\r\n    }\r\n    readStrLenAndContent(): string {\r\n        let leng = this.readByte();\r\n        return this.readUint8ArrToString(leng);\r\n    }\r\n    private static _decodeBufferToText(buffer: Uint8Array): string {\r\n        let result = \"\";\r\n        const length = buffer.byteLength;\r\n\r\n        for (let i = 0; i < length; i++) {\r\n            result += String.fromCharCode(buffer[i]);\r\n        }\r\n\r\n        return result;\r\n    }\r\n\r\n    static utf8ArrayToString(array: Uint8Array | number[]): string {\r\n        let ret: string[] = [];\r\n        for (let i = 0; i < array.length; i++) {\r\n            let cc = array[i];\r\n            if (cc == 0) break;\r\n            let ct = 0;\r\n            if (cc > 0xe0) {\r\n                ct = (cc & 0x0f) << 12;\r\n                cc = array[++i];\r\n                ct |= (cc & 0x3f) << 6;\r\n                cc = array[++i];\r\n                ct |= cc & 0x3f;\r\n                ret.push(String.fromCharCode(ct));\r\n            } else if (cc > 0xc0) {\r\n                ct = (cc & 0x1f) << 6;\r\n                cc = array[++i];\r\n                ct |= (cc & 0x3f) << 6;\r\n                ret.push(String.fromCharCode(ct));\r\n            } else if (cc > 0x80) {\r\n                throw new Error(\"InvalidCharacterError\");\r\n            } else {\r\n                ret.push(String.fromCharCode(array[i]));\r\n            }\r\n        }\r\n        return ret.join(\"\");\r\n\r\n        //                let b = array[i];\r\n        //    if (b > 0 && b < 16)\r\n        //    {\r\n        //        uri += '%0' + b.toString(16);\r\n        //    }\r\n        //    else if (b > 16)\r\n        //    {\r\n        //        uri += '%' + b.toString(16);\r\n        //    }\r\n        //}\r\n        //return decodeURIComponent(uri);\r\n    }\r\n    // readStringUtf8(): string\r\n    // {\r\n    //     let length = this._data.getInt8(this._byteOffset);\r\n    //     this._byteOffset++;\r\n    //     let arr = new Uint8Array(length);\r\n    //     this.readUint8Array(arr);\r\n    //     return binReader.utf8ArrayToString(arr);\r\n    // }\r\n    readUint8ArrToString(length: number): string {\r\n        let arr = this.readUint8Array(length);\r\n        return BinReader._decodeBufferToText(arr);\r\n    }\r\n    readSingle(): number {\r\n        let num = this._data.getFloat32(this._byteOffset, true);\r\n        this._byteOffset += 4;\r\n        return num;\r\n    }\r\n    readDouble(): number {\r\n        let num = this._data.getFloat64(this._byteOffset, true);\r\n        this._byteOffset += 8;\r\n        return num;\r\n    }\r\n    readInt8(): number {\r\n        let num = this._data.getInt8(this._byteOffset);\r\n        this._byteOffset += 1;\r\n        return num;\r\n    }\r\n    readUInt8(): number {\r\n        //LogManager.Warn(this._data.byteLength + \"  @@@@@@@@@@@@@@@@@  \" + this._seek);\r\n        let num = this._data.getUint8(this._byteOffset);\r\n        this._byteOffset += 1;\r\n        return num;\r\n    }\r\n    readInt16(): number {\r\n        //LogManager.Log(this._seek + \"   \" + this.length());\r\n        let num = this._data.getInt16(this._byteOffset, true);\r\n        this._byteOffset += 2;\r\n        return num;\r\n    }\r\n    readUInt16(): number {\r\n        let num = this._data.getUint16(this._byteOffset, true);\r\n        this._byteOffset += 2;\r\n        //LogManager.Warn(\"readUInt16 \" + this._seek);\r\n        return num;\r\n    }\r\n    readInt32(): number {\r\n        let num = this._data.getInt32(this._byteOffset, true);\r\n        this._byteOffset += 4;\r\n        return num;\r\n    }\r\n    readUint32(): number {\r\n        let num = this._data.getUint32(this._byteOffset, true);\r\n        this._byteOffset += 4;\r\n        return num;\r\n    }\r\n    readUint8Array(length: number): Uint8Array {\r\n        const value = new Uint8Array(this._arrayBuffer, this._byteOffset, length);\r\n        this._byteOffset += length;\r\n        return value;\r\n    }\r\n\r\n    readUint8ArrayByOffset(target: Uint8Array, offset: number, length: number = 0): Uint8Array {\r\n        if (length < 0) length = target.length;\r\n        for (let i = 0; i < length; i++) {\r\n            target[i] = this._data.getUint8(offset);\r\n            offset++;\r\n        }\r\n        return target;\r\n    }\r\n\r\n    public set position(value: number) {\r\n        this.seek(value);\r\n    }\r\n    public get position(): number {\r\n        return this.peek();\r\n    }\r\n\r\n    readBoolean(): boolean {\r\n        return this.readUInt8() > 0;\r\n    }\r\n    readByte(): number {\r\n        return this.readUInt8();\r\n    }\r\n\r\n    // readBytes(target: Uint8Array = null, length: number = -1): Uint8Array\r\n    // {\r\n    //     return this.readUint8Array(target, length);\r\n    // }\r\n\r\n    readUnsignedShort(): number {\r\n        return this.readUInt16();\r\n    }\r\n\r\n    readUnsignedInt(): number {\r\n        return this.readUint32();\r\n    }\r\n\r\n    readFloat(): number {\r\n        return this.readSingle();\r\n    }\r\n\r\n    /// <summary>\r\n    /// 有符号 Byte\r\n    /// </summary>\r\n    readSymbolByte(): number {\r\n        return this.readInt8();\r\n    }\r\n\r\n    readShort(): number {\r\n        return this.readInt16();\r\n    }\r\n\r\n    readInt(): number {\r\n        return this.readInt32();\r\n    }\r\n}\r\nexport class BinWriter {\r\n    _buf: Uint8Array;\r\n    private _data: DataView;\r\n    private _length: number;\r\n    private _seek: number;\r\n\r\n    constructor() {\r\n        let buf = new ArrayBuffer(1024);\r\n        this._length = 0;\r\n        this._buf = new Uint8Array(buf);\r\n        this._data = new DataView(this._buf.buffer);\r\n        this._seek = 0;\r\n    }\r\n    private sureData(addlen: number): void {\r\n        let nextlen = this._buf.byteLength;\r\n        while (nextlen < this._length + addlen) {\r\n            nextlen += 1024;\r\n        }\r\n        if (nextlen != this._buf.byteLength) {\r\n            let newbuf = new Uint8Array(nextlen);\r\n            for (let i = 0; i < this._length; i++) {\r\n                newbuf[i] = this._buf[i];\r\n            }\r\n            this._buf = newbuf;\r\n            this._data = new DataView(this._buf.buffer);\r\n        }\r\n        this._length += addlen;\r\n    }\r\n    getLength(): number {\r\n        return length;\r\n    }\r\n    getBuffer(): ArrayBuffer {\r\n        return this._buf.buffer.slice(0, this._length);\r\n    }\r\n    seek(seek: number) {\r\n        this._seek = seek;\r\n    }\r\n    peek(): number {\r\n        return this._seek;\r\n    }\r\n    writeInt8(num: number): void {\r\n        this.sureData(1);\r\n        this._data.setInt8(this._seek, num);\r\n        this._seek++;\r\n    }\r\n    writeUInt8(num: number): void {\r\n        this.sureData(1);\r\n        this._data.setUint8(this._seek, num);\r\n        this._seek++;\r\n    }\r\n    writeInt16(num: number): void {\r\n        this.sureData(2);\r\n        this._data.setInt16(this._seek, num, true);\r\n        this._seek += 2;\r\n    }\r\n    writeUInt16(num: number): void {\r\n        this.sureData(2);\r\n        this._data.setUint16(this._seek, num, true);\r\n        this._seek += 2;\r\n    }\r\n    writeInt32(num: number): void {\r\n        this.sureData(4);\r\n        this._data.setInt32(this._seek, num, true);\r\n        this._seek += 4;\r\n    }\r\n    writeUInt32(num: number): void {\r\n        this.sureData(4);\r\n        this._data.setUint32(this._seek, num, true);\r\n        this._seek += 4;\r\n    }\r\n    writeSingle(num: number): void {\r\n        this.sureData(4);\r\n        this._data.setFloat32(this._seek, num, true);\r\n        this._seek += 4;\r\n    }\r\n    writeDouble(num: number): void {\r\n        this.sureData(8);\r\n        this._data.setFloat64(this._seek, num, true);\r\n        this._seek += 8;\r\n    }\r\n    writeStringAnsi(str: string): void {\r\n        let slen = str.length;\r\n        this.sureData(slen + 1);\r\n        this._data.setUint8(this._seek, slen);\r\n        this._seek++;\r\n        for (let i = 0; i < slen; i++) {\r\n            this._data.setUint8(this._seek, str.charCodeAt(i));\r\n            this._seek++;\r\n        }\r\n    }\r\n    writeStringUtf8(str: string) {\r\n        let bstr = BinWriter.stringToUtf8Array(str);\r\n        this.writeUInt8(bstr.length);\r\n        this.writeUint8Array(bstr);\r\n    }\r\n    static stringToUtf8Array(str: string): number[] {\r\n        let bstr: number[] = [];\r\n        for (let i = 0; i < str.length; i++) {\r\n            let c = str.charAt(i);\r\n            let cc = c.charCodeAt(0);\r\n            if (cc > 0xffff) {\r\n                throw new Error(\"InvalidCharacterError\");\r\n            }\r\n            if (cc > 0x80) {\r\n                if (cc < 0x07ff) {\r\n                    let c1 = (cc >>> 6) | 0xc0;\r\n                    let c2 = (cc & 0x3f) | 0x80;\r\n                    bstr.push(c1, c2);\r\n                } else {\r\n                    let c1 = (cc >>> 12) | 0xe0;\r\n                    let c2 = ((cc >>> 6) & 0x3f) | 0x80;\r\n                    let c3 = (cc & 0x3f) | 0x80;\r\n                    bstr.push(c1, c2, c3);\r\n                }\r\n            } else {\r\n                bstr.push(cc);\r\n            }\r\n        }\r\n        return bstr;\r\n    }\r\n    writeStringUtf8DataOnly(str: string) {\r\n        let bstr = BinWriter.stringToUtf8Array(str);\r\n        this.writeUint8Array(bstr);\r\n    }\r\n    writeUint8Array(array: Uint8Array | number[], offset: number = 0, length: number = -1) {\r\n        if (length < 0) length = array.length;\r\n        this.sureData(length);\r\n        for (let i = offset; i < offset + length; i++) {\r\n            this._data.setUint8(this._seek, array[i]);\r\n            this._seek++;\r\n        }\r\n    }\r\n\r\n    public get length(): number {\r\n        return this._seek;\r\n    }\r\n\r\n    writeByte(num: number): void {\r\n        this.writeUInt8(num);\r\n    }\r\n\r\n    writeBytes(array: Uint8Array | number[], offset: number = 0, length: number = 0) {\r\n        this.writeUint8Array(array, offset, length);\r\n    }\r\n\r\n    writeUnsignedShort(num: number): void {\r\n        this.writeUInt16(num);\r\n    }\r\n\r\n    writeUnsignedInt(num: number): void {\r\n        this.writeUInt32(num);\r\n    }\r\n\r\n    writeFloat(num: number): void {\r\n        this.writeSingle(num);\r\n    }\r\n\r\n    writeUTFBytes(str: string): void {\r\n        let strArray = BinWriter.stringToUtf8Array(str);\r\n        this.writeUint8Array(strArray);\r\n    }\r\n\r\n    /// <summary>\r\n    /// 写入有符号 Byte\r\n    /// </summary>\r\n    writeSymbolByte(num: number): void {\r\n        this.writeInt8(num);\r\n    }\r\n\r\n    writeShort(num: number): void {\r\n        this.writeInt16(num);\r\n    }\r\n\r\n    writeInt(num: number): void {\r\n        this.writeInt32(num);\r\n    }\r\n}\r\n","/**\r\n * The root object for a glTF asset\r\n */\r\nexport interface Igltf {\r\n    /**\r\n     * An array of accessors. An accessor is a typed view into a bufferView\r\n     */\r\n    accessors?: IgltfAccessor[];\r\n    /**\r\n     * An array of keyframe animations\r\n     */\r\n    animations?: IgltfAnimation[];\r\n    /**\r\n     * Metadata about the glTF asset\r\n     */\r\n    asset: IglTFAsset;\r\n    /**\r\n     * An array of buffers.  A buffer points to binary geometry, animation, or skins\r\n     */\r\n    buffers?: IgltfBuffer[];\r\n    /**\r\n     * An array of bufferViews.  A bufferView is a view into a buffer generally representing a subset of the buffer\r\n     */\r\n    bufferViews?: IgltfBufferView[];\r\n    /**\r\n     * An array of cameras\r\n     */\r\n    cameras?: IgltfCamera[];\r\n    /**\r\n     * Names of glTF extensions used somewhere in this asset\r\n     */\r\n    extensionsUsed?: string[];\r\n    /**\r\n     * Names of glTF extensions required to properly load this asset\r\n     */\r\n    extensionsRequired?: string[];\r\n    /**\r\n     * An array of images.  An image defines data used to create a texture\r\n     */\r\n    images?: IgltfImage[];\r\n    /**\r\n     * An array of materials.  A material defines the appearance of a primitive\r\n     */\r\n    materials?: IgltfMaterial[];\r\n    /**\r\n     * An array of meshes.  A mesh is a set of primitives to be rendered\r\n     */\r\n    meshes?: IgltfMesh[];\r\n    /**\r\n     * An array of nodes\r\n     */\r\n    nodes?: IgltfNode[];\r\n    /**\r\n     * An array of samplers.  A sampler contains properties for texture filtering and wrapping modes\r\n     */\r\n    samplers?: IgltfSampler[];\r\n    /**\r\n     * The index of the default scene\r\n     */\r\n    scene?: number;\r\n    /**\r\n     * An array of scenes\r\n     */\r\n    scenes?: IgltfScene[];\r\n    /**\r\n     * An array of skins.  A skin is defined by joints and matrices\r\n     */\r\n    skins?: IgltfSkin[];\r\n    /**\r\n     * An array of textures\r\n     */\r\n    textures?: IgltfTexture[];\r\n}\r\n\r\nexport enum AccessorComponentType {\r\n    /**\r\n     * Byte\r\n     */\r\n    BYTE = 5120,\r\n    /**\r\n     * Unsigned Byte\r\n     */\r\n    UNSIGNED_BYTE = 5121,\r\n    /**\r\n     * Short\r\n     */\r\n    SHORT = 5122,\r\n    /**\r\n     * Unsigned Short\r\n     */\r\n    UNSIGNED_SHORT = 5123,\r\n    /**\r\n     * Unsigned Int\r\n     */\r\n    UNSIGNED_INT = 5125,\r\n    /**\r\n     * Float\r\n     */\r\n    FLOAT = 5126,\r\n}\r\n/**\r\n * Specifies if the attirbute is a scalar, vector, or matrix\r\n */\r\nexport enum AccessorType {\r\n    /**\r\n     * Scalar\r\n     */\r\n    SCALAR = \"SCALAR\",\r\n    /**\r\n     * Vector2\r\n     */\r\n    VEC2 = \"VEC2\",\r\n    /**\r\n     * Vector3\r\n     */\r\n    VEC3 = \"VEC3\",\r\n    /**\r\n     * Vector4\r\n     */\r\n    VEC4 = \"VEC4\",\r\n    /**\r\n     * Matrix2x2\r\n     */\r\n    MAT2 = \"MAT2\",\r\n    /**\r\n     * Matrix3x3\r\n     */\r\n    MAT3 = \"MAT3\",\r\n    /**\r\n     * Matrix4x4\r\n     */\r\n    MAT4 = \"MAT4\",\r\n}\r\n/**\r\n * The name of the node's TRS property to modify, or the weights of the Morph Targets it instantiates\r\n */\r\nexport enum AnimationChannelTargetPath {\r\n    /**\r\n     * Translation\r\n     */\r\n    TRANSLATION = \"translation\",\r\n    /**\r\n     * Rotation\r\n     */\r\n    ROTATION = \"rotation\",\r\n    /**\r\n     * Scale\r\n     */\r\n    SCALE = \"scale\",\r\n    /**\r\n     * Weights\r\n     */\r\n    WEIGHTS = \"weights\",\r\n}\r\n/**\r\n * Interpolation algorithm\r\n */\r\nexport enum AnimationSamplerInterpolation {\r\n    /**\r\n     * The animated values are linearly interpolated between keyframes\r\n     */\r\n    LINEAR = \"LINEAR\",\r\n    /**\r\n     * The animated values remain constant to the output of the first keyframe, until the next keyframe\r\n     */\r\n    STEP = \"STEP\",\r\n    /**\r\n     * The animation's interpolation is computed using a cubic spline with specified tangents\r\n     */\r\n    CUBICSPLINE = \"CUBICSPLINE\",\r\n}\r\n/**\r\n * A camera's projection.  A node can reference a camera to apply a transform to place the camera in the scene\r\n */\r\nexport enum CameraType {\r\n    /**\r\n     * A perspective camera containing properties to create a perspective projection matrix\r\n     */\r\n    PERSPECTIVE = \"perspective\",\r\n    /**\r\n     * An orthographic camera containing properties to create an orthographic projection matrix\r\n     */\r\n    ORTHOGRAPHIC = \"orthographic\",\r\n}\r\n/**\r\n * The mime-type of the image\r\n */\r\nexport enum ImageMimeType {\r\n    /**\r\n     * JPEG Mime-type\r\n     */\r\n    JPEG = \"image/jpeg\",\r\n    /**\r\n     * PNG Mime-type\r\n     */\r\n    PNG = \"image/png\",\r\n}\r\n/**\r\n * The alpha rendering mode of the material\r\n */\r\nexport enum MaterialAlphaMode {\r\n    /**\r\n     * The alpha value is ignored and the rendered output is fully opaque\r\n     */\r\n    OPAQUE = \"OPAQUE\",\r\n    /**\r\n     * The rendered output is either fully opaque or fully transparent depending on the alpha value and the specified alpha cutoff value\r\n     */\r\n    MASK = \"MASK\",\r\n    /**\r\n     * The alpha value is used to composite the source and destination areas. The rendered output is combined with the background using the normal painting operation (i.e. the Porter and Duff over operator)\r\n     */\r\n    BLEND = \"BLEND\",\r\n}\r\n/**\r\n * The type of the primitives to render\r\n */\r\nexport enum MeshPrimitiveMode {\r\n    /**\r\n     * Points\r\n     */\r\n    POINTS = 0,\r\n    /**\r\n     * Lines\r\n     */\r\n    LINES = 1,\r\n    /**\r\n     * Line Loop\r\n     */\r\n    LINE_LOOP = 2,\r\n    /**\r\n     * Line Strip\r\n     */\r\n    LINE_STRIP = 3,\r\n    /**\r\n     * Triangles\r\n     */\r\n    TRIANGLES = 4,\r\n    /**\r\n     * Triangle Strip\r\n     */\r\n    TRIANGLE_STRIP = 5,\r\n    /**\r\n     * Triangle Fan\r\n     */\r\n    TRIANGLE_FAN = 6,\r\n}\r\n/**\r\n * Magnification filter.  Valid values correspond to WebGL enums: 9728 (NEAREST) and 9729 (LINEAR)\r\n */\r\nexport enum TextureMagFilter {\r\n    /**\r\n     * Nearest\r\n     */\r\n    NEAREST = 9728,\r\n    /**\r\n     * Linear\r\n     */\r\n    LINEAR = 9729,\r\n}\r\n/**\r\n * Minification filter.  All valid values correspond to WebGL enums\r\n */\r\nexport enum TextureMinFilter {\r\n    /**\r\n     * Nearest\r\n     */\r\n    NEAREST = 9728,\r\n    /**\r\n     * Linear\r\n     */\r\n    LINEAR = 9729,\r\n    /**\r\n     * Nearest Mip-Map Nearest\r\n     */\r\n    NEAREST_MIPMAP_NEAREST = 9984,\r\n    /**\r\n     * Linear Mipmap Nearest\r\n     */\r\n    LINEAR_MIPMAP_NEAREST = 9985,\r\n    /**\r\n     * Nearest Mipmap Linear\r\n     */\r\n    NEAREST_MIPMAP_LINEAR = 9986,\r\n    /**\r\n     * Linear Mipmap Linear\r\n     */\r\n    LINEAR_MIPMAP_LINEAR = 9987,\r\n}\r\n/**\r\n * S (U) wrapping mode.  All valid values correspond to WebGL enums\r\n */\r\nexport enum TextureWrapMode {\r\n    /**\r\n     * Clamp to Edge\r\n     */\r\n    CLAMP_TO_EDGE = 33071,\r\n    /**\r\n     * Mirrored Repeat\r\n     */\r\n    MIRRORED_REPEAT = 33648,\r\n    /**\r\n     * Repeat\r\n     */\r\n    REPEAT = 10497,\r\n}\r\n/**\r\n * glTF Property\r\n */\r\nexport interface Iproperty {\r\n    /**\r\n     * Dictionary object with extension-specific objects\r\n     */\r\n    extensions?: {\r\n        [key: string]: any;\r\n    };\r\n    /**\r\n     * Application-Specific data\r\n     */\r\n    extras?: any;\r\n}\r\n/**\r\n * glTF Child of Root Property\r\n */\r\nexport interface IchildRootProperty extends Iproperty {\r\n    /**\r\n     * The user-defined name of this object\r\n     */\r\n    name?: string;\r\n}\r\n/**\r\n * Indices of those attributes that deviate from their initialization value\r\n */\r\nexport interface IgltfAccessorSparseIndices extends Iproperty {\r\n    /**\r\n     * The index of the bufferView with sparse indices. Referenced bufferView can't have ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER target\r\n     */\r\n    bufferView: number;\r\n    /**\r\n     * The offset relative to the start of the bufferView in bytes. Must be aligned\r\n     */\r\n    byteOffset?: number;\r\n    /**\r\n     * The indices data type.  Valid values correspond to WebGL enums: 5121 (UNSIGNED_BYTE), 5123 (UNSIGNED_SHORT), 5125 (UNSIGNED_INT)\r\n     */\r\n    componentType: AccessorComponentType;\r\n}\r\n/**\r\n * Array of size accessor.sparse.count times number of components storing the displaced accessor attributes pointed by accessor.sparse.indices\r\n */\r\nexport interface IgltfAccessorSparseValues extends Iproperty {\r\n    /**\r\n     * The index of the bufferView with sparse values. Referenced bufferView can't have ARRAY_BUFFER or ELEMENT_ARRAY_BUFFER target\r\n     */\r\n    bufferView: number;\r\n    /**\r\n     * The offset relative to the start of the bufferView in bytes. Must be aligned\r\n     */\r\n    byteOffset?: number;\r\n}\r\n/**\r\n * Sparse storage of attributes that deviate from their initialization value\r\n */\r\nexport interface IgltfAccessorSparse extends Iproperty {\r\n    /**\r\n     * The number of attributes encoded in this sparse accessor\r\n     */\r\n    count: number;\r\n    /**\r\n     * Index array of size count that points to those accessor attributes that deviate from their initialization value. Indices must strictly increase\r\n     */\r\n    indices: IgltfAccessorSparseIndices;\r\n    /**\r\n     * Array of size count times number of components, storing the displaced accessor attributes pointed by indices. Substituted values must have the same componentType and number of components as the base accessor\r\n     */\r\n    values: IgltfAccessorSparseValues;\r\n}\r\n/**\r\n * A typed view into a bufferView.  A bufferView contains raw binary data.  An accessor provides a typed view into a bufferView or a subset of a bufferView similar to how WebGL's vertexAttribPointer() defines an attribute in a buffer\r\n */\r\nexport interface IgltfAccessor extends IchildRootProperty {\r\n    /**\r\n     * The index of the bufferview\r\n     */\r\n    bufferView?: number;\r\n    /**\r\n     * The offset relative to the start of the bufferView in bytes\r\n     */\r\n    byteOffset?: number;\r\n    /**\r\n     * The datatype of components in the attribute\r\n     */\r\n    componentType: AccessorComponentType;\r\n    /**\r\n     * Specifies whether integer data values should be normalized\r\n     */\r\n    normalized?: boolean;\r\n    /**\r\n     * The number of attributes referenced by this accessor\r\n     */\r\n    count: number;\r\n    /**\r\n     * Specifies if the attribute is a scalar, vector, or matrix\r\n     */\r\n    type: AccessorType;\r\n    /**\r\n     * Maximum value of each component in this attribute\r\n     */\r\n    max?: number[];\r\n    /**\r\n     * Minimum value of each component in this attribute\r\n     */\r\n    min?: number[];\r\n    /**\r\n     * Sparse storage of attributes that deviate from their initialization value\r\n     */\r\n    sparse?: IgltfAccessorSparse;\r\n}\r\n/**\r\n * Targets an animation's sampler at a node's property\r\n */\r\nexport interface IgltfAnimationChannel extends Iproperty {\r\n    /**\r\n     * The index of a sampler in this animation used to compute the value for the target\r\n     */\r\n    sampler: number;\r\n    /**\r\n     * The index of the node and TRS property to target\r\n     */\r\n    target: IgltfAnimationChannelTarget;\r\n}\r\n/**\r\n * The index of the node and TRS property that an animation channel targets\r\n */\r\nexport interface IgltfAnimationChannelTarget extends Iproperty {\r\n    /**\r\n     * The index of the node to target\r\n     */\r\n    node: number;\r\n    /**\r\n     * The name of the node's TRS property to modify, or the weights of the Morph Targets it instantiates\r\n     */\r\n    path: AnimationChannelTargetPath;\r\n}\r\n/**\r\n * Combines input and output accessors with an interpolation algorithm to define a keyframe graph (but not its target)\r\n */\r\nexport interface IgltfAnimationSampler extends Iproperty {\r\n    /**\r\n     * The index of an accessor containing keyframe input values, e.g., time\r\n     */\r\n    input: number;\r\n    /**\r\n     * Interpolation algorithm\r\n     */\r\n    interpolation?: AnimationSamplerInterpolation;\r\n    /**\r\n     * The index of an accessor, containing keyframe output values\r\n     */\r\n    output: number;\r\n}\r\n/**\r\n * A keyframe animation\r\n */\r\nexport interface IgltfAnimation extends IchildRootProperty {\r\n    /**\r\n     * An array of channels, each of which targets an animation's sampler at a node's property\r\n     */\r\n    channels: IgltfAnimationChannel[];\r\n    /**\r\n     * An array of samplers that combines input and output accessors with an interpolation algorithm to define a keyframe graph (but not its target)\r\n     */\r\n    samplers: IgltfAnimationSampler[];\r\n}\r\n/**\r\n * Metadata about the glTF asset\r\n */\r\nexport interface IglTFAsset extends IchildRootProperty {\r\n    /**\r\n     * A copyright message suitable for display to credit the content creator\r\n     */\r\n    copyright?: string;\r\n    /**\r\n     * Tool that generated this glTF model.  Useful for debugging\r\n     */\r\n    generator?: string;\r\n    /**\r\n     * The glTF version that this asset targets\r\n     */\r\n    version: string;\r\n    /**\r\n     * The minimum glTF version that this asset targets\r\n     */\r\n    minVersion?: string;\r\n}\r\n/**\r\n * A buffer points to binary geometry, animation, or skins\r\n */\r\nexport interface IgltfBuffer extends IchildRootProperty {\r\n    /**\r\n     * The uri of the buffer.  Relative paths are relative to the .gltf file.  Instead of referencing an external file, the uri can also be a data-uri\r\n     */\r\n    uri?: string;\r\n    /**\r\n     * The length of the buffer in bytes\r\n     */\r\n    byteLength: number;\r\n}\r\n/**\r\n * A view into a buffer generally representing a subset of the buffer\r\n */\r\nexport interface IgltfBufferView extends IchildRootProperty {\r\n    /**\r\n     * The index of the buffer\r\n     */\r\n    buffer: number;\r\n    /**\r\n     * The offset into the buffer in bytes\r\n     */\r\n    byteOffset: number;\r\n    /**\r\n     * The lenth of the bufferView in bytes\r\n     */\r\n    byteLength: number;\r\n    /**\r\n     * The stride, in bytes\r\n     */\r\n    byteStride?: number;\r\n    /**\r\n     * The gltarget\r\n     */\r\n    target?: number;\r\n}\r\n/**\r\n * An orthographic camera containing properties to create an orthographic projection matrix\r\n */\r\nexport interface IgltfCameraOrthographic extends Iproperty {\r\n    /**\r\n     * The floating-point horizontal magnification of the view. Must not be zero\r\n     */\r\n    xmag: number;\r\n    /**\r\n     * The floating-point vertical magnification of the view. Must not be zero\r\n     */\r\n    ymag: number;\r\n    /**\r\n     * The floating-point distance to the far clipping plane. zfar must be greater than znear\r\n     */\r\n    zfar: number;\r\n    /**\r\n     * The floating-point distance to the near clipping plane\r\n     */\r\n    znear: number;\r\n}\r\n/**\r\n * A perspective camera containing properties to create a perspective projection matrix\r\n */\r\nexport interface IgltfCameraPerspective extends Iproperty {\r\n    /**\r\n     * The floating-point aspect ratio of the field of view\r\n     */\r\n    aspectRatio?: number;\r\n    /**\r\n     * The floating-point vertical field of view in radians\r\n     */\r\n    yfov: number;\r\n    /**\r\n     * The floating-point distance to the far clipping plane\r\n     */\r\n    zfar?: number;\r\n    /**\r\n     * The floating-point distance to the near clipping plane\r\n     */\r\n    znear: number;\r\n}\r\n/**\r\n * A camera's projection.  A node can reference a camera to apply a transform to place the camera in the scene\r\n */\r\nexport interface IgltfCamera extends IchildRootProperty {\r\n    /**\r\n     * An orthographic camera containing properties to create an orthographic projection matrix\r\n     */\r\n    orthographic?: IgltfCameraOrthographic;\r\n    /**\r\n     * A perspective camera containing properties to create a perspective projection matrix\r\n     */\r\n    perspective?: IgltfCameraPerspective;\r\n    /**\r\n     * Specifies if the camera uses a perspective or orthographic projection\r\n     */\r\n    type: CameraType;\r\n}\r\n/**\r\n * Image data used to create a texture. Image can be referenced by URI or bufferView index. mimeType is required in the latter case\r\n */\r\nexport interface IgltfImage extends IchildRootProperty {\r\n    /**\r\n     * The uri of the image.  Relative paths are relative to the .gltf file.  Instead of referencing an external file, the uri can also be a data-uri.  The image format must be jpg or png\r\n     */\r\n    uri?: string;\r\n    /**\r\n     * The image's MIME type\r\n     */\r\n    mimeType?: ImageMimeType;\r\n    /**\r\n     * The index of the bufferView that contains the image. Use this instead of the image's uri property\r\n     */\r\n    bufferView?: number;\r\n}\r\n/**\r\n * Material Normal Texture Info\r\n */\r\nexport interface IgltfMaterialNormalTextureInfo extends IgltfTextureInfo {\r\n    /**\r\n     * The scalar multiplier applied to each normal vector of the normal texture\r\n     */\r\n    scale?: number;\r\n}\r\n/**\r\n * Material Occlusion Texture Info\r\n */\r\nexport interface IgltfMaterialOcclusionTextureInfo extends IgltfTextureInfo {\r\n    /**\r\n     * A scalar multiplier controlling the amount of occlusion applied\r\n     */\r\n    strength?: number;\r\n}\r\n/**\r\n * A set of parameter values that are used to define the metallic-roughness material model from Physically-Based Rendering (PBR) methodology\r\n */\r\nexport interface IgltfMaterialPbrMetallicRoughness {\r\n    /**\r\n     * The material's base color factor\r\n     */\r\n    baseColorFactor?: number[];\r\n    /**\r\n     * The base color texture\r\n     */\r\n    baseColorTexture?: IgltfTextureInfo;\r\n    /**\r\n     * The metalness of the material\r\n     */\r\n    metallicFactor?: number;\r\n    /**\r\n     * The roughness of the material\r\n     */\r\n    roughnessFactor?: number;\r\n    /**\r\n     * The metallic-roughness texture\r\n     */\r\n    metallicRoughnessTexture?: IgltfTextureInfo;\r\n}\r\n/**\r\n * The material appearance of a primitive\r\n */\r\nexport interface IgltfMaterial extends IchildRootProperty {\r\n    /**\r\n     * A set of parameter values that are used to define the metallic-roughness material model from Physically-Based Rendering (PBR) methodology. When not specified, all the default values of pbrMetallicRoughness apply\r\n     */\r\n    pbrMetallicRoughness?: IgltfMaterialPbrMetallicRoughness;\r\n    /**\r\n     * The normal map texture\r\n     */\r\n    normalTexture?: IgltfMaterialNormalTextureInfo;\r\n    /**\r\n     * The occlusion map texture\r\n     */\r\n    occlusionTexture?: IgltfMaterialOcclusionTextureInfo;\r\n    /**\r\n     * The emissive map texture\r\n     */\r\n    emissiveTexture?: IgltfTextureInfo;\r\n    /**\r\n     * The RGB components of the emissive color of the material. These values are linear. If an emissiveTexture is specified, this value is multiplied with the texel values\r\n     */\r\n    emissiveFactor?: number[];\r\n    /**\r\n     * The alpha rendering mode of the material\r\n     */\r\n    alphaMode?: MaterialAlphaMode;\r\n    /**\r\n     * The alpha cutoff value of the material\r\n     */\r\n    alphaCutoff?: number;\r\n    /**\r\n     * Specifies whether the material is double sided\r\n     */\r\n    doubleSided?: boolean;\r\n\r\n    // //---拓展\r\n    // shader?: string;\r\n    // queue?: number;\r\n}\r\n/**\r\n * Geometry to be rendered with the given material\r\n */\r\nexport interface IgltfMeshPrimitive extends Iproperty {\r\n    /**\r\n     * A dictionary object, where each key corresponds to mesh attribute semantic and each value is the index of the accessor containing attribute's data\r\n     */\r\n    attributes: {\r\n        [name: string]: number;\r\n    };\r\n    /**\r\n     * The index of the accessor that contains the indices\r\n     */\r\n    indices?: number;\r\n    /**\r\n     * The index of the material to apply to this primitive when rendering\r\n     */\r\n    material?: number;\r\n    /**\r\n     * The type of primitives to render. All valid values correspond to WebGL enums\r\n     */\r\n    mode?: MeshPrimitiveMode;\r\n    /**\r\n     * An array of Morph Targets, each  Morph Target is a dictionary mapping attributes (only POSITION, NORMAL, and TANGENT supported) to their deviations in the Morph Target\r\n     */\r\n    targets?: {\r\n        [name: string]: number;\r\n    }[];\r\n}\r\n/**\r\n * A set of primitives to be rendered.  A node can contain one mesh.  A node's transform places the mesh in the scene\r\n */\r\nexport interface IgltfMesh extends IchildRootProperty {\r\n    /**\r\n     * An array of primitives, each defining geometry to be rendered with a material\r\n     */\r\n    primitives: IgltfMeshPrimitive[];\r\n    /**\r\n     * Array of weights to be applied to the Morph Targets\r\n     */\r\n    weights?: number[];\r\n}\r\n/**\r\n * A node in the node hierarchy\r\n */\r\nexport interface IgltfNode extends IchildRootProperty {\r\n    /**\r\n     * The index of the camera referenced by this node\r\n     */\r\n    camera?: number;\r\n    /**\r\n     * The indices of this node's children\r\n     */\r\n    children?: number[];\r\n    /**\r\n     * The index of the skin referenced by this node\r\n     */\r\n    skin?: number;\r\n    /**\r\n     * A floating-point 4x4 transformation matrix stored in column-major order\r\n     */\r\n    matrix?: number[];\r\n    /**\r\n     * The index of the mesh in this node\r\n     */\r\n    mesh?: number;\r\n    /**\r\n     * The node's unit quaternion rotation in the order (x, y, z, w), where w is the scalar\r\n     */\r\n    rotation?: number[];\r\n    /**\r\n     * The node's non-uniform scale, given as the scaling factors along the x, y, and z axes\r\n     */\r\n    scale?: number[];\r\n    /**\r\n     * The node's translation along the x, y, and z axes\r\n     */\r\n    translation?: number[];\r\n    /**\r\n     * The weights of the instantiated Morph Target. Number of elements must match number of Morph Targets of used mesh\r\n     */\r\n    weights?: number[];\r\n\r\n    // /**\r\n    //  * 拓展的\r\n    //  */\r\n    // parent?: number;\r\n\r\n    // comps?: any[];\r\n}\r\n/**\r\n * Texture sampler properties for filtering and wrapping modes\r\n */\r\nexport interface IgltfSampler extends IchildRootProperty {\r\n    /**\r\n     * Magnification filter.  Valid values correspond to WebGL enums: 9728 (NEAREST) and 9729 (LINEAR)\r\n     */\r\n    magFilter?: TextureMagFilter;\r\n    /**\r\n     * Minification filter.  All valid values correspond to WebGL enums\r\n     */\r\n    minFilter?: TextureMinFilter;\r\n    /**\r\n     * S (U) wrapping mode.  All valid values correspond to WebGL enums\r\n     */\r\n    wrapS?: TextureWrapMode;\r\n    /**\r\n     * T (V) wrapping mode.  All valid values correspond to WebGL enums\r\n     */\r\n    wrapT?: TextureWrapMode;\r\n}\r\n/**\r\n * The root nodes of a scene\r\n */\r\nexport interface IgltfScene extends IchildRootProperty {\r\n    /**\r\n     * The indices of each root node\r\n     */\r\n    nodes: number[];\r\n}\r\n/**\r\n * Joints and matrices defining a skin\r\n */\r\nexport interface IgltfSkin extends IchildRootProperty {\r\n    /**\r\n     * The index of the accessor containing the floating-point 4x4 inverse-bind matrices.  The default is that each matrix is a 4x4 identity matrix, which implies that inverse-bind matrices were pre-applied\r\n     */\r\n    inverseBindMatrices?: number;\r\n    /**\r\n     * The index of the node used as a skeleton root. When undefined, joints transforms resolve to scene root\r\n     */\r\n    skeleton?: number;\r\n    /**\r\n     * Indices of skeleton nodes, used as joints in this skin.  The array length must be the same as the count property of the inverseBindMatrices accessor (when defined)\r\n     */\r\n    joints: number[];\r\n}\r\n/**\r\n * A texture and its sampler\r\n */\r\nexport interface IgltfTexture extends IchildRootProperty {\r\n    /**\r\n     * The index of the sampler used by this texture. When undefined, a sampler with repeat wrapping and auto filtering should be used\r\n     */\r\n    sampler?: number;\r\n    /**\r\n     * The index of the image used by this texture\r\n     */\r\n    source: number;\r\n}\r\n/**\r\n * Reference to a texture\r\n */\r\nexport interface IgltfTextureInfo extends Iproperty {\r\n    /**\r\n     * The index of the texture\r\n     */\r\n    index: number;\r\n    /**\r\n     * The set index of texture's TEXCOORD attribute used for texture coordinate mapping\r\n     */\r\n    texCoord?: number;\r\n}\r\n","import { CameraType } from \"./GltfJsonStruct\";\r\n// import { Camera, ProjectionEnum } from \"../../ec/components/camera\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\nimport { Camera, ProjectionEnum } from \"../../../scene/Camera\";\r\n\r\nexport class ParseCameraNode\r\n{\r\n    static parse(index: number, gltf: IgltfJson)\r\n    {\r\n        let node = gltf.cameras[index];\r\n        let cam = new Camera();\r\n\r\n        switch (node.type)\r\n        {\r\n            case CameraType.PERSPECTIVE:\r\n                cam.projectionType = ProjectionEnum.PERSPECTIVE;\r\n\r\n                let data = node.perspective;\r\n                cam.fov = data.yfov;\r\n                cam.near = data.znear;\r\n                if (data.zfar)\r\n                {\r\n                    cam.far = data.zfar;\r\n                }\r\n                // if (data.aspectRatio) {\r\n                //     cam.aspest = data.aspectRatio;\r\n                // }\r\n                break;\r\n            case CameraType.ORTHOGRAPHIC:\r\n                cam.projectionType = ProjectionEnum.ORTHOGRAPH;\r\n                let datao = node.orthographic;\r\n                cam.near = datao.znear;\r\n                cam.far = datao.zfar;\r\n                cam.size = datao.ymag;\r\n                // cam.aspest = datao.xmag / datao.ymag;\r\n                break;\r\n        }\r\n        return cam;\r\n    }\r\n}\r\n","import { loadArrayBuffer } from \"../../../io/loadtool\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\n\r\nexport class ParseBufferNode\r\n{\r\n    static parse(index: number, gltf: IgltfJson): Promise<ArrayBuffer>\r\n    {\r\n        if (gltf.cache.bufferNodeCache[index])\r\n        {\r\n            return gltf.cache.bufferNodeCache[index];\r\n        } else\r\n        {\r\n            let bufferNode = gltf.buffers[index];\r\n            let url = gltf.rootURL + \"/\" + bufferNode.uri;\r\n            let task = loadArrayBuffer(url).then(buffer =>\r\n            {\r\n                return buffer;\r\n            });\r\n            gltf.cache.bufferNodeCache[index] = task;\r\n            return task;\r\n        }\r\n    }\r\n}\r\n","import { ParseBufferNode } from \"./ParseBufferNode\";\r\nimport { IgltfJson, IgltfBufferview } from \"../LoadglTF\";\r\n\r\nexport class ParseBufferViewNode\r\n{\r\n    static parse(index: number, gltf: IgltfJson): Promise<IgltfBufferview>\r\n    {\r\n        if (gltf.cache.bufferviewNodeCache[index])\r\n        {\r\n            return gltf.cache.bufferviewNodeCache[index];\r\n        } else\r\n        {\r\n            let bufferview = gltf.bufferViews[index];\r\n            let bufferindex = bufferview.buffer;\r\n            let task = ParseBufferNode.parse(bufferindex, gltf).then(buffer =>\r\n            {\r\n                let viewbuffer = new Uint8Array(buffer, bufferview.byteOffset, bufferview.byteLength);\r\n                // let stride = bufferview.byteStride;\r\n                // let glbuffer = bufferview.target && GlRender.createBuffer(bufferview.target, viewbuffer);\r\n                // let glbuffer = bufferview.target && GlBuffer.fromViewData(bufferview.target, viewbuffer);\r\n                return { viewBuffer: viewbuffer, byteStride: bufferview.byteStride, target: bufferview.target };\r\n            });\r\n            gltf.cache.bufferviewNodeCache[index] = task;\r\n            return task;\r\n        }\r\n    }\r\n}\r\n","import { GlConstants } from \"./GLconstant\";\r\nexport enum PixelDatatypeEnum\r\n{\r\n    UNSIGNED_BYTE = GlConstants.UNSIGNED_BYTE,\r\n    UNSIGNED_SHORT = GlConstants.UNSIGNED_SHORT,\r\n    UNSIGNED_INT = GlConstants.UNSIGNED_INT,\r\n    FLOAT = GlConstants.FLOAT,\r\n    HALF_FLOAT = GlConstants.HALF_FLOAT_OES,\r\n    UNSIGNED_INT_24_8 = GlConstants.UNSIGNED_INT_24_8,\r\n    UNSIGNED_SHORT_4_4_4_4 = GlConstants.UNSIGNED_SHORT_4_4_4_4,\r\n    UNSIGNED_SHORT_5_5_5_1 = GlConstants.UNSIGNED_SHORT_5_5_5_1,\r\n    UNSIGNED_SHORT_5_6_5 = GlConstants.UNSIGNED_SHORT_5_6_5\r\n}\r\nexport namespace PixelDatatypeEnum\r\n{\r\n    export function isPacked(pixelDatatype: PixelDatatypeEnum)\r\n    {\r\n        return pixelDatatype === PixelDatatypeEnum.UNSIGNED_INT_24_8 ||\r\n            pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT_4_4_4_4 ||\r\n            pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT_5_5_5_1 ||\r\n            pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT_5_6_5;\r\n    }\r\n    ;\r\n    export function sizeInBytes(pixelDatatype: PixelDatatypeEnum)\r\n    {\r\n        switch (pixelDatatype)\r\n        {\r\n            case PixelDatatypeEnum.UNSIGNED_BYTE:\r\n                return 1;\r\n            case PixelDatatypeEnum.UNSIGNED_SHORT:\r\n            case PixelDatatypeEnum.UNSIGNED_SHORT_4_4_4_4:\r\n            case PixelDatatypeEnum.UNSIGNED_SHORT_5_5_5_1:\r\n            case PixelDatatypeEnum.UNSIGNED_SHORT_5_6_5:\r\n            case PixelDatatypeEnum.HALF_FLOAT:\r\n                return 2;\r\n            case PixelDatatypeEnum.UNSIGNED_INT:\r\n            case PixelDatatypeEnum.FLOAT:\r\n            case PixelDatatypeEnum.UNSIGNED_INT_24_8:\r\n                return 4;\r\n        }\r\n    }\r\n    ;\r\n    export function validate(pixelDatatype: PixelDatatypeEnum)\r\n    {\r\n        return ((pixelDatatype === PixelDatatypeEnum.UNSIGNED_BYTE) ||\r\n            (pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT) ||\r\n            (pixelDatatype === PixelDatatypeEnum.UNSIGNED_INT) ||\r\n            (pixelDatatype === PixelDatatypeEnum.FLOAT) ||\r\n            (pixelDatatype === PixelDatatypeEnum.HALF_FLOAT) ||\r\n            (pixelDatatype === PixelDatatypeEnum.UNSIGNED_INT_24_8) ||\r\n            (pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT_4_4_4_4) ||\r\n            (pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT_5_5_5_1) ||\r\n            (pixelDatatype === PixelDatatypeEnum.UNSIGNED_SHORT_5_6_5));\r\n    }\r\n}\r\n","import { TypedArray } from \"../core/TypedArray\";\r\nimport { GlConstants } from \"./GLconstant\";\r\nimport { PixelDatatypeEnum } from \"./PixelDatatype\";\r\n\r\nexport enum PixelFormatEnum\r\n{\r\n    //----------------------------------------------------------\r\n    //                 copy from cesium\r\n    //------------------------------------------------------------\r\n    /**\r\n     * A pixel format containing a depth value.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    DEPTH_COMPONENT = GlConstants.DEPTH_COMPONENT,\r\n\r\n    /**\r\n     * A pixel format containing a depth and stencil value, most often used with {@link PixelDatatype.UNSIGNED_INT_24_8}.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    DEPTH_STENCIL = GlConstants.DEPTH_STENCIL,\r\n\r\n    /**\r\n     * A pixel format containing an alpha channel.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    ALPHA = GlConstants.ALPHA,\r\n\r\n    /**\r\n     * A pixel format containing red, green, and blue channels.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGB = GlConstants.RGB,\r\n\r\n    /**\r\n     * A pixel format containing red, green, blue, and alpha channels.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGBA = GlConstants.RGBA,\r\n\r\n    RG,\r\n    R,\r\n    /**\r\n     * A pixel format containing a luminance (intensity) channel.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    LUMINANCE = GlConstants.LUMINANCE,\r\n\r\n    /**\r\n     * A pixel format containing luminance (intensity) and alpha channels.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    LUMINANCE_ALPHA = GlConstants.LUMINANCE_ALPHA,\r\n\r\n    /**\r\n     * A pixel format containing red, green, and blue channels that is DXT1 compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGB_DXT1 = GlConstants.COMPRESSED_RGB_S3TC_DXT1_EXT,\r\n\r\n    /**\r\n     * A pixel format containing red, green, blue, and alpha channels that is DXT1 compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGBA_DXT1 = GlConstants.COMPRESSED_RGBA_S3TC_DXT1_EXT,\r\n\r\n    /**\r\n     * A pixel format containing red, green, blue, and alpha channels that is DXT3 compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGBA_DXT3 = GlConstants.COMPRESSED_RGBA_S3TC_DXT3_EXT,\r\n\r\n    /**\r\n     * A pixel format containing red, green, blue, and alpha channels that is DXT5 compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGBA_DXT5 = GlConstants.COMPRESSED_RGBA_S3TC_DXT5_EXT,\r\n\r\n    /**\r\n     * A pixel format containing red, green, and blue channels that is PVR 4bpp compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGB_PVRTC_4BPPV1 = GlConstants.COMPRESSED_RGB_PVRTC_4BPPV1_IMG,\r\n\r\n    /**\r\n     * A pixel format containing red, green, and blue channels that is PVR 2bpp compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGB_PVRTC_2BPPV1 = GlConstants.COMPRESSED_RGB_PVRTC_2BPPV1_IMG,\r\n\r\n    /**\r\n     * A pixel format containing red, green, blue, and alpha channels that is PVR 4bpp compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGBA_PVRTC_4BPPV1 = GlConstants.COMPRESSED_RGBA_PVRTC_4BPPV1_IMG,\r\n\r\n    /**\r\n     * A pixel format containing red, green, blue, and alpha channels that is PVR 2bpp compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGBA_PVRTC_2BPPV1 = GlConstants.COMPRESSED_RGBA_PVRTC_2BPPV1_IMG,\r\n\r\n    /**\r\n     * A pixel format containing red, green, and blue channels that is ETC1 compressed.\r\n     *\r\n     * @type {Number}\r\n     * @constant\r\n     */\r\n    RGB_ETC1 = GlConstants.COMPRESSED_RGB_ETC1_WEBGL,\r\n}\r\n\r\nexport namespace PixelFormatEnum\r\n{\r\n    /**\r\n     * @private\r\n     */\r\n    export function componentsLength(pixelFormat: PixelFormatEnum)\r\n    {\r\n        switch (pixelFormat)\r\n        {\r\n            case PixelFormatEnum.RGB:\r\n                return 3;\r\n            case PixelFormatEnum.RGBA:\r\n                return 4;\r\n            case PixelFormatEnum.LUMINANCE_ALPHA:\r\n                return 2;\r\n            case PixelFormatEnum.ALPHA:\r\n            case PixelFormatEnum.LUMINANCE:\r\n                return 1;\r\n            default:\r\n                return 1;\r\n        }\r\n    }\r\n    export function validate(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.DEPTH_COMPONENT ||\r\n            pixelFormat === PixelFormatEnum.DEPTH_STENCIL ||\r\n            pixelFormat === PixelFormatEnum.ALPHA ||\r\n            pixelFormat === PixelFormatEnum.RGB ||\r\n            pixelFormat === PixelFormatEnum.RGBA ||\r\n            pixelFormat === PixelFormatEnum.LUMINANCE ||\r\n            pixelFormat === PixelFormatEnum.LUMINANCE_ALPHA ||\r\n            pixelFormat === PixelFormatEnum.RGB_DXT1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT3 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT5 ||\r\n            pixelFormat === PixelFormatEnum.RGB_PVRTC_4BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGB_PVRTC_2BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_PVRTC_4BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_PVRTC_2BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGB_ETC1;\r\n    }\r\n    export function isColorFormat(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.ALPHA ||\r\n            pixelFormat === PixelFormatEnum.RGB ||\r\n            pixelFormat === PixelFormatEnum.RGBA ||\r\n            pixelFormat === PixelFormatEnum.LUMINANCE ||\r\n            pixelFormat === PixelFormatEnum.LUMINANCE_ALPHA;\r\n    }\r\n    export function isDepthFormat(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.DEPTH_COMPONENT ||\r\n            pixelFormat === PixelFormatEnum.DEPTH_STENCIL;\r\n    }\r\n    export function isCompressedFormat(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.RGB_DXT1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT3 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT5 ||\r\n            pixelFormat === PixelFormatEnum.RGB_PVRTC_4BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGB_PVRTC_2BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_PVRTC_4BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_PVRTC_2BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGB_ETC1;\r\n    }\r\n    export function isDXTFormat(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.RGB_DXT1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT3 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_DXT5;\r\n    }\r\n    export function isPVRTCFormat(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.RGB_PVRTC_4BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGB_PVRTC_2BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_PVRTC_4BPPV1 ||\r\n            pixelFormat === PixelFormatEnum.RGBA_PVRTC_2BPPV1;\r\n    }\r\n    export function isETC1Format(pixelFormat: PixelFormatEnum)\r\n    {\r\n        return pixelFormat === PixelFormatEnum.RGB_ETC1;\r\n    }\r\n    ;\r\n    export function compressedTextureSizeInBytes(pixelFormat: PixelFormatEnum, width: number, height: number)\r\n    {\r\n        switch (pixelFormat)\r\n        {\r\n            case PixelFormatEnum.RGB_DXT1:\r\n            case PixelFormatEnum.RGBA_DXT1:\r\n            case PixelFormatEnum.RGB_ETC1:\r\n                return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 8;\r\n            case PixelFormatEnum.RGBA_DXT3:\r\n            case PixelFormatEnum.RGBA_DXT5:\r\n                return Math.floor((width + 3) / 4) * Math.floor((height + 3) / 4) * 16;\r\n            case PixelFormatEnum.RGB_PVRTC_4BPPV1:\r\n            case PixelFormatEnum.RGBA_PVRTC_4BPPV1:\r\n                return Math.floor((Math.max(width, 8) * Math.max(height, 8) * 4 + 7) / 8);\r\n            case PixelFormatEnum.RGB_PVRTC_2BPPV1:\r\n            case PixelFormatEnum.RGBA_PVRTC_2BPPV1:\r\n                return Math.floor((Math.max(width, 16) * Math.max(height, 8) * 2 + 7) / 8);\r\n            default:\r\n                return 0;\r\n        }\r\n    }\r\n    export function textureSizeInBytes(pixelFormat: PixelFormatEnum, pixelDatatype: PixelDatatypeEnum, width: number, height: number)\r\n    {\r\n        var componentsLength = PixelFormatEnum.componentsLength(pixelFormat);\r\n        if (PixelDatatypeEnum.isPacked(pixelDatatype))\r\n        {\r\n            componentsLength = 1;\r\n        }\r\n        return componentsLength * PixelDatatypeEnum.sizeInBytes(pixelDatatype) * width * height;\r\n    }\r\n    export function alignmentInBytes(pixelFormat: PixelFormatEnum, pixelDatatype: PixelDatatypeEnum, width: number)\r\n    {\r\n        var mod = PixelFormatEnum.textureSizeInBytes(pixelFormat, pixelDatatype, width, 1) % 4;\r\n        return mod === 0 ? 4 : (mod === 2 ? 2 : 1);\r\n    }\r\n    export function createTypedArray(pixelFormat: PixelFormatEnum, pixelDatatype: PixelDatatypeEnum, width: number, height: number)\r\n    {\r\n        var constructor;\r\n        var sizeInBytes = PixelDatatypeEnum.sizeInBytes(pixelDatatype);\r\n        if (sizeInBytes === Uint8Array.BYTES_PER_ELEMENT)\r\n        {\r\n            constructor = Uint8Array;\r\n        }\r\n        else if (sizeInBytes === Uint16Array.BYTES_PER_ELEMENT)\r\n        {\r\n            constructor = Uint16Array;\r\n        }\r\n        else if (sizeInBytes === Float32Array.BYTES_PER_ELEMENT && pixelDatatype === PixelDatatypeEnum.FLOAT)\r\n        {\r\n            constructor = Float32Array;\r\n        }\r\n        else\r\n        {\r\n            constructor = Uint32Array;\r\n        }\r\n        var size = PixelFormatEnum.componentsLength(pixelFormat) * width * height;\r\n        return new constructor(size);\r\n    }\r\n    export function flipY(bufferView: TypedArray, pixelFormat: PixelFormatEnum, pixelDatatype: PixelDatatypeEnum, width: number, height: number)\r\n    {\r\n        if (height === 1)\r\n        {\r\n            return bufferView;\r\n        }\r\n        var flipped = PixelFormatEnum.createTypedArray(pixelFormat, pixelDatatype, width, height);\r\n        var numberOfComponents = PixelFormatEnum.componentsLength(pixelFormat);\r\n        var textureWidth = width * numberOfComponents;\r\n        for (var i = 0; i < height; ++i)\r\n        {\r\n            var row = i * height * numberOfComponents;\r\n            var flippedRow = (height - i - 1) * height * numberOfComponents;\r\n            for (var j = 0; j < textureWidth; ++j)\r\n            {\r\n                flipped[flippedRow + j] = bufferView[row + j];\r\n            }\r\n        }\r\n        return flipped;\r\n    }\r\n}\r\n","import { GlConstants } from \"./GLconstant\";\r\n// export enum TextureFilterEnum\r\n// {\r\n//     /**\r\n//      * Samples the texture by returning the closest pixel.\r\n//      *\r\n//      * @type {Number}\r\n//      * @constant\r\n//      */\r\n//     NEAREST = GlConstants.NEAREST,\r\n//     /**\r\n//      * Samples the texture through bi-linear interpolation of the four nearest pixels. This produces smoother results than <code>NEAREST</code> filtering.\r\n//      *\r\n//      * @type {Number}\r\n//      * @constant\r\n//      */\r\n//     LINEAR = GlConstants.LINEAR,\r\n//     /**\r\n//      * Selects the nearest mip level and applies nearest sampling within that level.\r\n//      * <p>\r\n//      * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\r\n//      * </p>\r\n//      *\r\n//      * @type {Number}\r\n//      * @constant\r\n//      */\r\n//     NEAREST_MIPMAP_NEAREST = GlConstants.NEAREST_MIPMAP_NEAREST,\r\n//     /**\r\n//      * Selects the nearest mip level and applies linear sampling within that level.\r\n//      * <p>\r\n//      * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\r\n//      * </p>\r\n//      *\r\n//      * @type {Number}\r\n//      * @constant\r\n//      */\r\n//     LINEAR_MIPMAP_NEAREST = GlConstants.LINEAR_MIPMAP_NEAREST,\r\n//     /**\r\n//      * Read texture values with nearest sampling from two adjacent mip levels and linearly interpolate the results.\r\n//      * <p>\r\n//      * This option provides a good balance of visual quality and speed when sampling from a mipmapped texture.\r\n//      * </p>\r\n//      * <p>\r\n//      * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\r\n//      * </p>\r\n//      *\r\n//      * @type {Number}\r\n//      * @constant\r\n//      */\r\n//     NEAREST_MIPMAP_LINEAR = GlConstants.NEAREST_MIPMAP_LINEAR,\r\n//     /**\r\n//      * Read texture values with linear sampling from two adjacent mip levels and linearly interpolate the results.\r\n//      * <p>\r\n//      * This option provides a good balance of visual quality and speed when sampling from a mipmapped texture.\r\n//      * </p>\r\n//      * <p>\r\n//      * Requires that the texture has a mipmap. The mip level is chosen by the view angle and screen-space size of the texture.\r\n//      * </p>\r\n//      * @type {Number}\r\n//      * @constant\r\n//      */\r\n//     LINEAR_MIPMAP_LINEAR = GlConstants.LINEAR_MIPMAP_LINEAR\r\n// }\r\n\r\n// export namespace TextureFilterEnum\r\n// {\r\n//     export function beMipmap(type: TextureFilterEnum)\r\n//     {\r\n//         return (type === TextureFilterEnum.NEAREST_MIPMAP_NEAREST) ||\r\n//             (type === TextureFilterEnum.NEAREST_MIPMAP_LINEAR) ||\r\n//             (type === TextureFilterEnum.LINEAR_MIPMAP_NEAREST) ||\r\n//             (type === TextureFilterEnum.LINEAR_MIPMAP_LINEAR);\r\n//     }\r\n// }\r\n\r\n\r\n\r\n/**\r\n * 由mipmap filter type 和 texture filter type 来决定最终的 filter ttype\r\n */\r\nexport enum TextureFilterEnum\r\n{\r\n    NEAREST = GlConstants.NEAREST,\r\n    LINEAR = GlConstants.LINEAR,\r\n}\r\n\r\nexport namespace TextureFilterEnum\r\n{\r\n    export function realfilter(filter: TextureFilterEnum, enableMimap: boolean, mipmapFilter: TextureFilterEnum): number\r\n    {\r\n        if (enableMimap)\r\n        {\r\n            if (mipmapFilter == TextureFilterEnum.LINEAR)\r\n            {\r\n                if (filter == TextureFilterEnum.LINEAR)\r\n                {\r\n                    return GlConstants.LINEAR_MIPMAP_LINEAR;\r\n                } else\r\n                {\r\n                    return GlConstants.NEAREST_MIPMAP_LINEAR;\r\n                }\r\n            } else\r\n            {\r\n                if (filter == TextureFilterEnum.LINEAR)\r\n                {\r\n                    return GlConstants.LINEAR_MIPMAP_NEAREST;\r\n                } else\r\n                {\r\n                    return GlConstants.LINEAR_MIPMAP_NEAREST;\r\n                }\r\n            }\r\n        } else\r\n        {\r\n            return filter;\r\n        }\r\n    }\r\n}\r\n","import { GlConstants } from \"./GLconstant\";\r\nexport enum TextureWrapEnum\r\n{\r\n    REPEAT = GlConstants.REPEAT,\r\n    CLAMP_TO_EDGE = GlConstants.CLAMP_TO_EDGE,\r\n    MIRRORED_REPEAT = GlConstants.MIRRORED_REPEAT\r\n}\r\n","import { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { GlConstants } from \"./GLconstant\";\r\nimport { PixelFormatEnum } from \"./PixelFormatEnum\";\r\nimport { PixelDatatypeEnum } from \"./PixelDatatype\";\r\nimport { FrameBuffer } from \"./Framebuffer\";\r\nimport { TypedArray } from \"../core/TypedArray\";\r\nimport { TextureFilterEnum } from \"./TextureFilterEnum\";\r\nimport { TextureWrapEnum } from \"./TextureWrapEnum\";\r\nimport { isPowerOf2 } from \"../mathD/common\";\r\n//tip:TEXTURE_MAG_FILTER 固定为LINEAR https://community.khronos.org/t/bilinear-and-trilinear-cant-see-a-difference/39405\r\n\r\nexport class Texture {\r\n    texture: WebGLTexture;\r\n    pixelFormat: PixelFormatEnum;\r\n    pixelDatatype: PixelDatatypeEnum;\r\n    width: number;\r\n    height: number;\r\n    hasMipmap: boolean;\r\n    sizeInBytes: number;\r\n    preMultiplyAlpha: boolean;\r\n    flipY: boolean;\r\n    private initialized: boolean;\r\n    private _textureFilterAnisotropic: any;\r\n\r\n    filterMax: TextureFilterEnum;\r\n    filterMin: TextureFilterEnum;\r\n    wrapS: TextureWrapEnum;\r\n    wrapT: TextureWrapEnum;\r\n    maximumAnisotropy: number;\r\n    enableMimap: boolean;\r\n    mipmapFilter: TextureFilterEnum;\r\n    unpackAlignment: number;\r\n    sourceType: TextureDataFromEnum;\r\n    private _context: GraphicsDevice;\r\n    private _gl: WebGLRenderingContext;\r\n    private constructor(options: ItextureOptions) {\r\n        let { context, width, height, source, pixelFormat = PixelFormatEnum.RGBA, pixelDatatype = PixelDatatypeEnum.UNSIGNED_BYTE } = options;\r\n        if (source != null) {\r\n            if (width == null) {\r\n                width = source.videoWidth ?? source.width;\r\n            }\r\n            if (height == null) {\r\n                height = source.videoHeight ?? source.height;\r\n            }\r\n        }\r\n\r\n        let internalFormat = pixelFormat as number;\r\n        let isCompressed = PixelFormatEnum.isCompressedFormat(internalFormat);\r\n\r\n        if (context.webGLVersion == 2) {\r\n            if (pixelFormat == PixelFormatEnum.DEPTH_STENCIL) {\r\n                internalFormat = GlConstants.DEPTH24_STENCIL8;\r\n            } else if (pixelFormat == PixelFormatEnum.DEPTH_COMPONENT) {\r\n                if (pixelDatatype == PixelDatatypeEnum.UNSIGNED_SHORT) {\r\n                    internalFormat = GlConstants.DEPTH_COMPONENT16;\r\n                } else if (pixelDatatype == PixelDatatypeEnum.UNSIGNED_INT) {\r\n                    internalFormat = GlConstants.DEPTH_COMPONENT24;\r\n                }\r\n            }\r\n            if (pixelDatatype === PixelDatatypeEnum.FLOAT) {\r\n                switch (pixelFormat) {\r\n                    case PixelFormatEnum.RGBA:\r\n                        internalFormat = GlConstants.RGBA32F;\r\n                        break;\r\n                    case PixelFormatEnum.RGB:\r\n                        internalFormat = GlConstants.RGB32F;\r\n                        break;\r\n                    case PixelFormatEnum.RG:\r\n                        internalFormat = GlConstants.RG32F;\r\n                        break;\r\n                    case PixelFormatEnum.R:\r\n                        internalFormat = GlConstants.R32F;\r\n                        break;\r\n                }\r\n            } else if (pixelDatatype === PixelDatatypeEnum.HALF_FLOAT) {\r\n                switch (pixelFormat) {\r\n                    case PixelFormatEnum.RGBA:\r\n                        internalFormat = GlConstants.RGBA16F;\r\n                        break;\r\n                    case PixelFormatEnum.RGB:\r\n                        internalFormat = GlConstants.RGB16F;\r\n                        break;\r\n                    case PixelFormatEnum.RG:\r\n                        internalFormat = GlConstants.RG16F;\r\n                        break;\r\n                    case PixelFormatEnum.R:\r\n                        internalFormat = GlConstants.R16F;\r\n                        break;\r\n                }\r\n            }\r\n        }\r\n\r\n        if ((pixelFormat === PixelFormatEnum.DEPTH_COMPONENT) &&\r\n            ((pixelDatatype !== PixelDatatypeEnum.UNSIGNED_SHORT) && (pixelDatatype !== PixelDatatypeEnum.UNSIGNED_INT))) {\r\n            throw new Error('When options.pixelFormat is DEPTH_COMPONENT, options.pixelDatatype must be UNSIGNED_SHORT or UNSIGNED_INT.');\r\n        }\r\n\r\n        if ((pixelFormat === PixelFormatEnum.DEPTH_STENCIL) && (pixelDatatype !== PixelDatatypeEnum.UNSIGNED_INT_24_8)) {\r\n            throw new Error('When options.pixelFormat is DEPTH_STENCIL, options.pixelDatatype must be UNSIGNED_INT_24_8.');\r\n        }\r\n\r\n        if ((pixelDatatype === PixelDatatypeEnum.FLOAT) && !context.caps.textureFloat) {\r\n            throw new Error('When options.pixelDatatype is FLOAT, this WebGL implementation must support the OES_texture_float extension.  Check context.floatingPointTexture.');\r\n        }\r\n\r\n        if ((pixelDatatype === PixelDatatypeEnum.HALF_FLOAT) && !context.caps.textureHalfFloat) {\r\n            throw new Error('When options.pixelDatatype is HALF_FLOAT, this WebGL implementation must support the OES_texture_half_float extension. Check context.halfFloatingPointTexture.');\r\n        }\r\n\r\n        if (PixelFormatEnum.isDepthFormat(pixelFormat)) {\r\n            if (source != null) {\r\n                throw new Error('When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, source cannot be provided.');\r\n            }\r\n\r\n            if (!context.caps.depthTexture) {\r\n                throw new Error('When options.pixelFormat is DEPTH_COMPONENT or DEPTH_STENCIL, this WebGL implementation must support WEBGL_depth_texture.  Check context.depthTexture.');\r\n            }\r\n        }\r\n\r\n        if (isCompressed) {\r\n            if (source == null || source.arrayBufferView == null) {\r\n                throw new Error('When options.pixelFormat is compressed, options.source.arrayBufferView must be defined.');\r\n            }\r\n\r\n            if (PixelFormatEnum.isDXTFormat(internalFormat) && !context.caps.s3tc) {\r\n                throw new Error('When options.pixelFormat is S3TC compressed, this WebGL implementation must support the WEBGL_texture_compression_s3tc extension. Check context.s3tc.');\r\n            } else if (PixelFormatEnum.isPVRTCFormat(internalFormat) && !context.caps.pvrtc) {\r\n                throw new Error('When options.pixelFormat is PVRTC compressed, this WebGL implementation must support the WEBGL_texture_compression_pvrtc extension. Check context.pvrtc.');\r\n            } else if (PixelFormatEnum.isETC1Format(internalFormat) && !context.caps.etc1) {\r\n                throw new Error('When options.pixelFormat is ETC1 compressed, this WebGL implementation must support the WEBGL_texture_compression_etc1 extension. Check context.etc1.');\r\n            }\r\n\r\n            if (PixelFormatEnum.compressedTextureSizeInBytes(internalFormat, width, height) !== source.arrayBufferView.byteLength) {\r\n                throw new Error('The byte length of the array buffer is invalid for the compressed texture with the given width and height.');\r\n            }\r\n        }\r\n\r\n        let flipY = options.flipY ?? false;\r\n        let preMultiplyAlpha = options.preMultiplyAlpha || pixelFormat === PixelFormatEnum.RGB || pixelFormat === PixelFormatEnum.LUMINANCE;\r\n\r\n\r\n\r\n        let gl = context.gl;\r\n        let target = gl.TEXTURE_2D;\r\n        let texture = gl.createTexture();\r\n        gl.activeTexture(gl.TEXTURE0);\r\n        gl.bindTexture(target, texture);\r\n\r\n        let unpackAlignment = 4;\r\n        if (source && source.arrayBufferView && !isCompressed) {\r\n            unpackAlignment = PixelFormatEnum.alignmentInBytes(pixelFormat, pixelDatatype, width);\r\n        }\r\n        gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\r\n        this.unpackAlignment = unpackAlignment\r\n        let initialized = true;\r\n\r\n        if (source) {\r\n            if (source.arrayBufferView)                 // Source: typed array\r\n            {\r\n                this.sourceType = TextureDataFromEnum.TYPEDARRAY;\r\n                gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n                var arrayBufferView = source.arrayBufferView;\r\n                if (isCompressed) {\r\n                    gl.compressedTexImage2D(target, 0, internalFormat, width, height, 0, arrayBufferView);\r\n                } else {\r\n                    if (flipY) {\r\n                        arrayBufferView = PixelFormatEnum.flipY(arrayBufferView, pixelFormat, pixelDatatype, width, height);\r\n                    }\r\n                    gl.texImage2D(target, 0, internalFormat, width, height, 0, pixelFormat, pixelDatatype, arrayBufferView);\r\n                }\r\n\r\n                this.update = () => {\r\n                    gl.pixelStorei(gl.UNPACK_ALIGNMENT, unpackAlignment);\r\n                    gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n                    gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n                    var arrayBufferView = source.arrayBufferView;\r\n                    if (isCompressed) {\r\n                        gl.compressedTexImage2D(target, 0, internalFormat, width, height, 0, arrayBufferView);\r\n                    } else {\r\n                        if (flipY) {\r\n                            arrayBufferView = PixelFormatEnum.flipY(arrayBufferView, pixelFormat, pixelDatatype, width, height);\r\n                        }\r\n                        gl.texImage2D(target, 0, internalFormat, width, height, 0, pixelFormat, pixelDatatype, arrayBufferView);\r\n                    }\r\n                }\r\n\r\n            } else if (source.framebuffer != null)                // Source: framebuffer\r\n            {\r\n                this.sourceType = TextureDataFromEnum.FRAMEBUFFER;\r\n                gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, false);\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, false);\r\n\r\n\r\n                source.framebuffer.bind();\r\n                gl.copyTexImage2D(target, 0, internalFormat, source.xOffset, source.yOffset, width, height, 0);\r\n                source.framebuffer.unbind();\r\n            } else                // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\r\n            {\r\n                this.sourceType = TextureDataFromEnum.IMAGESOURCE;\r\n                // Only valid for DOM-Element uploads\r\n                gl.pixelStorei(gl.UNPACK_PREMULTIPLY_ALPHA_WEBGL, preMultiplyAlpha);\r\n                gl.pixelStorei(gl.UNPACK_FLIP_Y_WEBGL, flipY);\r\n                gl.texImage2D(target, 0, internalFormat, pixelFormat, pixelDatatype, source);\r\n            }\r\n            initialized = true;\r\n        } else {\r\n            gl.texImage2D(target, 0, internalFormat, width, height, 0, pixelFormat, pixelDatatype, null);\r\n            initialized = false;\r\n        }\r\n\r\n        // let sampler = new Sampler(options.sampler);\r\n        this.filterMax = options.sampler?.filterMax || TextureFilterEnum.LINEAR;\r\n        this.filterMin = options.sampler?.filterMin || TextureFilterEnum.LINEAR;\r\n        this.wrapS = options.sampler?.wrapS || TextureWrapEnum.REPEAT;\r\n        this.wrapT = options.sampler?.wrapT || TextureWrapEnum.REPEAT;\r\n        this.maximumAnisotropy = options.sampler?.maximumAnisotropy || 1.0;\r\n        this.enableMimap = options.sampler?.enableMimap ?? true;\r\n        this.mipmapFilter = options.sampler?.mipmapFilter ?? TextureFilterEnum.LINEAR;\r\n\r\n        if (context.webGLVersion != 1) {\r\n            if (PixelFormatEnum.isDepthFormat(this.pixelFormat)\r\n                || PixelFormatEnum.isCompressedFormat(this.pixelFormat)\r\n                || !isPowerOf2(this.width)\r\n                || !isPowerOf2(this.height)\r\n            ) {\r\n                // throw new Error('Cannot call generateMipmap when the texture pixel format is DEPTH_COMPONENT or DEPTH_STENCIL.');\r\n                // throw new Error('Cannot call generateMipmap with a compressed pixel format.');\r\n                // throw new Error('width must be a power of two to call generateMipmap().');\r\n                // throw new Error('height must be a power of two to call generateMipmap().');\r\n                this.enableMimap = false;\r\n            }\r\n\r\n            if (!isPowerOf2(this.width)\r\n                || !isPowerOf2(this.height)\r\n            ) {\r\n                //throw new Error(\"texture repeat need Img size be power of 2!\");\r\n                this.wrapS = TextureWrapEnum.CLAMP_TO_EDGE;\r\n                this.wrapT = TextureWrapEnum.CLAMP_TO_EDGE;\r\n            }\r\n            // float textures only support nearest filtering unless the linear extensions are supported, so override the sampler's settings\r\n            if ((pixelDatatype === PixelDatatypeEnum.FLOAT && !context.caps.textureFloat)\r\n                || (pixelDatatype === PixelDatatypeEnum.HALF_FLOAT && !context.caps.textureHalfFloat)) {\r\n                this.filterMax = TextureFilterEnum.NEAREST;\r\n                this.filterMin = TextureFilterEnum.NEAREST;\r\n                this.mipmapFilter = TextureFilterEnum.NEAREST;\r\n            }\r\n        }\r\n\r\n        gl.texParameteri(target, gl.TEXTURE_WRAP_S, this.wrapS);\r\n        gl.texParameteri(target, gl.TEXTURE_WRAP_T, this.wrapT);\r\n        gl.texParameteri(target, gl.TEXTURE_MIN_FILTER, TextureFilterEnum.realfilter(this.filterMin, this.enableMimap, this.mipmapFilter));\r\n        gl.texParameteri(target, gl.TEXTURE_MAG_FILTER, this.filterMax);\r\n        if (this._textureFilterAnisotropic) {\r\n            gl.texParameteri(target, this._textureFilterAnisotropic.TEXTURE_MAX_ANISOTROPY_EXT, this.maximumAnisotropy);\r\n        }\r\n        gl.bindTexture(target, null);\r\n\r\n        let sizeInBytes = isCompressed ?\r\n            PixelFormatEnum.compressedTextureSizeInBytes(pixelFormat, width, height)\r\n            : PixelFormatEnum.textureSizeInBytes(pixelFormat, pixelDatatype, width, height)\r\n\r\n        this.texture = texture;\r\n        this.pixelFormat = pixelFormat;\r\n        this.pixelDatatype = pixelDatatype;\r\n        this.width = width;\r\n        this.height = height;\r\n        this.hasMipmap = false;\r\n        this.sizeInBytes = sizeInBytes;\r\n        this.preMultiplyAlpha = preMultiplyAlpha;\r\n        this.flipY = flipY;\r\n        this.initialized = initialized;\r\n        this._context = context;\r\n        this._textureFilterAnisotropic = context.caps.textureAnisotropicFilterExtension;\r\n        this._gl = gl;\r\n    }\r\n\r\n    bind(unit: number = 0) {\r\n        let gl = this._gl;\r\n        gl.activeTexture(gl.TEXTURE0 + unit);\r\n        gl.bindTexture(gl.TEXTURE_2D, this.texture);\r\n    }\r\n\r\n    unbind() {\r\n        this._gl.bindTexture(this._gl.TEXTURE_2D, null);\r\n    }\r\n\r\n    update() { }\r\n\r\n    destroy() {\r\n        this._context.gl.deleteTexture(this.texture);\r\n    }\r\n\r\n    /**\r\n     * // Source: typed array\r\n     * @param options \r\n     */\r\n    static fromTypedArray(options: {\r\n        context: GraphicsDevice;\r\n        width: number;\r\n        height: number;\r\n        arrayBufferView: TypedArray;\r\n        pixelFormat?: PixelFormatEnum;\r\n        pixelDatatype?: PixelDatatypeEnum;\r\n        sampler?: IsamplerOptions;\r\n    }) {\r\n        return new Texture({ ...options, source: { arrayBufferView: options.arrayBufferView } });\r\n    }\r\n\r\n    /**\r\n     * // Source: ImageData, HTMLImageElement, HTMLCanvasElement, or HTMLVideoElement\r\n     * @param options \r\n     */\r\n    static fromImageSource(options: {\r\n        context: GraphicsDevice;\r\n        image: TexImageSource;\r\n        pixelFormat?: PixelFormatEnum;\r\n        pixelDatatype?: PixelDatatypeEnum;\r\n        sampler?: IsamplerOptions;\r\n    }) {\r\n        return new Texture({ ...options, source: options.image });\r\n    }\r\n\r\n    static fromFrameBuffer(options: {\r\n        context: GraphicsDevice;\r\n        width: number;\r\n        height: number;\r\n        framebuffer: FrameBuffer;\r\n        xOffset?: number;\r\n        yOffset?: number;\r\n        pixelFormat?: PixelFormatEnum;\r\n        pixelDatatype?: PixelDatatypeEnum;\r\n        sampler?: IsamplerOptions;\r\n    }) {\r\n        return new Texture({ ...options, source: { framebuffer: options.framebuffer, xOffset: options.xOffset, yOffset: options.yOffset } });\r\n    }\r\n\r\n}\r\n\r\n\r\nexport enum TextureDataFromEnum {\r\n    TYPEDARRAY,\r\n    FRAMEBUFFER,\r\n    IMAGESOURCE\r\n}\r\n\r\nexport interface ItextureOptions {\r\n    context: GraphicsDevice;\r\n    width?: number;\r\n    height?: number;\r\n    source: {\r\n        framebuffer?: FrameBuffer;\r\n        xOffset?: number;\r\n        yOffset?: number;\r\n        arrayBufferView?: TypedArray;\r\n    } | any;\r\n    pixelFormat?: PixelFormatEnum;\r\n    pixelDatatype?: PixelDatatypeEnum;\r\n    preMultiplyAlpha?: boolean;\r\n    flipY?: boolean;\r\n    // sampler?: IsamplerOptions\r\n\r\n    // ----------------texParameteri-------------\r\n    // filterMax?: TextureFilterEnum;\r\n    // filterMin?: TextureFilterEnum;\r\n    // wrapS?: TextureWrapEnum;\r\n    // wrapT?: TextureWrapEnum;\r\n    // maximumAnisotropy?: number;\r\n    // enableMimap?: boolean;\r\n    // mipmapFilter?: TextureFilterEnum;\r\n    sampler?: IsamplerOptions;\r\n}\r\n\r\nexport interface IsamplerOptions {\r\n    // ----------------texParameteri-------------\r\n    filterMax?: TextureFilterEnum;\r\n    filterMin?: TextureFilterEnum;\r\n    wrapS?: TextureWrapEnum;\r\n    wrapT?: TextureWrapEnum;\r\n    maximumAnisotropy?: number;\r\n    enableMimap?: boolean;\r\n    mipmapFilter?: TextureFilterEnum;\r\n}\r\n\r\nexport class Sampler {\r\n    filterMax: TextureFilterEnum;\r\n    filterMin: TextureFilterEnum;\r\n    wrapS: TextureWrapEnum;\r\n    wrapT: TextureWrapEnum;\r\n    maximumAnisotropy: number;\r\n    enableMimap: boolean;\r\n    mipmapFilter: TextureFilterEnum;\r\n    constructor(options?: IsamplerOptions) {\r\n        this.filterMax = options?.filterMax || TextureFilterEnum.LINEAR;\r\n        this.filterMin = options?.filterMin || TextureFilterEnum.LINEAR;\r\n        this.wrapS = options?.wrapS || TextureWrapEnum.REPEAT;\r\n        this.wrapT = options?.wrapT || TextureWrapEnum.REPEAT;\r\n        this.maximumAnisotropy = options?.maximumAnisotropy || 1.0;\r\n        this.enableMimap = options?.enableMimap ?? false;\r\n        this.mipmapFilter = options?.mipmapFilter ?? TextureFilterEnum.LINEAR;\r\n    }\r\n}\r\n\r\nexport enum MipmapHintEnum {\r\n    DONT_CARE = GlConstants.DONT_CARE,\r\n    FASTEST = GlConstants.FASTEST,\r\n    NICEST = GlConstants.NICEST,\r\n}\r\n\r\n\r\n","import { UniqueObject } from \"../../core/UniqueObject\";\r\nimport { GraphicsDevice } from \"../../webgl/GraphicsDevice\";\r\nimport { EventHandler } from \"../../core/Event\";\r\nimport { Texture } from \"../../webgl/Texture\";\r\n\r\nexport abstract class Asset extends UniqueObject {\r\n    name: string;\r\n    onDirty = new EventHandler<void>();\r\n    onCreated = new EventHandler<void>();\r\n    abstract destroy(): void;\r\n}\r\n\r\nexport interface IgraphicAsset {\r\n    bind(device: GraphicsDevice): void;\r\n    unbind(): void;\r\n    destroy(): void;\r\n    onDirty: EventHandler<void>;\r\n}\r\n\r\nexport class GraphicAsset extends Asset implements IgraphicAsset {\r\n    bind(device: GraphicsDevice): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    unbind(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    destroy(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { Asset } from \"../Asset\";\r\nimport { Texture } from \"../../../webgl/Texture\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\n\r\nexport abstract class BaseTexture extends Asset {\r\n    protected graphicAsset: Texture;\r\n    protected beNeedRefreshGraphicAsset: boolean = false;\r\n    protected abstract create(device: GraphicsDevice): Texture\r\n    protected abstract refresh(device: GraphicsDevice): void\r\n\r\n    bind(device: GraphicsDevice, unit: number = 0) {\r\n        if (this.graphicAsset == null) {\r\n            this.graphicAsset = this.create(device);\r\n            this.onCreated.raiseEvent();\r\n            this.beNeedRefreshGraphicAsset = false;\r\n        }\r\n        if (this.beNeedRefreshGraphicAsset) {\r\n            this.refresh(device);\r\n            this.beNeedRefreshGraphicAsset = false;\r\n        }\r\n        this.graphicAsset?.bind(unit);\r\n    }\r\n    unbind() {\r\n        this.graphicAsset.unbind();\r\n    }\r\n\r\n    markDirty() {\r\n        this.beNeedRefreshGraphicAsset = true;\r\n    }\r\n\r\n    destroy() {\r\n        this.graphicAsset?.destroy();\r\n    }\r\n}","import { Asset, IgraphicAsset } from \"../Asset\";\r\nimport { Texture, IsamplerOptions, Sampler } from \"../../../webgl/Texture\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { PixelFormatEnum } from \"../../../webgl/PixelFormatEnum\";\r\nimport { PixelDatatypeEnum } from \"../../../webgl/PixelDatatype\";\r\nimport { BaseTexture } from \"./TextureAsset\";\r\n\r\nexport class Texture2D extends BaseTexture {\r\n    protected create(device: GraphicsDevice): Texture {\r\n        if (this._source) {\r\n            return Texture.fromImageSource({\r\n                context: device,\r\n                image: this._source,\r\n                pixelFormat: this._pixelFormat,\r\n                pixelDatatype: this._pixelDatatype,\r\n                sampler: this.sampler\r\n            })\r\n        }\r\n        return null;\r\n    }\r\n    protected refresh(device: GraphicsDevice): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    private _source: TexImageSource;\r\n    set textureSource(source: TexImageSource) { this._source = source; }\r\n    private _pixelFormat: PixelFormatEnum;\r\n    set pixelFormat(format: PixelFormatEnum) { this._pixelFormat = format };\r\n    private _pixelDatatype: PixelDatatypeEnum;\r\n    set pixelDatatype(type: PixelDatatypeEnum) { this._pixelDatatype = type };\r\n    private _preMultiplyAlpha: boolean;\r\n    set preMultiplyAlpha(value: boolean) { this._preMultiplyAlpha = value; }\r\n    private _flipY: boolean;\r\n    set flipY(value: boolean) { this._flipY = value; }\r\n    private sampler: Sampler;\r\n\r\n    constructor(options?: Texture2dOption) {\r\n        super();\r\n        this._source = options?.image;\r\n        this._pixelFormat = options?.pixelFormat || PixelFormatEnum.RGBA;\r\n        this._pixelDatatype = options?.pixelDatatype || PixelDatatypeEnum.UNSIGNED_BYTE\r\n        this._preMultiplyAlpha = options?.preMultiplyAlpha || this.pixelFormat === PixelFormatEnum.RGB || this.pixelFormat === PixelFormatEnum.LUMINANCE;\r\n        this._flipY = options?.flipY ?? true;\r\n        this.sampler = new Sampler(options?.sampler);\r\n    }\r\n}\r\n\r\nexport interface Texture2dOption {\r\n    image: TexImageSource;\r\n\r\n    pixelFormat?: PixelFormatEnum;\r\n    pixelDatatype?: PixelDatatypeEnum;\r\n    preMultiplyAlpha?: boolean;\r\n    flipY?: boolean;\r\n\r\n    // ----------------texParameteri-------------\r\n    sampler?: IsamplerOptions;\r\n}\r\n","import { loadImg } from \"../../../io/loadtool\";\r\nimport { LoadTextureSample } from \"../loadTexture\";\r\nimport { ParseBufferViewNode } from \"./ParseBufferViewNode\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\nimport { Texture2D } from \"../../../scene/asset/texture/Texture2d\";\r\nimport { Primitive } from \"../../../scene/primitive/Primitive\";\r\n\r\nexport class ParseTextureNode\r\n{\r\n    static parse(index: number, gltf: IgltfJson): Promise<Texture2D | null>\r\n    {\r\n        if (gltf.cache.textrueNodeCache[index])\r\n        {\r\n            return gltf.cache.textrueNodeCache[index];\r\n        } else\r\n        {\r\n            if (gltf.textures == null) return null;\r\n            let node = gltf.textures[index];\r\n            if (gltf.images == null) return null;\r\n            let imageNode = gltf.images[node.source];\r\n\r\n            if (imageNode.uri != null)\r\n            {\r\n                let imagUrl = gltf.rootURL + \"/\" + imageNode.uri;\r\n\r\n                let task = loadImg(imagUrl).then(img =>\r\n                {\r\n                    let texOp = {} as any;\r\n                    if (node.sampler != null)\r\n                    {\r\n                        let samplerinfo = gltf.samplers[node.sampler];\r\n                        if (samplerinfo.wrapS != null)\r\n                        {\r\n                            texOp.wrapS = samplerinfo.wrapS;\r\n                        }\r\n                        if (samplerinfo.wrapT)\r\n                        {\r\n                            texOp.wrapT = samplerinfo.wrapT;\r\n                        }\r\n                        if (samplerinfo.magFilter)\r\n                        {\r\n                            texOp.filterMax = samplerinfo.magFilter;\r\n                        }\r\n                        if (samplerinfo.minFilter)\r\n                        {\r\n                            texOp.filterMin = samplerinfo.minFilter;\r\n                        }\r\n                    }\r\n                    let texture: Texture2D = new Texture2D({ image: img });\r\n                    return texture;\r\n                });\r\n                gltf.cache.textrueNodeCache[index] = task;\r\n                return task;\r\n            } else\r\n            {\r\n\r\n                let task = ParseBufferViewNode.parse(imageNode.bufferView, gltf)\r\n                    .then(viewnode =>\r\n                    {\r\n                        let texOp = {} as any; //todo\r\n                        if (node.sampler != null)\r\n                        {\r\n                            let samplerinfo = gltf.samplers[node.sampler];\r\n                            if (samplerinfo.wrapS != null)\r\n                            {\r\n                                texOp.wrapS = samplerinfo.wrapS;\r\n                            }\r\n                            if (samplerinfo.wrapT)\r\n                            {\r\n                                texOp.wrapT = samplerinfo.wrapT;\r\n                            }\r\n                            if (samplerinfo.magFilter)\r\n                            {\r\n                                texOp.filterMax = samplerinfo.magFilter;\r\n                            }\r\n                            if (samplerinfo.minFilter)\r\n                            {\r\n                                texOp.filterMin = samplerinfo.minFilter;\r\n                            }\r\n                        }\r\n\r\n                        return new Promise<HTMLImageElement>((resolve, reject) =>\r\n                        {\r\n                            var blob = new Blob([viewnode.viewBuffer], { type: imageNode.mimeType });\r\n                            var imageUrl = window.URL.createObjectURL(blob);\r\n                            let img: HTMLImageElement = new Image();\r\n                            img.src = imageUrl;\r\n                            img.onerror = error =>\r\n                            {\r\n                                reject(error);\r\n                            };\r\n                            img.onload = () =>\r\n                            {\r\n                                URL.revokeObjectURL(img.src);\r\n                                resolve(img);\r\n                            };\r\n                        }).then((img) =>\r\n                        {\r\n                            let texture = new Texture2D({ image: img });\r\n                            return texture;\r\n                        })\r\n                    });\r\n                gltf.cache.textrueNodeCache[index] = task;\r\n                return task;\r\n            }\r\n            // let asset=assetMgr.load(bundle.rootURL+\"/\"+uri.uri) as Texture;\r\n        }\r\n    }\r\n}\r\n","import { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { UniformTypeEnum } from \"./UniformType\";\r\nimport { VertexAttEnum } from \"./VertexAttEnum\";\r\nimport { Texture } from \"./Texture\";\r\n\r\n/***\r\n * @example usage\r\n * let shader=new ShaderProgam({\r\n *    context:context,\r\n *    attributes:{\r\n *      \"apos\":VertexAttEnum.POSITION \r\n *      },\r\n *    vsStr:`\r\n *          attribute vec4 apos;\r\n *          void main()\r\n *          {\r\n *              gl_Position =vec4(apos.xyz,1.0);\r\n *          }\r\n *      `,\r\n *     fsStr:`\r\n *          void main()\r\n *          {\r\n *                  gl_FragData[0] =vec4(1.0);\r\n *          }\r\n *      `,\r\n * });\r\n */\r\nexport class ShaderProgram implements IshaderProgram {\r\n    program: WebGLProgram;\r\n    uniforms: { [name: string]: IuniformInfo; };\r\n    // samples: { [name: string]: IuniformInfo };\r\n    attributes: { [type: string]: IattributeInfo; };\r\n    private static _cachedProgram: WebGLProgram;\r\n\r\n    constructor(options: IshaderProgramOption) {\r\n        let res = options.context.complileAndLinkShader(options);\r\n        if (res) {\r\n            this.program = res.shader;\r\n            this.uniforms = res.uniforms;\r\n            // this.samples = res.samples;\r\n            this.attributes = res.attributes;\r\n\r\n            //---------------------初始化 uniforms缓存值 为null\r\n            let type: UniformTypeEnum;\r\n            for (let key in this.uniforms) {\r\n                type = this.uniforms[key].type;\r\n                if (type == UniformTypeEnum.FLOAT || type === UniformTypeEnum.INT || type === UniformTypeEnum.BOOL) {\r\n                    this.uniforms[key].value = null;\r\n                } else {\r\n                    this.uniforms[key].value = [null, null, null, null]\r\n                }\r\n            }\r\n        }\r\n\r\n        let gl = options.context.gl;\r\n        this.bind = () => {\r\n            if (this.program != ShaderProgram._cachedProgram) {\r\n                gl.useProgram(this.program);\r\n                ShaderProgram._cachedProgram = this.program;\r\n            }\r\n        }\r\n        this.unbind = () => {\r\n            gl.useProgram(null);\r\n            ShaderProgram._cachedProgram = null;\r\n        }\r\n\r\n        this.bindUniform = (name: string, value: any) => {\r\n            // let _cahched = this._cachedUniform[name];\r\n            // if (_cahched == null || _cahched != value.guid)\r\n            // {\r\n            //     this._cachedUniform[name] = value.guid;\r\n            //     options.context.setUniform(this.uniforms[name], value);\r\n            // }\r\n            options.context.setUniform(this.uniforms[name], value);\r\n        }\r\n    }\r\n    bindUniform(key: string, value: any) { }\r\n\r\n    bindUniforms(device: GraphicsDevice, values: { [name: string]: any }) {\r\n        let uniformInfo: IuniformInfo;\r\n        for (let key in values) {\r\n            uniformInfo = this.uniforms[key];\r\n            if (uniformInfo == null) continue;\r\n            uniformInfo?.setter(uniformInfo, values[key]);\r\n        }\r\n    }\r\n\r\n    bind() { }\r\n    unbind() { }\r\n\r\n    destroy() { }\r\n}\r\n\r\n/**\r\n * shaderProgram 的uniform info\r\n */\r\nexport interface IuniformInfo {\r\n    name: string;\r\n    type: UniformTypeEnum;\r\n    location: WebGLUniformLocation;\r\n    beTexture: boolean;\r\n    /**\r\n     * uniform value 缓存，用于减少shader uniform state changes\r\n     */\r\n    value?: any;\r\n    setter: (uniform: IuniformInfo, value: any) => void\r\n}\r\n/**\r\n * shderprogram的 attribute info\r\n */\r\nexport interface IattributeInfo {\r\n    name: string;\r\n    location: number;\r\n    type: VertexAttEnum;\r\n}\r\n/**\r\n * shaderprogram\r\n */\r\nexport interface IshaderProgram {\r\n    program: WebGLProgram;\r\n    uniforms: { [name: string]: IuniformInfo };\r\n    attributes: { [name: string]: IattributeInfo };\r\n}\r\n\r\nexport interface IshaderProgramOption {\r\n    context: GraphicsDevice;\r\n    attributes: { [attName: string]: VertexAttEnum };\r\n    vsStr: string;\r\n    fsStr: string;\r\n}","import { UniformTypeEnum } from \"../webgl/UniformType\";\r\nimport { UniformState } from \"./UniformState\";\r\n\r\n/* eslint-disable @typescript-eslint/camelcase */\r\n\r\nnamespace Private {\r\n    export const datatypeToGlsl: { [uniformType: string]: string } = {};\r\n    {\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT] = \"float\";\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT_VEC2] = \"vec2\";\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT_VEC3] = \"vec3\";\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT_VEC4] = \"vec4\";\r\n        datatypeToGlsl[UniformTypeEnum.INT] = \"int\";\r\n        datatypeToGlsl[UniformTypeEnum.INT_VEC2] = \"ivec2\";\r\n        datatypeToGlsl[UniformTypeEnum.INT_VEC3] = \"ivec3\";\r\n        datatypeToGlsl[UniformTypeEnum.INT_VEC4] = \"ivec4\";\r\n        datatypeToGlsl[UniformTypeEnum.BOOL] = \"bool\";\r\n        datatypeToGlsl[UniformTypeEnum.BOOL_VEC2] = \"bvec2\";\r\n        datatypeToGlsl[UniformTypeEnum.BOOL_VEC3] = \"bvec3\";\r\n        datatypeToGlsl[UniformTypeEnum.BOOL_VEC4] = \"bvec4\";\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT_MAT2] = \"mat2\";\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT_MAT3] = \"mat3\";\r\n        datatypeToGlsl[UniformTypeEnum.FLOAT_MAT4] = \"mat4\";\r\n        datatypeToGlsl[UniformTypeEnum.SAMPLER_2D] = \"sampler2D\";\r\n        datatypeToGlsl[UniformTypeEnum.SAMPLER_CUBE] = \"samplerCube\";\r\n    }\r\n    export let autoUniformDic: { [name: string]: IautomaticUniform } = {};\r\n}\r\n\r\n\r\n\r\nexport interface IautomaticUniform {\r\n    size: number;\r\n    datatype: UniformTypeEnum;\r\n    getValue(uniformState: UniformState): any;\r\n}\r\n\r\nexport class AutoUniforms {\r\n    private static autoUniformDic: { [name: string]: IautomaticUniform } = {\r\n        czm_model: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixModel;\r\n            },\r\n        },\r\n        czm_view: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixView;\r\n            },\r\n        },\r\n        czm_projection: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixProject;\r\n            },\r\n        },\r\n        czm_modelView: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixModelView;\r\n            },\r\n        },\r\n        czm_viewP: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixViewProject;\r\n            },\r\n        },\r\n        czm_modelViewp: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixModelViewProject;\r\n            },\r\n        },\r\n        czm_normal: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.matrixNormalToView;\r\n            },\r\n        },\r\n        czm_fov: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.curCamera.fov;\r\n            },\r\n        },\r\n        czm_aspect: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.curCamera.aspect;\r\n            },\r\n        },\r\n        czm_near: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.curCamera.near;\r\n            },\r\n        },\r\n        czm_far: {\r\n            size: 1,\r\n            datatype: UniformTypeEnum.FLOAT,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.curCamera.far;\r\n            },\r\n        },\r\n        czm_boneMatrices: {\r\n            size: 110,\r\n            datatype: UniformTypeEnum.FLOAT_MAT4,\r\n            getValue: (uniformState: UniformState) => {\r\n                return uniformState.boneMatrices;\r\n            }\r\n        }\r\n    };\r\n\r\n    static containAuto(unfiorm: string) {\r\n        return this.autoUniformDic[unfiorm] != null;\r\n    }\r\n\r\n    static registAutomaticUniform(unfiorm: string, node: IautomaticUniform) {\r\n        this.autoUniformDic[unfiorm] = node;\r\n    }\r\n\r\n    static getUniformDeclaration(unfiorm: string) {\r\n        let node = this.autoUniformDic[unfiorm];\r\n        if (node == null) {\r\n            return null;\r\n        }\r\n        let declaration = \"uniform \" + Private.datatypeToGlsl[node.datatype] + \" \" + name;\r\n        if (node.size === 1) {\r\n            declaration += \";\";\r\n        } else {\r\n            declaration += \"[\" + node.size.toString() + \"];\";\r\n        }\r\n        return declaration;\r\n    }\r\n\r\n    static getAutoUniformValue(uniform: string, uniformState: UniformState) {\r\n        return this.autoUniformDic[uniform].getValue(uniformState);\r\n    }\r\n}\r\n","import { ShaderProgram } from \"../../../webgl/ShaderProgam\";\r\nimport { VertexAttEnum } from \"../../../webgl/VertexAttEnum\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { AutoUniforms } from \"../../AutoUniform\";\r\nimport { UniformState } from \"../../UniformState\";\r\nexport class ShaderInstance {\r\n    program: ShaderProgram;\r\n    autouniforms: string[];\r\n    constructor(vsStr: string, fsStr: string, attributes: {\r\n        [attName: string]: VertexAttEnum;\r\n    }) {\r\n        this.create = (device: GraphicsDevice) => {\r\n            let program = new ShaderProgram({ context: device, attributes, vsStr, fsStr });\r\n            let autouniforms: string[] = [];\r\n            Object.keys(program.uniforms).forEach(uniform => {\r\n                if (AutoUniforms.containAuto(uniform)) {\r\n                    autouniforms.push(uniform);\r\n                }\r\n            });\r\n            this.program = program;\r\n            this.autouniforms = autouniforms;\r\n        };\r\n    }\r\n    private create = (device: GraphicsDevice) => { };\r\n    bind(device: GraphicsDevice) {\r\n        if (this.program == null) {\r\n            this.create(device);\r\n        }\r\n        this.program.bind();\r\n    }\r\n    bindManulUniforms(device: GraphicsDevice, uniforms: {\r\n        [name: string]: any;\r\n    }) {\r\n        this.program.bindUniforms(device, uniforms);\r\n    }\r\n    bindAutoUniforms(device: GraphicsDevice, uniformState: UniformState) {\r\n        let uniforms: {\r\n            [name: string]: any;\r\n        } = {};\r\n        this.autouniforms.forEach(item => {\r\n            uniforms[item] = AutoUniforms.getAutoUniformValue(item, uniformState);\r\n        });\r\n        this.program.bindUniforms(device, uniforms);\r\n    }\r\n}\r\n","export enum ShaderBucket {\r\n    SKIN = 1,\r\n    FOG = 1 << 1,\r\n    DIFFUSEMAP = 1 << 2,\r\n}\r\nexport namespace ShaderBucket {\r\n    export const packShaderStr = (buket: number) => {\r\n        let str = \"\";\r\n        if (buket & ShaderBucket.SKIN) {\r\n            str += \"#define SKIN \\n\";\r\n        }\r\n        if (buket & ShaderBucket.FOG) {\r\n            str += \"#define FOG \\n\";\r\n        }\r\n        if (buket & ShaderBucket.DIFFUSEMAP) {\r\n            str += \"#define Diffuse \\n\";\r\n        }\r\n        return str;\r\n    };\r\n}\r\n","import { ShaderProgram, IshaderProgramOption } from \"../../../webgl/ShaderProgam\";\r\nimport { RenderLayerEnum } from \"../../RenderLayer\";\r\nimport { Asset, IgraphicAsset } from \"../Asset\";\r\nimport { VertexAttEnum } from \"../../../webgl/VertexAttEnum\";\r\nimport { ShaderInstance } from \"./ShaderInstance\";\r\nimport { ShaderBucket } from \"./ShaderBucket\";\r\n\r\nnamespace Private {\r\n    export let sortId: number = 0;\r\n}\r\n\r\nexport class Shader extends Asset {\r\n\r\n    private _shader: ShaderProgram;\r\n    private _instances: Map<number, ShaderInstance> = new Map();\r\n\r\n    private _layer: RenderLayerEnum;\r\n    get layer() { return this._layer; }\r\n\r\n    private _layerIndex: number;\r\n    setLayerIndex(layer: RenderLayerEnum, queue: number = 0) {\r\n        let layerIndex = layer + queue;\r\n        if (this._layerIndex != layerIndex) {\r\n            this._layer = layer;\r\n            this._layerIndex = layerIndex;\r\n            this.onDirty.raiseEvent();\r\n        }\r\n    }\r\n    get layerIndex() { return this._layerIndex };\r\n\r\n    private vsStr: string;\r\n    private fsStr: string;\r\n    private attributes: { [attName: string]: VertexAttEnum };\r\n    readonly sortId: number;\r\n    constructor(options: IshaderOption) {\r\n        super();\r\n        this.sortId = Private.sortId++;\r\n\r\n        this.vsStr = options.vsStr;\r\n        this.fsStr = options.fsStr;\r\n        this.attributes = options.attributes;\r\n    }\r\n\r\n    getInstance(bucketId: number) {\r\n        if (!this._instances.has(bucketId)) {\r\n            let packStr = ShaderBucket.packShaderStr(bucketId);\r\n            this._instances.set(bucketId, new ShaderInstance(\r\n                packStr + this.vsStr,\r\n                packStr + this.fsStr,\r\n                this.attributes));\r\n        }\r\n        return this._instances.get(bucketId);\r\n    }\r\n\r\n    unbind(): void {\r\n        this._shader?.unbind();\r\n    }\r\n\r\n    destroy() {\r\n        this._shader?.destroy();\r\n    }\r\n}\r\n\r\n\r\nexport interface IshaderOption {\r\n    attributes: { [attName: string]: VertexAttEnum };\r\n    vsStr: string;\r\n    fsStr: string;\r\n}\r\n\r\nexport interface IlayerIndexEvent {\r\n    layer: RenderLayerEnum;\r\n    layerIndex: number\r\n}\r\n\r\n","/**\r\n * 渲染的层级(从小到大绘制)\r\n */\r\nexport enum RenderLayerEnum\r\n{\r\n    Background = 1000,\r\n    Geometry = 2000,\r\n    AlphaTest = 2450,\r\n    Transparent = 3000,\r\n    Overlay = 4000\r\n}","import { GlConstants } from \"../webgl/GLconstant\";\r\nimport { Rect } from \"../mathD/rect\";\r\n\r\nexport class RenderState\r\n{\r\n    cull: {\r\n        enabled: boolean,\r\n        cullBack: boolean,\r\n    } = { enabled: true, cullBack: true };\r\n    colorWrite: {\r\n        red: boolean,\r\n        green: boolean,\r\n        blue: boolean,\r\n        alpha: boolean,\r\n    } = { red: true, green: true, blue: true, alpha: true };\r\n    depthWrite: boolean = true;\r\n    depthTest: {\r\n        enabled: boolean;\r\n        depthFunc: DepthFuncEnum\r\n    } = { enabled: true, depthFunc: DepthFuncEnum.LEQUAL };\r\n    blend: {\r\n        enabled: boolean\r\n        blendSrc: BlendParamEnum,\r\n        blendDst: BlendParamEnum,\r\n        blendEquation: BlendEquationEnum,\r\n\r\n        enableSeparateBlend: boolean,\r\n        blendSrcAlpha: BlendParamEnum,\r\n        blendDstAlpha: BlendParamEnum,\r\n        blendAlphaEquation: BlendEquationEnum,\r\n    } = {\r\n            enabled: false,\r\n            blendSrc: BlendParamEnum.SRC_ALPHA,\r\n            blendDst: BlendParamEnum.ONE,\r\n            blendEquation: BlendEquationEnum.FUNC_ADD,\r\n            enableSeparateBlend: false,\r\n            blendSrcAlpha: BlendParamEnum.SRC_ALPHA,\r\n            blendDstAlpha: BlendParamEnum.ONE,\r\n            blendAlphaEquation: BlendEquationEnum.FUNC_ADD\r\n        };\r\n    stencilTest: {\r\n        enabled: boolean,\r\n        stencilFunction: number,\r\n        stencilRefValue: number,\r\n        stencilMask: number,\r\n        stencilFail: number,\r\n        stencilPassZfail: number,\r\n        stencilFaileZpass: number,\r\n\r\n        enableSeparateStencil: boolean,\r\n        stencilFunctionBack: number,\r\n        stencilRefValueBack: number,\r\n        stencilMaskBack: number,\r\n        stencilFailBack: number,\r\n        stencilPassZfailBack: number,\r\n        stencilFaileZpassBack: number,\r\n    } = {\r\n            enabled: false,\r\n            stencilFunction: StencilFuncEnum.ALWAYS,\r\n            stencilRefValue: 1,\r\n            stencilMask: 0xff,\r\n            stencilFail: GlConstants.KEEP,\r\n            stencilPassZfail: GlConstants.REPLACE,\r\n            stencilFaileZpass: GlConstants.KEEP,\r\n\r\n            enableSeparateStencil: false,\r\n            stencilFunctionBack: StencilFuncEnum.ALWAYS,\r\n            stencilRefValueBack: 1,\r\n            stencilMaskBack: 0xff,\r\n            stencilFailBack: GlConstants.KEEP,\r\n            stencilPassZfailBack: GlConstants.REPLACE,\r\n            stencilFaileZpassBack: GlConstants.KEEP,\r\n        };\r\n    scissorTest: {\r\n        enabled: boolean,\r\n        rectangle: Rect,\r\n    } = {\r\n            enabled: false,\r\n            rectangle: Rect.create(),\r\n        }\r\n}\r\n\r\nexport enum DepthFuncEnum\r\n{\r\n    NEVER = GlConstants.NEVER,\r\n    LESS = GlConstants.LESS,\r\n    EQUAL = GlConstants.EQUAL,\r\n    LEQUAL = GlConstants.LEQUAL,\r\n    GREATER = GlConstants.GREATER,\r\n    NOTEQUAL = GlConstants.NOTEQUAL,\r\n    GEQUAL = GlConstants.GEQUAL,\r\n    ALWAYS = GlConstants.ALWAYS,\r\n}\r\nexport enum BlendEquationEnum\r\n{\r\n    /**\r\n     * 源+目的地\r\n     */\r\n    FUNC_ADD = GlConstants.FUNC_ADD,\r\n    /**\r\n     * 源 - 目的地\r\n     */\r\n    FUNC_SUBTRACT = GlConstants.FUNC_SUBTRACT,\r\n    /**\r\n     * 目的地 - 源\r\n     */\r\n    FUNC_REVERSE_SUBTRACT = GlConstants.FUNC_REVERSE_SUBTRACT,\r\n}\r\n\r\nexport enum BlendParamEnum\r\n{\r\n    ONE = GlConstants.ONE,\r\n    SRC_ALPHA = GlConstants.SRC_ALPHA,\r\n    ONE_MINUS_SRC_ALPHA = GlConstants.ONE_MINUS_SRC_ALPHA,\r\n}\r\n\r\nexport enum StencilFuncEnum\r\n{\r\n    /**\r\n     * Never pass\r\n     */\r\n    NEVER = GlConstants.NEVER,\r\n    /**\r\n     * Pass if (ref & mask) <  (stencil & mask).\r\n     */\r\n    LESS = GlConstants.LESS,\r\n    /**\r\n     * Pass if (ref & mask) =  (stencil & mask).\r\n     */\r\n    EQUAL = GlConstants.EQUAL,\r\n    /**\r\n     * Pass if (ref & mask) <= (stencil & mask).\r\n     */\r\n    LEQUAL = GlConstants.LEQUAL,\r\n    /**\r\n     * Pass if (ref & mask) >  (stencil & mask).\r\n     */\r\n    GREATER = GlConstants.GREATER,\r\n    /**\r\n     * Pass if (ref & mask) != (stencil & mask).\r\n     */\r\n    NOTEQUAL = GlConstants.NOTEQUAL,\r\n    /**\r\n     * Pass if (ref & mask) >= (stencil & mask).\r\n     */\r\n    GEQUAL = GlConstants.GEQUAL,\r\n    /**\r\n     * Always pass.\r\n     */\r\n    ALWAYS = GlConstants.ALWAYS,\r\n}\r\n\r\nexport enum StencilOperationEnum\r\n{\r\n    KEEP = GlConstants.KEEP,\r\n    REPLACE = GlConstants.REPLACE,\r\n}","import { EventHandler } from \"../core/Event\";\r\nimport { Asset } from \"./asset/Asset\";\r\nimport { DebuffAction } from \"../core/DebuffAction\";\r\n\r\ninterface Iondirty {\r\n    onDirty: EventHandler<void>;\r\n}\r\n\r\nexport class AssetReference<T extends Iondirty>\r\n{\r\n    private _asset: T;\r\n    set asset(value: T) {\r\n        if (this._asset != value) {\r\n            let oldAsset = this._asset;\r\n            this._asset = value;\r\n\r\n            this.onAssetChange.raiseEvent({ newAsset: value, oldAsset });\r\n            this.attachToDirtyAction.excuteAction(() => {\r\n                let func = () => { this.onDirty.raiseEvent() }\r\n                value?.onDirty.addEventListener(func);\r\n                return () => {\r\n                    value?.onDirty.removeEventListener(func);\r\n                }\r\n            });\r\n        }\r\n    };\r\n    get asset() { return this._asset };\r\n    onAssetChange: EventHandler<AssetChangedEvent<T>> = new EventHandler();\r\n    onDirty = new EventHandler<void>();\r\n    private attachToDirtyAction = DebuffAction.create();\r\n\r\n    destroy() {\r\n        this._asset = undefined;\r\n        this.attachToDirtyAction.dispose();\r\n        this.attachToDirtyAction = undefined;\r\n        this.onAssetChange.destroy();\r\n        this.onAssetChange = undefined;\r\n    }\r\n\r\n}\r\n\r\n\r\nexport class AssetChangedEvent<T extends Iondirty>\r\n{\r\n    newAsset: T;\r\n    oldAsset: T;\r\n}","import { Shader, IlayerIndexEvent, IshaderOption } from \"./Shader\";\r\nimport { RenderLayerEnum } from \"../../RenderLayer\";\r\nimport { RenderState } from \"../../RenderState\";\r\nimport { Asset } from \"../Asset\";\r\nimport { AssetReference, AssetChangedEvent } from \"../../AssetReference\";\r\nnamespace Private {\r\n    export let id: number = 0;\r\n}\r\nexport class Material extends Asset {\r\n    name: string;\r\n    uniformParameters: { [name: string]: any } = {};\r\n    constructor(options?: ImatOption) {\r\n        super();\r\n        this.name = options?.name;\r\n        this._sortId = Private.id++;\r\n\r\n        if (options?.shaderOption != null) {\r\n            if (options?.shaderOption instanceof Shader) {\r\n                this.shader = options.shaderOption;\r\n            } else {\r\n                this.shader = new Shader(options.shaderOption)\r\n            }\r\n        }\r\n        if (options?.uniformParameters) {\r\n            this.uniformParameters = { ...options.uniformParameters }\r\n        }\r\n        this.onDirty.addEventListener(() => { this.beDirty = true; })\r\n        this.shaderRef.onDirty.addEventListener(() => { this.onDirty.raiseEvent() });\r\n    }\r\n    beDirty: boolean = false;\r\n    private shaderRef = new AssetReference<Shader>();\r\n    get shader() { return this.shaderRef.asset };\r\n    set shader(value: Shader) { this.shaderRef.asset = value };\r\n\r\n    private _layer: RenderLayerEnum;\r\n    get layer() { return this._layer || this.shader.layer || RenderLayerEnum.Geometry; }\r\n\r\n    private _layerIndex: number;\r\n    setLayerIndex(layer: RenderLayerEnum, queue: number = 0) {\r\n        this._layer = layer;\r\n        this._layerIndex = layer + queue;\r\n        this.onDirty.raiseEvent();\r\n    }\r\n    get layerIndex() { return this._layerIndex ?? this.shader.layerIndex };\r\n\r\n    renderState: RenderState = new RenderState();\r\n    private _sortId: number;\r\n    get sortId() { return this._sortId + 1000 * this.shader?.sortId }\r\n\r\n    setUniformParameter(uniformKey: string, value: any) {\r\n        this.uniformParameters[uniformKey] = value;\r\n        this.beDirty = true;\r\n    }\r\n    destroy(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nexport interface ImatOption {\r\n    name?: string;\r\n    uniformParameters?: { [name: string]: any };\r\n    shaderOption?: IshaderOption | Shader;\r\n}","precision highp float;\r\n\r\nattribute vec4 POSITION;\r\nattribute vec2 TEXCOORD_0;\r\n\r\nuniform mat4 czm_modelViewp;\r\nvarying mediump vec2 xlv_TEXCOORD0;\r\n#ifdef SKIN\r\nattribute vec4 skinIndex;\r\nattribute vec4 skinWeight;\r\nuniform mat4 czm_boneMatrices[40];\r\nvec4 calcVertex(vec4 srcVertex,vec4 blendIndex,vec4 blendWeight)\r\n{\r\n    int i = int(blendIndex.x);  \r\n    int i2 =int(blendIndex.y);\r\n    int i3 =int(blendIndex.z);\r\n    int i4 =int(blendIndex.w);\r\n    \r\n    mat4 mat = czm_boneMatrices[i]*blendWeight.x \r\n            + czm_boneMatrices[i2]*blendWeight.y \r\n            + czm_boneMatrices[i3]*blendWeight.z \r\n            + czm_boneMatrices[i4]*blendWeight.w;\r\n    return mat* srcVertex;\r\n}\r\n#endif\r\nvoid main()\r\n{\r\n    vec4 position=POSITION;\r\n    #ifdef SKIN\r\n    position =calcVertex(position,skinIndex,skinWeight);\r\n    #endif\r\n\r\n    xlv_TEXCOORD0 = TEXCOORD_0.xy;\r\n    gl_Position = czm_modelViewp * position;\r\n}","import { Shader } from \"../../scene/asset/material/Shader\";\r\nimport { VertexAttEnum } from \"../../webgl/VertexAttEnum\";\r\nimport baseVs from '../../shaders/Unlit.vert.glsl';\r\nimport baseFs from '../../shaders/Unlit.vert.glsl';\r\n\r\nnamespace Private {\r\n    export const color_2d = new Shader({\r\n        attributes: {\r\n            POSITION: VertexAttEnum.POSITION\r\n        },\r\n        vsStr: `attribute vec3 POSITION;\r\n        void main()\r\n        {\r\n            highp vec4 tmplet_1=vec4(POSITION.xyz,1.0);\\\r\n            gl_Position = tmplet_1;\\\r\n        }`,\r\n        fsStr: `uniform highp vec4 MainColor;\r\n        void main()\r\n        {\r\n            gl_FragData[0] = MainColor;\r\n        }`\r\n    });\r\n    export const tex_2d = new Shader({\r\n        attributes: {\r\n            POSITION: VertexAttEnum.POSITION,\r\n            TEXCOORD_0: VertexAttEnum.TEXCOORD_0\r\n        },\r\n        vsStr: `attribute vec3 POSITION;\r\n          attribute vec2 TEXCOORD_0;\r\n          varying mediump vec2 xlv_TEXCOORD0;\r\n          void main()\r\n          {\r\n              highp vec4 tmplet_1=vec4(POSITION.xyz*2.0,1.0);\r\n              xlv_TEXCOORD0 = TEXCOORD_0.xy;\r\n              gl_Position = tmplet_1;\r\n          }`,\r\n        fsStr: `uniform highp vec4 MainColor;\r\n          uniform lowp sampler2D MainTex;\r\n          varying mediump vec2 xlv_TEXCOORD0;\r\n          void main()\r\n          {\r\n              gl_FragData[0] = texture2D(MainTex, xlv_TEXCOORD0);\r\n          }`\r\n    });\r\n\r\n    export const color_3d = new Shader({\r\n        attributes: {\r\n            POSITION: VertexAttEnum.POSITION,\r\n            TEXCOORD_0: VertexAttEnum.TEXCOORD_0,\r\n        },\r\n        vsStr: `attribute vec3 POSITION;\r\n        uniform highp mat4 czm_modelViewp;\r\n        void main()\r\n        {\r\n            highp vec4 tmplet_1=vec4(POSITION.xyz,1.0);\r\n            gl_Position = czm_modelViewp * tmplet_1;\r\n        }`,\r\n        fsStr: `uniform highp vec4 MainColor;\r\n        void main()\r\n        {\r\n            gl_FragData[0] = MainColor;\r\n        }`\r\n    });\r\n    export const tex_3d = new Shader({\r\n        attributes: {\r\n            POSITION: VertexAttEnum.POSITION,\r\n            TEXCOORD_0: VertexAttEnum.TEXCOORD_0,\r\n        },\r\n        vsStr: `attribute vec3 POSITION;\r\n        attribute vec3 TEXCOORD_0;\r\n        uniform highp mat4 czm_modelViewp;\r\n        varying mediump vec2 xlv_TEXCOORD0;\r\n        void main()\r\n        {\r\n            highp vec4 tmplet_1=vec4(POSITION.xyz,1.0);\r\n            xlv_TEXCOORD0 = TEXCOORD_0.xy;\r\n            gl_Position = czm_modelViewp * tmplet_1;\r\n        }`,\r\n        fsStr: `uniform highp vec4 MainColor;\r\n        varying mediump vec2 xlv_TEXCOORD0;\r\n        uniform lowp sampler2D MainTex;\r\n        void main()\r\n        {\r\n            gl_FragData[0] = texture2D(MainTex, xlv_TEXCOORD0)*MainColor;\r\n        }`\r\n    });\r\n\r\n    export const unlit_3d = new Shader({\r\n        attributes: {\r\n            POSITION: VertexAttEnum.POSITION,\r\n            TEXCOORD_0: VertexAttEnum.TEXCOORD_0,\r\n        },\r\n        vsStr: baseVs,\r\n        fsStr: baseFs\r\n    });\r\n}\r\nexport class DefaultShader {\r\n    static get color_2d() { return Private.color_2d };\r\n    static get color_3d() { return Private.color_3d };\r\n    static get tex_2d() { return Private.tex_2d };\r\n    static get tex_3d() { return Private.tex_3d };\r\n    static get unlit_3d() { return Private.unlit_3d };\r\n}","import { Asset, IgraphicAsset } from \"../Asset\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { TypedArray } from \"../../../core/TypedArray\";\r\nimport { PixelFormatEnum } from \"../../../webgl/PixelFormatEnum\";\r\nimport { PixelDatatypeEnum } from \"../../../webgl/PixelDatatype\";\r\nimport { IsamplerOptions, Sampler, Texture } from \"../../../webgl/Texture\";\r\nimport { BaseTexture } from \"./TextureAsset\";\r\n\r\nexport class MemoryTexture extends BaseTexture {\r\n    protected create(device: GraphicsDevice): Texture {\r\n        if (this.arrayBufferView) {\r\n            return Texture.fromTypedArray({\r\n                context: device,\r\n                width: this.width,\r\n                height: this.height,\r\n                arrayBufferView: this.arrayBufferView,\r\n                pixelFormat: this._pixelFormat,\r\n                pixelDatatype: this._pixelDatatype,\r\n                sampler: this.sampler\r\n            })\r\n        }\r\n        return null;\r\n    }\r\n    protected refresh(device: GraphicsDevice): void {\r\n        this.graphicAsset.update();\r\n    }\r\n\r\n    width: number;\r\n    height: number;\r\n    private arrayBufferView: TypedArray;\r\n\r\n    // ----------------texParameteri-------------\r\n    private _pixelFormat: PixelFormatEnum;\r\n    set pixelFormat(format: PixelFormatEnum) { this._pixelFormat = format };\r\n    private _pixelDatatype: PixelDatatypeEnum;\r\n    set pixelDatatype(type: PixelDatatypeEnum) { this._pixelDatatype = type };\r\n    private _preMultiplyAlpha: boolean;\r\n    set preMultiplyAlpha(value: boolean) { this._preMultiplyAlpha = value; }\r\n    private _flipY: boolean;\r\n    set flipY(value: boolean) { this._flipY = value; }\r\n    private sampler: Sampler;\r\n\r\n    constructor(options: ImemoryTextureOption) {\r\n        super();\r\n        this.arrayBufferView = options.arrayBufferView;\r\n        this.width = options.width;\r\n        this.height = options.height;\r\n        this._pixelFormat = options.pixelFormat || PixelFormatEnum.RGBA;\r\n        this._pixelDatatype = options.pixelDatatype || PixelDatatypeEnum.UNSIGNED_BYTE\r\n        this._preMultiplyAlpha = options.preMultiplyAlpha || this.pixelFormat === PixelFormatEnum.RGB || this.pixelFormat === PixelFormatEnum.LUMINANCE;\r\n        this._flipY = options.flipY ?? true;\r\n        this.sampler = new Sampler(options.sampler);\r\n    }\r\n\r\n}\r\n\r\nexport interface ImemoryTextureOption {\r\n    width: number;\r\n    height: number;\r\n    arrayBufferView: TypedArray;\r\n    pixelFormat?: PixelFormatEnum;\r\n    pixelDatatype?: PixelDatatypeEnum;\r\n    preMultiplyAlpha?: boolean;\r\n    flipY?: boolean;\r\n\r\n    // ----------------texParameteri-------------\r\n    sampler?: IsamplerOptions;\r\n}","import { MemoryTexture } from \"../../scene/asset/texture/MemoryTexture\";\r\n\r\nnamespace Private\r\n{\r\n    export let white: MemoryTexture = new MemoryTexture({\r\n        width: 1,\r\n        height: 1,\r\n        arrayBufferView: new Uint8Array([255, 255, 255, 255])\r\n    });\r\n    export let black: MemoryTexture = new MemoryTexture({\r\n        width: 1,\r\n        height: 1,\r\n        arrayBufferView: new Uint8Array([0, 0, 0, 255])\r\n    });\r\n    export let grid = new MemoryTexture({\r\n        width: 256,\r\n        height: 256,\r\n        arrayBufferView: getGridTexData(256, 256),\r\n    });\r\n\r\n    function getGridTexData(width: number, height: number)\r\n    {\r\n        let data = new Uint8Array(width * width * 4);\r\n        for (let y = 0; y < height; y++)\r\n        {\r\n            for (let x = 0; x < width; x++)\r\n            {\r\n                let seek = (y * width + x) * 4;\r\n\r\n                if ((x - width * 0.5) * (y - height * 0.5) > 0)\r\n                {\r\n                    data[seek] = 0;\r\n                    data[seek + 1] = 0;\r\n                    data[seek + 2] = 0;\r\n                    data[seek + 3] = 255;\r\n                } else\r\n                {\r\n                    data[seek] = 255;\r\n                    data[seek + 1] = 255;\r\n                    data[seek + 2] = 255;\r\n                    data[seek + 3] = 255;\r\n                }\r\n            }\r\n        }\r\n        return data;\r\n    }\r\n}\r\n\r\n\r\nexport class DefaultTexture\r\n{\r\n    static get white() { return Private.white };\r\n    static get black() { return Private.black };\r\n    static get grid() { return Private.grid };\r\n}\r\n\r\nexport function arraybufferToimage(arrayBufferView: Uint8Array, mimeType: string = \"image/jpeg\"): Promise<HTMLImageElement>\r\n{\r\n    return new Promise<HTMLImageElement>((resolve, reject) =>\r\n    {\r\n        var blob = new Blob([arrayBufferView], { type: mimeType });\r\n        var imageUrl = window.URL.createObjectURL(blob);\r\n        let img: HTMLImageElement = new Image();\r\n        img.src = imageUrl;\r\n        img.onerror = error =>\r\n        {\r\n            reject(error);\r\n        };\r\n        img.onload = () =>\r\n        {\r\n            URL.revokeObjectURL(img.src);\r\n            resolve(img);\r\n        };\r\n    })\r\n}","import { Material } from \"../../scene/asset/material/Material\"\r\nimport { DefaultShader } from \"./DefaultShader\";\r\nimport { Color } from \"../../mathD/color\";\r\nimport { DefaultTexture } from \"./DefaultTexture\";\r\n\r\nnamespace Private {\r\n    export const color_2d = new Material({ name: \"color_2d\", shaderOption: DefaultShader.color_2d, uniformParameters: { MainColor: Color.create(1, 1, 1, 1) } });\r\n    export const color_3d = new Material({ name: \"color_3d\", shaderOption: DefaultShader.color_3d, uniformParameters: { MainColor: Color.create(1, 0, 0, 1) } });\r\n    export const tex_2d = new Material({\r\n        name: \"tex_2d\",\r\n        shaderOption: DefaultShader.tex_2d,\r\n        uniformParameters: {\r\n            MainColor: Color.create(1, 1, 1, 1),\r\n            MainTex: DefaultTexture.white\r\n        }\r\n    });\r\n    export const tex_3d = new Material({\r\n        name: \"tex_3d\",\r\n        shaderOption: DefaultShader.tex_3d,\r\n        uniformParameters: {\r\n            MainColor: Color.create(1, 1, 1, 1),\r\n            MainTex: DefaultTexture.white\r\n        }\r\n    });\r\n\r\n    export const unlit_3d = new Material({\r\n        name: \"unlit_3d\",\r\n        shaderOption: DefaultShader.unlit_3d,\r\n        uniformParameters: {\r\n            MainColor: Color.create(1, 1, 1, 1),\r\n        }\r\n    });\r\n}\r\n\r\nexport class DefaultMaterial {\r\n    static get color_2d() { return Private.color_2d };\r\n    static get color_3d() { return Private.color_3d };\r\n    static get tex_2d() { return Private.tex_2d };\r\n    static get tex_3d() { return Private.tex_3d };\r\n    static get unlit_3d() { return Private.unlit_3d };\r\n}","import { Vec4 } from \"../../../mathD/vec4\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\nimport { ParseTextureNode } from \"./ParseTextureNode\";\r\nimport { Vec3 } from \"../../../mathD/vec3\";\r\nimport { Color } from \"../../../mathD/color\";\r\nimport { Material } from '../../../scene/asset/material/Material';\r\nimport { VertexAttEnum } from \"../../../webgl/VertexAttEnum\";\r\nimport { DefaultMaterial } from \"../../defAssets/DefaultMaterial\";\r\n\r\n\r\nnamespace Private {\r\n    export const defmat = new Material({\r\n        uniformParameters: {\r\n            MainColor: Color.create(1.0, 1.0, 1.0, 1.0)\r\n        },\r\n        shaderOption: {\r\n            attributes: {\r\n                POSITION: VertexAttEnum.POSITION,\r\n                TEXCOORD_0: VertexAttEnum.TEXCOORD_0,\r\n            },\r\n            vsStr: `precision highp float;\r\n            attribute vec3 TEXCOORD_0;\r\n            uniform mat4 czm_modelViewp;\r\n            varying mediump vec2 xlv_TEXCOORD0;\r\n            #ifdef SKIN\r\n            attribute vec4 skinIndex;\r\n            attribute vec4 skinWeight;\r\n            uniform mat4 czm_boneMatrices[40];\r\n            vec4 calcVertex(vec4 srcVertex,vec4 blendIndex,vec4 blendWeight)\r\n            {\r\n                int i = int(blendIndex.x);  \r\n                int i2 =int(blendIndex.y);\r\n                int i3 =int(blendIndex.z);\r\n                int i4 =int(blendIndex.w);\r\n                \r\n                mat4 mat = czm_boneMatrices[i]*blendWeight.x \r\n                        + czm_boneMatrices[i2]*blendWeight.y \r\n                        + czm_boneMatrices[i3]*blendWeight.z \r\n                        + czm_boneMatrices[i4]*blendWeight.w;\r\n                return mat* srcVertex;\r\n            }\r\n            #endif\r\n            attribute vec3 POSITION;\r\n            void main()\r\n            {\r\n                vec4 position=vec4(POSITION.xyz,1.0);\r\n                #ifdef SKIN\r\n                position =calcVertex(position,skinIndex,skinWeight);\r\n                #endif\r\n\r\n                xlv_TEXCOORD0 = TEXCOORD_0.xy;\r\n                gl_Position = czm_modelViewp * position;\r\n            }`,\r\n            fsStr: `precision highp float;\r\n            uniform vec4 MainColor;\r\n            varying vec2 xlv_TEXCOORD0;\r\n            uniform sampler2D MainTex;\r\n            void main()\r\n            {\r\n                gl_FragData[0] = texture2D(MainTex, xlv_TEXCOORD0)*MainColor;\r\n            }`\r\n        }\r\n    });\r\n}\r\n\r\nexport class ParseMaterialNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<Material> {\r\n        if (gltf.cache.materialNodeCache[index]) {\r\n            return gltf.cache.materialNodeCache[index];\r\n        } else {\r\n            // if (gltf.materials == null)\r\n            // {\r\n            //     return Promise.resolve(null);\r\n            // }\r\n            let node = gltf.materials[index];\r\n\r\n            if (node.pbrMetallicRoughness?.baseColorTexture != null) {\r\n                let mat = new Material();\r\n                mat.setUniformParameter(\"MainColor\", Color.create(1.0, 1.0, 1.0, 1));\r\n                mat.shader = Private.defmat.shader;\r\n                return ParseTextureNode.parse(node.pbrMetallicRoughness?.baseColorTexture.index, gltf)\r\n                    .then(tex => {\r\n                        mat.setUniformParameter(\"MainTex\", tex);\r\n                        return mat;\r\n                    });\r\n            } else {\r\n                let mat = DefaultMaterial.color_3d;\r\n                return Promise.resolve(mat);\r\n            }\r\n\r\n\r\n            //     let baseVs =\r\n            //     \"\\\r\n            //   attribute vec3 POSITION;\\\r\n            //   uniform highp mat4 czm_modelViewp;\\\r\n            //   void main()\\\r\n            //   {\\\r\n            //       highp vec4 tmplet_1=vec4(POSITION.xyz,1.0);\\\r\n            //       gl_Position = czm_modelViewp * tmplet_1;\\\r\n            //   }\";\r\n\r\n            // let baseFs =\r\n            //     \"\\\r\n            //     uniform highp vec4 MainColor;\\\r\n            //     void main()\\\r\n            //     {\\\r\n            //         gl_FragData[0] = MainColor;\\\r\n            //     }\";\r\n            // mat.setUniformParameter(\"MainColor\", Color.create());\r\n            // // mat.setUniformParameter(\"_MainTex\", DefTextrue.GIRD);\r\n            // //-------------loadshader\r\n            // // let pbrShader = assetMgr.load(\"resource/shader/pbr_glTF.shader.json\") as Shader;\r\n            // // mat.setShader(pbrShader);\r\n            // if (node.pbrMetallicRoughness)\r\n            // {\r\n            //     let nodeMR = node.pbrMetallicRoughness;\r\n            //     if (nodeMR.baseColorFactor)\r\n            //     {\r\n            //         let baseColorFactor = Vec4.create();\r\n            //         Vec4.copy(nodeMR.baseColorFactor, baseColorFactor);\r\n            //         mat.setUniformParameter(\"u_BaseColorFactor\", baseColorFactor);\r\n            //     }\r\n            //     if (nodeMR.metallicFactor != null)\r\n            //     {\r\n            //         mat.setUniformParameter(\"u_metalFactor\", nodeMR.metallicFactor);\r\n            //     }\r\n            //     if (nodeMR.roughnessFactor != null)\r\n            //     {\r\n            //         mat.setUniformParameter(\"u_roughnessFactor\", nodeMR.roughnessFactor);\r\n            //     }\r\n            //     if (nodeMR.baseColorTexture != null)\r\n            //     {\r\n            //         let tex = ParseTextureNode.parse(nodeMR.baseColorTexture.index, gltf).then(tex =>\r\n            //         {\r\n            //             mat.setUniformParameter(\"u_BaseColorSampler\", tex);\r\n            //             mat.setUniformParameter(\"_MainTex\", tex);\r\n            //             console.warn(\"@@@@@@@@@\", mat);\r\n            //         });\r\n            //     }\r\n            //     if (nodeMR.metallicRoughnessTexture)\r\n            //     {\r\n            //         let tex = ParseTextureNode.parse(nodeMR.metallicRoughnessTexture.index, gltf).then(tex =>\r\n            //         {\r\n            //             mat.setUniformParameter(\"u_MetallicRoughnessSampler\", tex);\r\n            //         });\r\n            //     }\r\n            // }\r\n            // if (node.normalTexture)\r\n            // {\r\n            //     let nodet = node.normalTexture;\r\n            //     let tex = ParseTextureNode.parse(nodet.index, gltf).then(tex =>\r\n            //     {\r\n            //         mat.setUniformParameter(\"u_NormalSampler\", tex);\r\n            //     });\r\n            //     // mat.setTexture(\"u_NormalSampler\",tex);\r\n            //     if (nodet.scale)\r\n            //     {\r\n            //         mat.setUniformParameter(\"u_NormalScale\", nodet.scale);\r\n            //     }\r\n            // }\r\n            // if (node.emissiveTexture)\r\n            // {\r\n            //     let nodet = node.emissiveTexture;\r\n            //     let tex = ParseTextureNode.parse(nodet.index, gltf).then(tex =>\r\n            //     {\r\n            //         mat.setUniformParameter(\"u_EmissiveSampler\", tex);\r\n            //     });\r\n            // }\r\n            // if (node.emissiveFactor)\r\n            // {\r\n            //     let ve3 = Vec3.create();\r\n            //     Vec3.copy(node.emissiveFactor, ve3);\r\n            //     mat.setUniformParameter(\"u_EmissiveFactor\", ve3);\r\n            // }\r\n            // if (node.occlusionTexture)\r\n            // {\r\n            //     let nodet = node.occlusionTexture;\r\n            //     if (nodet.strength)\r\n            //     {\r\n            //         mat.setUniformParameter(\"u_OcclusionStrength\", nodet.strength);\r\n            //     }\r\n            // }\r\n\r\n            // // let brdfTex = assetMgr.load(\"resource/texture/brdfLUT.imgdes.json\") as Texture;\r\n            // // mat.setTexture(\"u_brdfLUT\", brdfTex);\r\n\r\n            // // let e_cubeDiff: CubeTexture = new CubeTexture();\r\n            // // let e_diffuseArr: string[] = [];\r\n            // // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_right_0.jpg\");\r\n            // // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_left_0.jpg\");\r\n            // // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_top_0.jpg\");\r\n            // // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_bottom_0.jpg\");\r\n            // // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_front_0.jpg\");\r\n            // // e_diffuseArr.push(\"resource/texture/papermill/diffuse/diffuse_back_0.jpg\");\r\n            // // e_cubeDiff.groupCubeTexture(e_diffuseArr);\r\n\r\n            // // let env_speTex = new CubeTexture();\r\n            // // for (let i = 0; i < 10; i++) {\r\n            // //     let urlarr = [];\r\n            // //     urlarr.push(\"resource/texture/papermill/specular/specular_right_\" + i + \".jpg\");\r\n            // //     urlarr.push(\"resource/texture/papermill/specular/specular_left_\" + i + \".jpg\");\r\n            // //     urlarr.push(\"resource/texture/papermill/specular/specular_top_\" + i + \".jpg\");\r\n            // //     urlarr.push(\"resource/texture/papermill/specular/specular_bottom_\" + i + \".jpg\");\r\n            // //     urlarr.push(\"resource/texture/papermill/specular/specular_front_\" + i + \".jpg\");\r\n            // //     urlarr.push(\"resource/texture/papermill/specular/specular_back_\" + i + \".jpg\");\r\n            // //     env_speTex.groupMipmapCubeTexture(urlarr, i, 9);\r\n            // // }\r\n            // // mat.setCubeTexture(\"u_DiffuseEnvSampler\", e_cubeDiff);\r\n            // // mat.setCubeTexture(\"u_SpecularEnvSampler\", env_speTex);\r\n\r\n            // return Promise.resolve(mat);\r\n        }\r\n    }\r\n}\r\n","/* DataType */\r\nconst BYTE = 0x1400;\r\nconst UNSIGNED_BYTE = 0x1401;\r\nconst SHORT = 0x1402;\r\nconst UNSIGNED_SHORT = 0x1403;\r\nconst INT = 0x1404;\r\nconst UNSIGNED_INT = 0x1405;\r\nconst FLOAT = 0x1406;\r\nconst UNSIGNED_SHORT_4_4_4_4 = 0x8033;\r\nconst UNSIGNED_SHORT_5_5_5_1 = 0x8034;\r\nconst UNSIGNED_SHORT_5_6_5 = 0x8363;\r\nconst HALF_FLOAT = 0x140b;\r\nconst UNSIGNED_INT_2_10_10_10_REV = 0x8368;\r\nconst UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b;\r\nconst UNSIGNED_INT_5_9_9_9_REV = 0x8c3e;\r\nconst FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad;\r\nconst UNSIGNED_INT_24_8 = 0x84fa;\r\n\r\nconst glTypeToTypedArrayCtor: { [gltype: number]: any } = {};\r\n{\r\n    const tt = glTypeToTypedArrayCtor;\r\n    tt[BYTE] = Int8Array;\r\n    tt[UNSIGNED_BYTE] = Uint8Array;\r\n    tt[SHORT] = Int16Array;\r\n    tt[UNSIGNED_SHORT] = Uint16Array;\r\n    tt[INT] = Int32Array;\r\n    tt[UNSIGNED_INT] = Uint32Array;\r\n    tt[FLOAT] = Float32Array;\r\n    tt[UNSIGNED_SHORT_4_4_4_4] = Uint16Array;\r\n    tt[UNSIGNED_SHORT_5_5_5_1] = Uint16Array;\r\n    tt[UNSIGNED_SHORT_5_6_5] = Uint16Array;\r\n    tt[HALF_FLOAT] = Uint16Array;\r\n    tt[UNSIGNED_INT_2_10_10_10_REV] = Uint32Array;\r\n    tt[UNSIGNED_INT_10F_11F_11F_REV] = Uint32Array;\r\n    tt[UNSIGNED_INT_5_9_9_9_REV] = Uint32Array;\r\n    tt[FLOAT_32_UNSIGNED_INT_24_8_REV] = Uint32Array;\r\n    tt[UNSIGNED_INT_24_8] = Uint32Array;\r\n}\r\n\r\n/**\r\n * Get the GL type for a typedArray\r\n */\r\nexport function getGLTypeFromTypedArray(typedArray: ArrayBufferView): number {\r\n    if (typedArray instanceof Int8Array) {\r\n        return BYTE;\r\n    }\r\n    if (typedArray instanceof Uint8Array) {\r\n        return UNSIGNED_BYTE;\r\n    }\r\n    if (typedArray instanceof Uint8ClampedArray) {\r\n        return UNSIGNED_BYTE;\r\n    }\r\n    if (typedArray instanceof Int16Array) {\r\n        return SHORT;\r\n    }\r\n    if (typedArray instanceof Uint16Array) {\r\n        return UNSIGNED_SHORT;\r\n    }\r\n    if (typedArray instanceof Int32Array) {\r\n        return INT;\r\n    }\r\n    if (typedArray instanceof Uint32Array) {\r\n        return UNSIGNED_INT;\r\n    }\r\n    if (typedArray instanceof Float32Array) {\r\n        return FLOAT;\r\n    }\r\n    throw \"unsupported typed array to gl type\";\r\n}\r\n\r\nexport function getTypeArrCtorFromGLtype(glType: number) {\r\n    if (glTypeToTypedArrayCtor[glType] != null) {\r\n        return glTypeToTypedArrayCtor[glType];\r\n    }\r\n    throw \"unsupported gltype to array type\";\r\n}\r\n\r\nexport function getByteSizeFromGLtype(glType: number) {\r\n    if (glTypeToTypedArrayCtor[glType]) {\r\n        return glTypeToTypedArrayCtor[glType].BYTES_PER_ELEMENT;\r\n    }\r\n    throw \"unsupported gltype to bytesPerElement\";\r\n}\r\n\r\nexport function getTypedArray(data: number | number[] | TypedArray, gltype: number, byteOffset: number = 0): TypedArray {\r\n    let typeArrayCtr = getTypeArrCtorFromGLtype(gltype);\r\n    if (typeof data == \"number\") {\r\n        return new typeArrayCtr(data as number);\r\n    } else if (data instanceof Array) {\r\n        return new typeArrayCtr(data);\r\n    } else {\r\n        let typedArray = data as TypedArray;\r\n        return new typeArrayCtr(typedArray.buffer, typedArray.byteOffset + byteOffset, typedArray.byteLength / typeArrayCtr.BYTES_PER_ELEMENT);\r\n    }\r\n}\r\n\r\nexport function float4Equal(lhs: Float32Array, rhs: Float32Array): boolean {\r\n    return lhs[0] == rhs[0] || lhs[1] == rhs[1] || lhs[2] == rhs[2];\r\n}\r\n\r\nexport type TypedArray = Int8Array | Uint8Array | Int16Array | Uint16Array | Int32Array | Uint32Array | Float32Array;\r\n\r\nexport namespace TypedArray {\r\n    export function fromGlType(gltType: number, count: number | Array<number>) {\r\n        let ctor = glTypeToTypedArrayCtor[gltType];\r\n        return new ctor(count);\r\n    }\r\n\r\n    export function bytesPerElement(type: TypedArray) {\r\n        return type.BYTES_PER_ELEMENT;\r\n    }\r\n\r\n    export function glType(data: TypedArray) {\r\n        return getGLTypeFromTypedArray(data);\r\n    }\r\n}","import { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { BufferUsageEnum, Buffer, BufferTargetEnum } from \"./Buffer\";\r\nimport { GlConstants } from \"./GLconstant\";\r\nimport { TypedArray, getByteSizeFromGLtype } from \"../core/TypedArray\";\r\nexport type IndicesArray = Uint8Array | Uint16Array | Uint32Array;\r\nexport type IndexBufferOption = {\r\n    context: GraphicsDevice;\r\n    usage?: BufferUsageEnum;\r\n    sizeInBytes: number;\r\n    indexDatatype: IndexDatatypeEnum;\r\n} | {\r\n    context: GraphicsDevice;\r\n    usage?: BufferUsageEnum;\r\n    typedArray: IndicesArray;\r\n};\r\nexport class IndexBuffer extends Buffer\r\n{\r\n    readonly indexDatatype: number;\r\n    readonly bytesPerIndex: number;\r\n    readonly numberOfIndices: number;\r\n    constructor(options: IndexBufferOption)\r\n    {\r\n        super({ ...options, target: BufferTargetEnum.ELEMENT_ARRAY_BUFFER });\r\n        this.indexDatatype = (options as any).indexDatatype;\r\n        let typedArray = (options as any).typedArray;\r\n        if (typedArray)\r\n        {\r\n            this.indexDatatype = TypedArray.glType(typedArray);\r\n        }\r\n        this.bytesPerIndex = getByteSizeFromGLtype(this.indexDatatype);\r\n        this.numberOfIndices = this._sizeInBytes / this.bytesPerIndex;\r\n    }\r\n}\r\n\r\nexport enum IndexDatatypeEnum\r\n{\r\n    Uint16Array = GlConstants.UNSIGNED_SHORT,\r\n    Uint32Array = GlConstants.UNSIGNED_INT,\r\n}","import { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { BufferUsageEnum, Buffer, BufferTargetEnum, bufferOption, BufferConfig } from \"./Buffer\";\r\nimport { TypedArray } from \"../core/TypedArray\";\r\nexport type vertexBufferOption =\r\n    | {\r\n        context: GraphicsDevice;\r\n        usage?: BufferUsageEnum;\r\n        sizeInBytes: number;\r\n    }\r\n    | {\r\n        context: GraphicsDevice;\r\n        usage?: BufferUsageEnum;\r\n        typedArray: TypedArray;\r\n    };\r\n\r\nexport class VertexBuffer extends Buffer\r\n{\r\n    // componentSize: number;\r\n    // componentDataType: number;\r\n    // // size?: number;\r\n    // normalize: boolean;\r\n    // bytesStride: number;\r\n    // bytesOffset: number;\r\n    // divisor?: number;\r\n    constructor(options: vertexBufferOption)\r\n    {\r\n        super({ ...options, target: BufferTargetEnum.ARRAY_BUFFER });\r\n    }\r\n}\r\n\r\n","import { AccessorComponentType } from \"./GltfJsonStruct\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\nimport { ParseBufferViewNode } from \"./ParseBufferViewNode\";\r\nimport { BufferTargetEnum, Buffer, BufferUsageEnum } from \"../../../webgl/Buffer\";\r\nimport { getTypedArray, getTypeArrCtorFromGLtype, getByteSizeFromGLtype, TypedArray } from \"../../../core/TypedArray\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { IndexBuffer } from \"../../../webgl/IndexBuffer\";\r\nimport { VertexBuffer } from \"../../../webgl/VertexBuffer\";\r\n\r\n\r\nexport interface IaccessorData {\r\n    componentSize: number;\r\n    componentDataType: number;\r\n    count: number;\r\n    normalize: boolean;\r\n    bytesOffset: number;\r\n    bytesStride?: number;\r\n    target?: BufferTargetEnum;\r\n    typedArray: TypedArray;\r\n\r\n    buffer?: Buffer;\r\n}\r\n\r\n\r\nexport namespace Accessor {\r\n    export function getTypedData(data: IaccessorData) {\r\n        let result: any[] = [];\r\n        let { typedArray, componentSize, bytesStride, bytesOffset } = data;\r\n        let startOffset = bytesOffset / typedArray.BYTES_PER_ELEMENT;\r\n        let elementOffset = 0;\r\n        if (bytesStride > 0) {\r\n            elementOffset = bytesStride / typedArray.BYTES_PER_ELEMENT;\r\n        };\r\n        for (let i = 0; i < data.count; i++) {\r\n            let start = startOffset + i * componentSize + i * elementOffset;\r\n            result.push(typedArray.subarray(start, componentSize + start));\r\n        }\r\n        return result;\r\n    }\r\n}\r\n\r\n\r\nexport class ParseAccessorNode {\r\n    static parse(index: number, gltf: IgltfJson, bufferOptions?: { target?: BufferTargetEnum, context: GraphicsDevice }): Promise<IaccessorData> {\r\n        let arrayInfo: IaccessorData = {} as any;\r\n        // return new Promise<AccessorNode>((resolve,reject)=>{\r\n        let accessor = gltf.accessors[index];\r\n\r\n        arrayInfo.componentSize = this.getComponentSize(accessor.type);\r\n        arrayInfo.componentDataType = accessor.componentType;\r\n        arrayInfo.count = accessor.count;\r\n        arrayInfo.normalize = accessor.normalized;\r\n\r\n        if (accessor.bufferView != null) {\r\n            let viewindex = accessor.bufferView;\r\n            return ParseBufferViewNode.parse(viewindex, gltf)\r\n                .then(value => {\r\n                    let canUseCache = true;\r\n                    let typedArray = getTypedArray(value.viewBuffer, accessor.componentType) as any;\r\n\r\n                    arrayInfo.bytesOffset = accessor.byteOffset ?? 0;\r\n                    arrayInfo.bytesStride = value.byteStride;\r\n                    arrayInfo.target = value.target;\r\n\r\n                    if (accessor.sparse != null) {\r\n                        canUseCache = false;\r\n                        typedArray = typedArray.slice(0);\r\n                        let indicesInfo = accessor.sparse.indices;\r\n                        let valuesInfo = accessor.sparse.values;\r\n\r\n                        let count = accessor.sparse.count;\r\n\r\n                        Promise.all([\r\n                            ParseBufferViewNode.parse(indicesInfo.bufferView, gltf),\r\n                            ParseBufferViewNode.parse(valuesInfo.bufferView, gltf),\r\n                        ]).then(arr => {\r\n                            let indicesArr = getTypedArray(arr[0].viewBuffer, indicesInfo.componentType, indicesInfo.byteOffset)\r\n                            let sparseValueArr = getTypedArray(arr[1].viewBuffer, accessor.componentType, valuesInfo.byteOffset);\r\n\r\n                            let componentNumber = this.getComponentSize(accessor.type);\r\n                            for (let i = 0; i < count; i++) {\r\n                                let index = indicesArr[i];\r\n                                for (let k = 0; k < componentNumber; k++) {\r\n                                    typedArray[index + k] = sparseValueArr[index + k];\r\n                                }\r\n                            }\r\n                        });\r\n                    }\r\n                    arrayInfo.typedArray = typedArray;\r\n                    if (bufferOptions != null || value.target != null) {\r\n                        let context = bufferOptions.context;\r\n                        let target = bufferOptions.target || value.target;\r\n                        switch (target) {\r\n                            case BufferTargetEnum.ARRAY_BUFFER:\r\n                                if (canUseCache) {\r\n                                    var newVertexBuffer = gltf.cache.vertexBufferCache[viewindex];\r\n                                    if (newVertexBuffer == null) {\r\n                                        newVertexBuffer = new VertexBuffer({ context, typedArray });\r\n                                        gltf.cache.vertexBufferCache[viewindex] = newVertexBuffer;\r\n                                    } else {\r\n                                        console.warn(\"命中！！\")\r\n\r\n                                    }\r\n                                    arrayInfo.buffer = newVertexBuffer;\r\n                                } else {\r\n                                    arrayInfo.buffer = new VertexBuffer({ context, typedArray });\r\n                                }\r\n                                break;\r\n                            case BufferTargetEnum.ELEMENT_ARRAY_BUFFER:\r\n                                if (canUseCache) {\r\n                                    let newIndexBuffer = gltf.cache.indexBufferCache[viewindex];\r\n                                    if (newIndexBuffer == null) {\r\n                                        newIndexBuffer = new IndexBuffer({ context, typedArray });\r\n                                        gltf.cache.indexBufferCache[viewindex] = newIndexBuffer;\r\n                                    } else {\r\n                                        console.warn(\"命中！！\")\r\n                                    }\r\n                                    arrayInfo.buffer = newIndexBuffer;\r\n                                } else {\r\n                                    arrayInfo.buffer = new IndexBuffer({ context, typedArray });\r\n                                }\r\n\r\n                                break;\r\n                            default:\r\n                                console.error(\"why ！！\")\r\n                                break;\r\n                        }\r\n                    }\r\n                    return arrayInfo;\r\n                });\r\n        } else {\r\n            throw new Error(\"accessor.bufferView is null\");\r\n        }\r\n    }\r\n\r\n    private static getComponentSize(type: string): number {\r\n        switch (type) {\r\n            case \"SCALAR\":\r\n                return 1;\r\n            case \"VEC2\":\r\n                return 2;\r\n            case \"VEC3\":\r\n                return 3;\r\n            case \"VEC4\":\r\n            case \"MAT2\":\r\n                return 4;\r\n            case \"MAT3\":\r\n                return 9;\r\n            case \"MAT4\":\r\n                return 16;\r\n        }\r\n    }\r\n}\r\n","import { getByteSizeFromGLtype } from \"../core/TypedArray\";\r\n\r\n\r\nexport enum ComponentDatatypeEnum\r\n{\r\n    /**\r\n     * Int8Array\r\n     */\r\n    BYTE = 0x1400,\r\n    /**\r\n     * Uint8Array\r\n     */\r\n    UNSIGNED_BYTE = 0x1401,\r\n    /**\r\n     * Int16Array\r\n     */\r\n    SHORT = 0x1402,\r\n    /**\r\n     * Uint16Array\r\n     */\r\n    UNSIGNED_SHORT = 0x1403,\r\n    /**\r\n     * Int32Array\r\n     */\r\n    INT = 0x1404,\r\n    /**\r\n     * Uint32Array\r\n     */\r\n    UNSIGNED_INT = 0x1405,\r\n    /**\r\n     * Float32Array\r\n     */\r\n    FLOAT = 0x1406,\r\n    /**\r\n     * Uint16Array\r\n     */\r\n    UNSIGNED_SHORT_4_4_4_4 = 0x8033,\r\n    /**\r\n     * Uint16Array\r\n     */\r\n    UNSIGNED_SHORT_5_5_5_1 = 0x8034,\r\n    /**\r\n     * Uint16Array\r\n     */\r\n    UNSIGNED_SHORT_5_6_5 = 0x8363,\r\n    /**\r\n     * Uint16Array\r\n     */\r\n    HALF_FLOAT = 0x140b,\r\n    /**\r\n     * Uint32Array\r\n     */\r\n    UNSIGNED_INT_2_10_10_10_REV = 0x8368,\r\n    /**\r\n     * Uint32Array\r\n     */\r\n    UNSIGNED_INT_10F_11F_11F_REV = 0x8c3b,\r\n    /**\r\n     * Uint32Array\r\n     */\r\n    UNSIGNED_INT_5_9_9_9_REV = 0x8c3e,\r\n    /**\r\n     * Uint32Array\r\n     */\r\n    FLOAT_32_UNSIGNED_INT_24_8_REV = 0x8dad,\r\n    /**\r\n     * Uint32Array\r\n     */\r\n    UNSIGNED_INT_24_8 = 0x84fa,\r\n    /**\r\n     * Float64Array\r\n     */\r\n    DOUBLE = 0x140a\r\n}\r\n\r\nexport namespace ComponentDatatypeEnum\r\n{\r\n    export function byteSize(type: ComponentDatatypeEnum)\r\n    {\r\n        return getByteSizeFromGLtype(type)\r\n    }\r\n}","import { VertexBuffer } from \"./VertexBuffer\";\r\nimport { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { ComponentDatatypeEnum } from \"./ComponentDatatypeEnum\";\r\nimport { VertexAttEnum } from \"./VertexAttEnum\";\r\nimport { BufferConfig } from \"./Buffer\";\r\n\r\nexport interface IvertexAttribute {\r\n    // index: number; // 0;\r\n    type: string | VertexAttEnum\r\n    enabled: boolean; // true;\r\n    vertexBuffer: VertexBuffer; // positionBuffer;\r\n    value: any;\r\n    componentsPerAttribute: number; // 3;\r\n    componentDatatype: number; // ComponentDatatype.FLOAT;\r\n    normalize: boolean; // false;\r\n    offsetInBytes: number; // 0;\r\n    strideInBytes: number; // 0; // tightly packed\r\n    instanceDivisor: number; // 0; // not instanced\r\n}\r\nexport interface IvertexAttributeOption {\r\n    // index?: number; // 0;\r\n    type: string | VertexAttEnum\r\n    enabled?: boolean; // true;\r\n    vertexBuffer?: VertexBuffer; // positionBuffer;\r\n    value?: any;\r\n    componentsPerAttribute: number; // 3;\r\n    componentDatatype?: number; // ComponentDatatype.FLOAT;\r\n    normalize?: boolean; // false;\r\n    offsetInBytes?: number; // 0;\r\n    strideInBytes?: number; // 0; // tightly packed\r\n    instanceDivisor?: number; // 0; // not instanced\r\n}\r\n\r\nexport class VertexAttribute implements IvertexAttribute {\r\n    readonly type: string | VertexAttEnum;\r\n    readonly index: number;\r\n    readonly enabled: boolean;\r\n    readonly vertexBuffer: VertexBuffer;\r\n    readonly value: any;\r\n    readonly componentsPerAttribute: number;\r\n    readonly componentDatatype: number;\r\n    readonly normalize: boolean;\r\n    readonly offsetInBytes: number;\r\n    readonly strideInBytes: number;\r\n    readonly instanceDivisor: number;\r\n\r\n    readonly count: number;\r\n\r\n    private _gl: WebGLRenderingContext;\r\n    constructor(context: GraphicsDevice, options: IvertexAttributeOption) {\r\n\r\n        //todo  check \r\n        if (options.vertexBuffer == null && options.value == null) {\r\n            throw new Error('attribute must have a vertexBuffer or a value.');\r\n        }\r\n\r\n        this._gl = context.gl;\r\n        let att = options;\r\n        this.type = att.type;\r\n        this.index = VertexAttEnum.toShaderLocation(this.type);\r\n        this.enabled = att.enabled ?? true;// true;\r\n        this.vertexBuffer = att.vertexBuffer;// positionBuffer;\r\n        this.value = att.value;\r\n        this.componentsPerAttribute = att.componentsPerAttribute;// 3;\r\n        this.componentDatatype = att.componentDatatype ?? ComponentDatatypeEnum.FLOAT; // ComponentDatatype.FLOAT;\r\n        this.normalize = att.normalize ?? false; // false;\r\n        this.offsetInBytes = att.offsetInBytes ?? 0; // 0;\r\n        this.strideInBytes = att.strideInBytes ?? 0; // 0; // tightly packed\r\n        this.instanceDivisor = att.instanceDivisor; // 0; // not instanced\r\n\r\n        if (this.vertexBuffer) {\r\n            let bytes = this.vertexBuffer.sizeInbytes - this.offsetInBytes;\r\n            if (this.strideInBytes == 0) {\r\n                this.count = bytes / (this.componentsPerAttribute * ComponentDatatypeEnum.byteSize(this.componentDatatype))\r\n            } else {\r\n                this.count = bytes / this.strideInBytes;\r\n            }\r\n        }\r\n\r\n        if (att.vertexBuffer) {\r\n            this.bind = () => {\r\n                att.vertexBuffer.bind();\r\n                this._gl.enableVertexAttribArray(this.index);\r\n                this._gl.vertexAttribPointer(\r\n                    this.index,\r\n                    this.componentsPerAttribute,\r\n                    this.componentDatatype,\r\n                    this.normalize,\r\n                    this.strideInBytes,\r\n                    this.offsetInBytes,\r\n                );\r\n                if (this.instanceDivisor != null) {\r\n                    this._gl.vertexAttribDivisor(this.index, att.instanceDivisor);\r\n                }\r\n            }\r\n            this.unbind = () => {\r\n                this._gl.disableVertexAttribArray(this.index);\r\n                if (att.instanceDivisor != null) {\r\n                    this._gl.vertexAttribDivisor(this.index, 0);\r\n                }\r\n            }\r\n\r\n        } else {\r\n            let bindFunc = BufferConfig.vertexAttributeSetter[att.componentsPerAttribute];\r\n            this.bind = () => {\r\n                bindFunc(this.index, this.value);\r\n            }\r\n        }\r\n    }\r\n\r\n    bind() { }\r\n\r\n    unbind() { }\r\n}\r\n\r\n\r\n","import { GlConstants } from \"./GLconstant\";\r\n\r\nexport enum PrimitiveTypeEnum {\r\n    POINTS = GlConstants.POINTS,\r\n    LINES = GlConstants.LINES,\r\n    LINE_LOOP = GlConstants.LINE_LOOP,\r\n    LINE_STRIP = GlConstants.LINE_STRIP,\r\n    TRIANGLES = GlConstants.TRIANGLES,\r\n    TRIANGLE_FAN = GlConstants.TRIANGLE_FAN\r\n}\r\n","import { BufferUsageEnum, Buffer } from \"./Buffer\";\r\nimport { IndexBuffer, IndicesArray } from \"./IndexBuffer\";\r\nimport { GraphicsDevice } from \"./GraphicsDevice\";\r\nimport { VertexBuffer } from \"./VertexBuffer\";\r\nimport { IvertexAttributeOption, VertexAttribute } from \"./VertexAttribute\";\r\nimport { IglElement } from \"../core/IglElement\";\r\nimport { VertexAttEnum } from \"./VertexAttEnum\";\r\nimport { TypedArray } from \"../core/TypedArray\";\r\nimport { PrimitiveTypeEnum } from \"./PrimitiveTypeEnum\";\r\n\r\n/**\r\n * Creates a vertex array, which defines the attributes making up a vertex, and contains an optional index buffer\r\n * to select vertices for rendering.  Attributes are defined using object literals as shown in Example 1 below.\r\n * \r\n * @example\r\n * // Example 1. Create a vertex array with vertices made up of three floating point\r\n * // values, e.g., a position, from a single vertex buffer.  No index buffer is used.\r\n * var positionBuffer = Buffer.createVertexBuffer({\r\n *     context : context,\r\n *     sizeInBytes : 12,\r\n *     usage : BufferUsage.STATIC_DRAW\r\n * });\r\n * var attributes = [\r\n *     {\r\n *         index                  : 0,\r\n *         enabled                : true,\r\n *         vertexBuffer           : positionBuffer,\r\n *         componentsPerAttribute : 3,\r\n *         componentDatatype      : ComponentDatatype.FLOAT,\r\n *         normalize              : false,\r\n *         offsetInBytes          : 0,\r\n *         strideInBytes          : 0 // tightly packed\r\n *         instanceDivisor        : 0 // not instanced\r\n *     }\r\n * ];\r\n * var va = new VertexArray({\r\n *     context : context,\r\n *     attributes : attributes\r\n * });\r\n *\r\n * @example\r\n * // Example 2. Create a vertex array with vertices from two different vertex buffers.\r\n * // Each vertex has a three-component position and three-component normal.\r\n * var positionBuffer = Buffer.createVertexBuffer({\r\n *     context : context,\r\n *     sizeInBytes : 12,\r\n *     usage : BufferUsage.STATIC_DRAW\r\n * });\r\n * var normalBuffer = Buffer.createVertexBuffer({\r\n *     context : context,\r\n *     sizeInBytes : 12,\r\n *     usage : BufferUsage.STATIC_DRAW\r\n * });\r\n * var attributes = [\r\n *     {\r\n *         type                   : VertexAttEnum.POSITION\r\n *         vertexBuffer           : positionBuffer,\r\n *         componentsPerAttribute : 3,\r\n *         componentDatatype      : ComponentDatatype.FLOAT\r\n *     },\r\n *     {\r\n *         type                   : VertexAttEnum.TANGENT\r\n *         vertexBuffer           : normalBuffer,\r\n *         componentsPerAttribute : 3,\r\n *         componentDatatype      : ComponentDatatype.FLOAT\r\n *     }\r\n * ];\r\n * var va = new VertexArray({\r\n *     context : context,\r\n *     attributes : attributes\r\n * });\r\n *\r\n * @example\r\n * // Example 3. Creates the same vertex layout as Example 2 using a single\r\n * // vertex buffer, instead of two.\r\n * var buffer = Buffer.createVertexBuffer({\r\n *     context : context,\r\n *     sizeInBytes : 24,\r\n *     usage : BufferUsage.STATIC_DRAW\r\n * });\r\n * var attributes = [\r\n *     {\r\n *         type                   : VertexAttEnum.POSITION\r\n *         vertexBuffer           : buffer,\r\n *         componentsPerAttribute : 3,\r\n *         componentDatatype      : ComponentDatatype.FLOAT,\r\n *         offsetInBytes          : 0,\r\n *         strideInBytes          : 24\r\n *     },\r\n *     {\r\n *         type                   : VertexAttEnum.TANGENT\r\n *         vertexBuffer           : buffer,\r\n *         componentsPerAttribute : 3,\r\n *         componentDatatype      : ComponentDatatype.FLOAT,\r\n *         normalize              : true,\r\n *         offsetInBytes          : 12,\r\n *         strideInBytes          : 24\r\n *     }\r\n * ];\r\n * var va = new VertexArray({\r\n *     context : context,\r\n *     attributes : attributes\r\n * });\r\n *\r\n */\r\nexport class VertexArray implements IglElement {\r\n    private _vertexAttributes: { [type: string]: VertexAttribute } = {};\r\n    get vertexAttributes() { return this._vertexAttributes }\r\n    private _indexbuffer: IndexBuffer;\r\n    private _vao: any;\r\n    private _context: GraphicsDevice;\r\n    get vertexcount() {\r\n        return this._vertexAttributes[VertexAttEnum.POSITION].count;\r\n    }\r\n    private _primitiveType: PrimitiveTypeEnum;\r\n    get primitiveType() { return this._primitiveType }\r\n    set primitiveType(type: PrimitiveTypeEnum) { this._primitiveType = type };\r\n\r\n    private _primitiveCount: number;\r\n    set primitiveCount(count: number) { this._primitiveCount = count; }\r\n    get primitveCount() { return this._primitiveCount ?? this._indexbuffer?.numberOfIndices ?? this.vertexcount; }\r\n\r\n    private _primitiveByteOffset: number = 0;\r\n    get primitiveByteOffset() { return this._primitiveByteOffset; }\r\n    set primitiveByteOffset(offset: number) {\r\n        this._primitiveByteOffset = offset;\r\n    }\r\n\r\n    constructor(options: IvaoOptions) {\r\n        this._context = options.context;\r\n        // this.vertexAttributes = options.vertexAttributes.map(item => new VertexAttribute(options.context, item));\r\n        options.vertexAttributes.forEach(item => {\r\n            this._vertexAttributes[item.type] = new VertexAttribute(options.context, item)\r\n        })\r\n        this._indexbuffer = options.indexBuffer;\r\n        this._primitiveType = options.primitiveType ?? PrimitiveTypeEnum.TRIANGLES;\r\n        this._primitiveByteOffset = options.primitiveByteOffset ?? 0;\r\n        this._primitiveCount = options.primitiveCount;\r\n\r\n        let gl = options.context.gl;\r\n\r\n        if (options.context.caps.vertexArrayObject) {\r\n            this._bind = () => {\r\n                this._context.bindingVao = this._vao;\r\n                gl.bindVertexArray(this._vao);\r\n            }\r\n            this._unbind = () => {\r\n                this._context.bindingVao = null;\r\n                gl.bindVertexArray(null);\r\n            }\r\n\r\n            let vao = gl.createVertexArray();\r\n            gl.bindVertexArray(vao);\r\n            this._context.bindingVao = vao;\r\n            this.bindVertexAttributes(gl, this._vertexAttributes, this._indexbuffer);\r\n            gl.bindVertexArray(null);\r\n            this._context.bindingVao = null;\r\n\r\n            this._vao = vao;\r\n\r\n            this.destroy = () => {\r\n                gl.deleteVertexArray(this._vao);\r\n            }\r\n\r\n        } else {\r\n            this._bind = () => {\r\n                this.bindVertexAttributes(gl, this._vertexAttributes, this._indexbuffer);\r\n            }\r\n            this._unbind = () => {\r\n                this.unbindAttributes(gl, this._vertexAttributes, this._indexbuffer);\r\n            }\r\n        }\r\n    }\r\n    hasAttribute(att: VertexAttEnum | string) {\r\n        return this._vertexAttributes[att] != null;\r\n    }\r\n\r\n    getAttributeVertexBuffer(att: VertexAttEnum | string): VertexBuffer {\r\n        return this._vertexAttributes[att].vertexBuffer;\r\n    }\r\n\r\n    get indexBuffer() {\r\n        return this._indexbuffer;\r\n    }\r\n\r\n    updateAttributeBufferData(att: VertexAttEnum | string, sizeInBytesOrTypedArray: TypedArray | number) {\r\n        if (this._vao) { this._bind(); }\r\n\r\n        this._vertexAttributes[att].vertexBuffer.update(sizeInBytesOrTypedArray);\r\n    }\r\n\r\n    updateIndexBufferData(sizeInBytesOrTypedArray: IndicesArray | number) {\r\n        if (this._vao) { this._bind(); }\r\n\r\n        this.indexBuffer.update(sizeInBytesOrTypedArray);\r\n    }\r\n\r\n    update(vertexAttOption: IvertexAttributeOption, forece: boolean = false) {\r\n        if (forece || this._vertexAttributes[vertexAttOption.type] == null) {\r\n            this._vertexAttributes[vertexAttOption.type] = new VertexAttribute(this._context, vertexAttOption);\r\n        } else {\r\n            let att = this._vertexAttributes[vertexAttOption.type];\r\n            for (const key in vertexAttOption) {\r\n                if ((att as any)[key] != (vertexAttOption as any)[key]) {\r\n                    (att as any)[key] = (vertexAttOption as any)[key]\r\n                }\r\n            }\r\n        }\r\n        if (vertexAttOption.vertexBuffer != null && this._vao) {\r\n            this._bind();\r\n            this._vertexAttributes[vertexAttOption.type].bind();\r\n        }\r\n    }\r\n\r\n    private bindVertexAttributes(gl: WebGLRenderingContext, vertexAtts: { [type: string]: VertexAttribute }, indexBuffer?: IndexBuffer): void {\r\n        for (let key in vertexAtts) {\r\n            vertexAtts[key].bind();\r\n        }\r\n        if (indexBuffer) {\r\n            indexBuffer.bind();\r\n        }\r\n    }\r\n    private unbindAttributes(gl: WebGLRenderingContext, vertexAtts: { [type: string]: VertexAttribute }, indexBuffer?: IndexBuffer) {\r\n        for (let key in vertexAtts) {\r\n            vertexAtts[key].unbind();\r\n        }\r\n        if (indexBuffer) {\r\n            indexBuffer.unbind();\r\n        }\r\n    }\r\n    private _bind() { }\r\n    private _unbind() { }\r\n    static _cachedVertexArray: VertexArray;\r\n    bind() {\r\n        if (this._vao != this._context.bindingVao) {\r\n            this._bind();\r\n        }\r\n    }\r\n    unbind() {\r\n        this._unbind();\r\n        VertexArray._cachedVertexArray = null;\r\n    }\r\n\r\n    destroy() { }\r\n}\r\n\r\nexport interface IvaoOptions {\r\n    context: GraphicsDevice;\r\n    vertexAttributes: IvertexAttributeOption[];\r\n    indexBuffer?: IndexBuffer;\r\n    offset?: number\r\n    primitiveType?: PrimitiveTypeEnum;\r\n    primitiveByteOffset?: number;\r\n    primitiveCount?: number;\r\n}","import { Asset, IgraphicAsset } from \"../Asset\";\r\nimport { VertexArray } from \"../../../webgl/VertextArray\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { BoundingSphere } from \"../../Bounds\";\r\nimport { EventHandler } from \"../../../core/Event\";\r\n\r\nexport abstract class BaseGeometry extends Asset implements Igeometry {\r\n    graphicAsset: VertexArray;\r\n    protected beNeedRefreshGraphicAsset: boolean = false;\r\n    protected abstract create(device: GraphicsDevice): VertexArray\r\n    protected abstract refresh(device: GraphicsDevice): void\r\n\r\n    protected _bounding: BoundingSphere;\r\n    get bounding() { return this._bounding }\r\n    set bounding(aabb: BoundingSphere) { this._bounding = aabb }\r\n\r\n    bind(device: GraphicsDevice) {\r\n        if (this.graphicAsset == null) {\r\n            this.graphicAsset = this.create(device);\r\n            this.onCreated.raiseEvent();\r\n            this.beNeedRefreshGraphicAsset = false;\r\n        }\r\n        if (this.beNeedRefreshGraphicAsset) {\r\n            this.refresh(device);\r\n            this.beNeedRefreshGraphicAsset = false;\r\n        }\r\n        this.graphicAsset?.bind();\r\n    }\r\n    unbind() {\r\n        this.graphicAsset.unbind();\r\n    }\r\n\r\n    draw(device: GraphicsDevice, instanceCount?: number) {\r\n        device.draw(this.graphicAsset, instanceCount);\r\n    }\r\n\r\n    destroy() {\r\n        this.graphicAsset?.destroy();\r\n    }\r\n}\r\n\r\nexport interface Igeometry {\r\n    onDirty: EventHandler<void>;\r\n    graphicAsset: VertexArray;\r\n    bounding: BoundingSphere;\r\n    bind(device: GraphicsDevice): void;\r\n    unbind(): void;\r\n    destroy(): void;\r\n}","import { VertexArray } from \"../../../webgl/VertextArray\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { BaseGeometry } from \"./BaseGeometry\";\r\nimport { Asset } from \"../Asset\";\r\nexport class StaticMesh extends Asset {\r\n    sbuMeshs: SubMesh[] = [];\r\n    destroy(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nexport class SubMesh extends BaseGeometry {\r\n    protected create(device: GraphicsDevice): VertexArray {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    protected refresh(device: GraphicsDevice): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n    bind(device: GraphicsDevice): void {\r\n        this.graphicAsset?.bind();\r\n    }\r\n    unbind(): void {\r\n        this.graphicAsset?.unbind();\r\n    }\r\n    destroy(): void {\r\n        this.graphicAsset?.destroy();\r\n    }\r\n    set vertexArray(value: VertexArray) { this.graphicAsset = value }\r\n}\r\n","import { IgltfJson, IgltfPrimitive } from \"../LoadglTF\";\r\nimport { IgltfMeshPrimitive, AccessorComponentType } from \"./GltfJsonStruct\";\r\n// import { Material } from \"../assets/material\";\r\nimport { ParseMaterialNode } from \"./ParseMaterialNode\";\r\n// import { Geometry } from \"../assets/geometry\";\r\nimport { ParseAccessorNode } from \"./ParseAccessorNode\";\r\nimport { VertexAttEnum } from \"../../../webgl/VertexAttEnum\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { VertexArray, IvaoOptions } from \"../../../webgl/VertextArray\";\r\nimport { TypedArray } from \"../../../core/TypedArray\";\r\nimport { Material } from \"../../../scene/asset/material/Material\";\r\nimport { StaticMesh, SubMesh } from \"../../../scene/asset/geometry/StaticMesh\";\r\nimport { IndexBuffer, IndicesArray } from \"../../../webgl/IndexBuffer\";\r\nimport { VertexBuffer } from \"../../../webgl/VertexBuffer\";\r\nimport { BufferTargetEnum } from \"../../../webgl/Buffer\";\r\n\r\nconst MapGltfAttributeToToyAtt: { [name: string]: VertexAttEnum } = {\r\n    POSITION: VertexAttEnum.POSITION,\r\n    NORMAL: VertexAttEnum.NORMAL,\r\n    TANGENT: VertexAttEnum.TANGENT,\r\n    TEXCOORD_0: VertexAttEnum.TEXCOORD_0,\r\n    TEXCOORD_1: VertexAttEnum.TEXCOORD_1,\r\n    COLOR_0: VertexAttEnum.COLOR_0,\r\n    WEIGHTS_0: VertexAttEnum.WEIGHTS_0,\r\n    JOINTS_0: VertexAttEnum.JOINTS_0,\r\n};\r\nexport class ParseMeshNode {\r\n    static parse(index: number, gltf: IgltfJson, context: GraphicsDevice): Promise<IgltfPrimitive[]> {\r\n        if (gltf.cache.meshNodeCache[index]) {\r\n            return gltf.cache.meshNodeCache[index];\r\n        } else {\r\n            let node = gltf.meshes[index];\r\n\r\n            let dataArr: Promise<IgltfPrimitive>[] = [];\r\n            if (node.primitives) {\r\n                for (let key in node.primitives) {\r\n                    let primitive = node.primitives[key];\r\n                    let data = this.parsePrimitive(primitive, gltf, context);\r\n                    dataArr.push(data);\r\n                }\r\n            }\r\n            let task = Promise.all(dataArr);\r\n            gltf.cache.meshNodeCache[index] = task;\r\n            return task;\r\n        }\r\n    }\r\n\r\n    static parsePrimitive(node: IgltfMeshPrimitive, gltf: IgltfJson, context: GraphicsDevice): Promise<IgltfPrimitive> {\r\n        return Promise.all([\r\n            this.parseMesh(node, gltf, context),\r\n            this.parseMaterial(node, gltf)]\r\n        ).then(\r\n            ([mesh, material]) => {\r\n                return { mesh: mesh, material: material };\r\n            },\r\n        );\r\n    }\r\n\r\n    static parseMaterial(node: IgltfMeshPrimitive, gltf: IgltfJson): Promise<Material> {\r\n        let matindex = node.material;\r\n        if (matindex != null) {\r\n            return ParseMaterialNode.parse(matindex, gltf);\r\n        } else {\r\n            return Promise.resolve(null);\r\n        }\r\n    }\r\n\r\n    static parseMesh(node: IgltfMeshPrimitive, gltf: IgltfJson, context: GraphicsDevice): Promise<SubMesh> {\r\n        let taskAtts: Promise<void>[] = [];\r\n        let vaoOptions: IvaoOptions = { vertexAttributes: [], context };\r\n        let attributes = node.attributes;\r\n        for (let attName in attributes) {\r\n            let attIndex = attributes[attName];\r\n            let attType = MapGltfAttributeToToyAtt[attName];\r\n            let attTask = ParseAccessorNode.parse(attIndex, gltf, { target: BufferTargetEnum.ARRAY_BUFFER, context })\r\n                .then(arrayInfo => {\r\n                    vaoOptions.vertexAttributes.push({\r\n                        type: attType,\r\n                        vertexBuffer: arrayInfo.buffer as VertexBuffer ?? new VertexBuffer({\r\n                            context,\r\n                            typedArray: arrayInfo.typedArray\r\n                        }),\r\n                        componentsPerAttribute: arrayInfo.componentSize,\r\n                        componentDatatype: arrayInfo.componentDataType,\r\n                        normalize: arrayInfo.normalize,\r\n                        offsetInBytes: arrayInfo.bytesOffset,\r\n                        strideInBytes: arrayInfo.bytesStride,\r\n                    })\r\n                });\r\n            taskAtts.push(attTask);\r\n        }\r\n        let index = node.indices;\r\n        if (index != null) {\r\n            let indexTask = ParseAccessorNode.parse(index, gltf, { target: BufferTargetEnum.ELEMENT_ARRAY_BUFFER, context })\r\n                .then(arrayInfo => {\r\n                    if (!(arrayInfo.typedArray instanceof Uint8Array || arrayInfo.typedArray instanceof Uint16Array || arrayInfo.typedArray instanceof Uint32Array)) {\r\n                        console.error(\"index data type not Uint16Array or Uint32Array!\");\r\n                    }\r\n                    vaoOptions.indexBuffer = arrayInfo.buffer as IndexBuffer ?? new IndexBuffer({ context, typedArray: arrayInfo.typedArray as IndicesArray });\r\n                    vaoOptions.primitiveByteOffset = arrayInfo.bytesOffset;\r\n                    vaoOptions.primitiveCount = arrayInfo.count;\r\n                });\r\n            taskAtts.push(indexTask);\r\n        }\r\n        return Promise.all(taskAtts)\r\n            .then(() => {\r\n                let mesh = new SubMesh();\r\n                mesh.vertexArray = new VertexArray(vaoOptions);\r\n                return mesh;\r\n            });\r\n    }\r\n}\r\n","import { Asset } from \"./Asset\";\r\nimport { Mat4 } from \"../../mathD/mat4\";\r\n\r\nexport class Skin extends Asset {\r\n    inverseBindMatrices!: Mat4[];\r\n    boneNames!: string[];\r\n    rootBoneName!: string;\r\n    potentialSearchRoot?: string;\r\n\r\n    // rootModelName: string;\r\n    destroy(): void { }\r\n}","import { IgltfJson } from \"../LoadglTF\";\r\n\r\nexport namespace GlTF {\r\n    export function getNodeName(index: number, gltf: IgltfJson) {\r\n        return gltf.nodes[index].name || \"node\" + index;\r\n    }\r\n}","import { Skin } from \"../../../scene/asset/Skin\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\nimport { ParseAccessorNode, Accessor } from \"./ParseAccessorNode\";\r\nimport { GlTF } from \"./util\";\r\nimport { Entity } from \"../../../core/Entity\";\r\nimport { Mat4 } from \"../../../mathD/mat4\";\r\n\r\nexport class ParseSkinNode {\r\n\r\n    static parse(index: number, nodeName: string, root: Entity, gltf: IgltfJson): Promise<Skin> {\r\n        let skin = new Skin();\r\n        skin.rootBoneName = nodeName;\r\n        skin.potentialSearchRoot = root.name;//动画的骨骼节点不一定是skin节点的child\r\n        let skinData = gltf.skins[index];\r\n        skin.boneNames = skinData.joints.map(item => {\r\n            return GlTF.getNodeName(item, gltf);\r\n        });\r\n        return ParseAccessorNode.parse(skinData.inverseBindMatrices, gltf)\r\n            .then((res) => {\r\n                // skin.inverseBindMatrices = skinData.joints.map((item, index) => {\r\n                //     let boneMat = Mat4.fromArray(res.typedArray as any, index);\r\n                //     if (boneMat == null) {\r\n                //         console.error(\"cannot get bone inverse mat data!\");\r\n                //     }\r\n                //     return boneMat;\r\n                // })\r\n                skin.inverseBindMatrices = Accessor.getTypedData(res);\r\n                return skin;\r\n            });\r\n    }\r\n}","\r\nimport { Mat4 } from \"../../../mathD/mat4\";\r\nimport { Vec3 } from \"../../../mathD/vec3\";\r\nimport { Quat } from \"../../../mathD/quat\";\r\nimport { ParseCameraNode } from \"./ParseCameraNode\";\r\nimport { Transform } from \"../../../core/Transform\";\r\nimport { ParseMeshNode } from \"./ParseMeshNode\";\r\nimport { IgltfJson } from \"../LoadglTF\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { MeshInstance } from \"../../../scene/primitive/MeshInstance\";\r\nimport { Entity } from \"../../../core/Entity\";\r\nimport { ModelComponent } from \"../../../components/ModelComponent\";\r\nimport { StaticMesh } from \"../../../scene/asset/geometry/StaticMesh\";\r\nimport { Skin } from \"../../../scene/asset/Skin\";\r\nimport { ParseAccessorNode } from \"./ParseAccessorNode\";\r\nimport { ParseSkinNode } from \"./ParseSkinNode\";\r\nimport { GlTF } from \"./util\";\r\nimport { DefaultGeometry } from \"../../defAssets/DefaultGeometry\";\r\nimport { DefaultMesh } from \"../../defAssets/DefaultMesh\";\r\nimport { DefaultMaterial } from \"../../defAssets/DefaultMaterial\";\r\n\r\nexport class ParseNode {\r\n\r\n    static parse(index: number, gltf: IgltfJson, root: Entity, context: GraphicsDevice): Promise<Entity> {\r\n        let node = gltf.nodes[index];\r\n        let name = GlTF.getNodeName(index, gltf);\r\n        let sceneNode = new Entity(name);\r\n        if (node.matrix) {\r\n            sceneNode.localMatrix = Mat4.fromNumberArray(node.matrix);\r\n        }\r\n        if (node.translation) {\r\n            Vec3.copy(node.translation, sceneNode.localPosition);\r\n        }\r\n        if (node.rotation) {\r\n            Quat.copy(node.rotation, sceneNode.localRotation);\r\n        }\r\n        if (node.scale) {\r\n            Vec3.copy(node.scale, sceneNode.localScale);\r\n        }\r\n\r\n        if (node.camera != null) {\r\n            let cam = ParseCameraNode.parse(node.camera, gltf);\r\n            cam.node = sceneNode;\r\n        }\r\n\r\n        let allTask: Promise<void>[] = [];\r\n        if (node.mesh != null) {\r\n            let modelcomp = sceneNode.addComponent(\"ModelComponent\") as ModelComponent;\r\n            let task = ParseMeshNode.parse(node.mesh, gltf, context)\r\n                .then(primitives => {\r\n                    let newMesh = new StaticMesh();\r\n                    newMesh.sbuMeshs = primitives.map(item => item.mesh);\r\n                    modelcomp.mesh = newMesh\r\n                    modelcomp.materials = primitives.map(item => item.material);\r\n                });\r\n\r\n            if (node.skin != null) {\r\n                ParseSkinNode.parse(node.skin, name, root, gltf).then((skin) => {\r\n                    modelcomp.skin = skin;\r\n                });\r\n            }\r\n            allTask.push(task);\r\n        }\r\n\r\n        if (node.children) {\r\n            for (let i = 0; i < node.children.length; i++) {\r\n                let nodeindex = node.children[i];\r\n                let childTask = this.parse(nodeindex, gltf, root, context)\r\n                    .then(child => {\r\n                        sceneNode.addChild(child);\r\n                    });\r\n                allTask.push(childTask);\r\n            }\r\n        }\r\n\r\n        //------------------debug skin\r\n        // let arr: number[] = [];\r\n        // gltf.skins.forEach(item => arr = arr.concat(item.joints));\r\n        // if (arr.indexOf(index) >= 0) {\r\n        //     let debugNode = new Entity(name);\r\n        //     let comp = debugNode.addComponent(\"ModelComponent\") as ModelComponent;\r\n        //     comp.mesh = DefaultMesh.cube;\r\n        //     comp.material = DefaultMaterial.color_3d;\r\n        //     debugNode.localScale = Vec3.create(0.1, 0.1, 0.1);\r\n        //     sceneNode.addChild(debugNode);\r\n        // }\r\n\r\n        return Promise.all(allTask).then(() => {\r\n            return sceneNode;\r\n        });\r\n    }\r\n}\r\n","import { IgltfJson } from \"../LoadglTF\";\r\nimport { ParseNode } from \"./ParseNode\";\r\nimport { GraphicsDevice } from \"../../../webgl/GraphicsDevice\";\r\nimport { MeshInstance } from \"../../../scene/primitive/MeshInstance\";\r\nimport { Entity } from \"../../../core/Entity\";\r\n\r\nexport class ParseSceneNode {\r\n    static parse(index: number, gltf: IgltfJson, context: GraphicsDevice): Promise<Entity> {\r\n        let node = gltf.scenes[index];\r\n        let root = new Entity(`gltf-scene[${index}]-root`);\r\n        return Promise.all(node.nodes.map(item => {\r\n            return ParseNode.parse(item, gltf, root, context)\r\n                .then(childNode => {\r\n                    root.addChild(childNode);\r\n                })\r\n        })).then(() => root);\r\n    }\r\n}\r\n","import { Asset } from \"./Asset\";\r\nimport { Entity } from \"../../core/Entity\";\r\n\r\nexport class Prefab extends Asset {\r\n\r\n    private _root: Entity;\r\n    set root(root: Entity) { this._root = root };\r\n    static instance(prefab: Prefab): Entity {\r\n        //TODO 先暂时直接返回root\r\n        return prefab._root;\r\n        // return prefab._root.clone();\r\n    }\r\n\r\n    destroy(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}","import { Asset } from \"./Asset\";\r\nimport { AnimationChannelTargetPath } from \"../primitive/ClipInstance\";\r\n\r\nexport class AnimationClip extends Asset {\r\n    channels: AnimationChannel[] = [];\r\n    totalFrame: number = 0;\r\n    static readonly FPS: number = 30;\r\n\r\n    constructor(name?: string) {\r\n        super();\r\n        this.name = name;\r\n    }\r\n\r\n    destroy(): void {\r\n        throw new Error(\"Method not implemented.\");\r\n    }\r\n}\r\n\r\nexport class AnimationChannel {\r\n    targetName: string;//find transform(bone) by TargetName;\r\n    propertyName: AnimationChannelTargetPath;\r\n    keyframes: number[] = [];\r\n    values: any[] = [];\r\n    interPolation: AnimationSamplerInterpolation;\r\n\r\n    get startFrame() { return this.keyframes[0] };\r\n    get endFrame() { return this.keyframes[this.keyframes.length - 1] };\r\n}\r\n\r\nexport enum AnimationSamplerInterpolation {\r\n    /**\r\n     * The animated values are linearly interpolated between keyframes\r\n     */\r\n    LINEAR = \"LINEAR\",\r\n    /**\r\n     * The animated values remain constant to the output of the first keyframe, until the next keyframe\r\n     */\r\n    STEP = \"STEP\",\r\n    /**\r\n     * The animation's interpolation is computed using a cubic spline with specified tangents\r\n     */\r\n    CUBICSPLINE = \"CUBICSPLINE\",\r\n}","import { IgltfJson } from \"../LoadglTF\";\r\nimport { AnimationClip, AnimationChannel } from \"../../../scene/asset/AnimationClip\";\r\nimport { IgltfAnimationSampler, IgltfAnimationChannelTarget, AnimationChannelTargetPath } from \"./GltfJsonStruct\";\r\nimport { ParseNode } from \"./ParseNode\";\r\nimport { ParseAccessorNode, Accessor } from \"./ParseAccessorNode\";\r\nimport { GlTF } from \"./util\";\r\nimport { TypedArray } from \"../../../core/TypedArray\";\r\n\r\nexport class ParseAnimationNode {\r\n    static parse(index: number, gltf: IgltfJson): Promise<AnimationClip> {\r\n        let animation = gltf.animations[index];\r\n        let newAniclip = new AnimationClip(animation.name);\r\n        let { channels, samplers } = animation;\r\n\r\n        return Promise.all(channels.map(item => {\r\n            let sampleNode = samplers[item.sampler];\r\n            return this.parseChannelData(item.target, sampleNode, gltf)\r\n                .then((channel) => {\r\n                    newAniclip.channels.push(channel);\r\n                    if (channel.endFrame > newAniclip.totalFrame) {\r\n                        newAniclip.totalFrame = channel.endFrame;\r\n                    }\r\n                });\r\n        })).then(() => { return newAniclip })\r\n    }\r\n\r\n    private static parseChannelData(channeltarget: IgltfAnimationChannelTarget, sampleNode: IgltfAnimationSampler, gltf: IgltfJson): Promise<AnimationChannel> {\r\n        let chan = new AnimationChannel();\r\n        chan.targetName = GlTF.getNodeName(channeltarget.node, gltf);\r\n        chan.propertyName = channeltarget.path;\r\n        chan.interPolation = sampleNode.interpolation;\r\n\r\n        return Promise.all([\r\n            ParseAccessorNode.parse(sampleNode.input, gltf),\r\n            ParseAccessorNode.parse(sampleNode.output, gltf)\r\n        ]).then(([inputdata, outputdata]) => {\r\n            let timedata = inputdata.typedArray;\r\n            // chan.keys=new Float32Array(timedata.length);\r\n            let keyframes = Accessor.getTypedData(inputdata);\r\n            for (let i = 0; i < keyframes.length; i++) {\r\n                chan.keyframes[i] = (keyframes[i] * AnimationClip.FPS) | 0;//变成frame\r\n            }\r\n            chan.values = Accessor.getTypedData(outputdata);\r\n            return chan;\r\n        });\r\n    }\r\n}","import { getFileName, getAssetDirectory } from \"../Util\";\r\nimport { loadText, loadJson, loadArrayBuffer } from \"../../io/loadtool\";\r\nimport { BinReader } from \"../../io/stream\";\r\nimport { Igltf, Iproperty } from \"./glTF/GltfJsonStruct\";\r\nimport { ParseSceneNode } from \"./glTF/ParseSceneNode\";\r\nimport { Material } from \"../../scene/asset/material/Material\";\r\nimport { GraphicsDevice } from \"../../webgl/GraphicsDevice\";\r\nimport { StaticMesh, SubMesh } from \"../../scene/asset/geometry/StaticMesh\";\r\nimport { IassetLoader } from \"../Resource\";\r\nimport { Prefab } from \"../../scene/asset/Prefab\";\r\nimport { Texture2D } from \"../../scene/asset/texture/Texture2d\";\r\nimport { VertexBuffer } from \"../../webgl/VertexBuffer\";\r\nimport { IndexBuffer } from \"../../webgl/IndexBuffer\";\r\nimport { ParseAnimationNode } from \"./glTF/ParseAnimationNode\";\r\nimport { Animation } from '../../components/Animation'\r\n\r\nexport interface IglTFExtension {\r\n    load(extensionNode: any, loader: LoadGlTF): Promise<any>;\r\n}\r\n\r\nexport interface IgltfPrimitive {\r\n    mesh: SubMesh;\r\n    material: Material;\r\n}\r\n\r\nexport interface IgltfBufferview {\r\n    viewBuffer: Uint8Array;\r\n    byteStride?: number,\r\n    target?: number\r\n}\r\nexport class GltfNodeCache {\r\n    meshNodeCache: { [index: number]: Promise<IgltfPrimitive[]> } = {};\r\n    bufferviewNodeCache: { [index: number]: Promise<IgltfBufferview> } = {};\r\n    bufferNodeCache: { [index: number]: Promise<ArrayBuffer> } = {};\r\n    materialNodeCache: { [index: number]: Promise<Material> } = {};\r\n    textrueNodeCache: { [index: number]: Promise<Texture2D> } = {};\r\n    vertexBufferCache: { [index: number]: VertexBuffer } = {};\r\n    indexBufferCache: { [index: number]: IndexBuffer } = {};\r\n\r\n    // beContainAnimation: boolean = false;\r\n    // skinNodeCache: { [index: number]: SkinNode } = {};\r\n    // animationNodeCache: { [index: number]: AnimationClip } = {};\r\n}\r\n\r\nexport interface IgltfJson extends Igltf {\r\n    rootURL: string;\r\n    cache: GltfNodeCache;\r\n}\r\nexport class LoadGlTF implements IassetLoader {\r\n    private context: GraphicsDevice;\r\n    constructor(device: GraphicsDevice) {\r\n        this.context = device;\r\n    }\r\n    load(url: string): Promise<Prefab> {\r\n        return this.loadAsync(url)\r\n            .then(async (gltfJson) => {\r\n                let scene = gltfJson.scene != null ? gltfJson.scene : 0;\r\n                let sceneRoot = await ParseSceneNode.parse(scene, gltfJson, this.context);\r\n\r\n                if (gltfJson.animations != null) {\r\n                    let animations = await Promise.all(gltfJson.animations.map((item, index) => {\r\n                        return ParseAnimationNode.parse(index, gltfJson);\r\n                    }));\r\n                    let comp = sceneRoot.addComponent(\"Animation\") as Animation;\r\n                    animations.forEach(item => comp.addAnimationClip(item));\r\n                }\r\n                let rpefab = new Prefab();\r\n                rpefab.root = sceneRoot;\r\n                return rpefab;\r\n            })\r\n    }\r\n    //------------------extensions\r\n    static ExtensionDic: { [type: string]: IglTFExtension } = {};\r\n    static regExtension(type: string, extension: IglTFExtension) {\r\n        this.ExtensionDic[type] = extension;\r\n    }\r\n\r\n    getExtensionData(node: Iproperty, extendname: string): Promise<any> {\r\n        if (node.extensions == null) return null;\r\n        let extension = LoadGlTF.ExtensionDic[extendname];\r\n        if (extension == null) return null;\r\n        let info = node.extensions[extendname];\r\n        if (info == null) return null;\r\n        return extension.load(info, this);\r\n    }\r\n\r\n    //------------------------------------load bundle asset\r\n    private loadAsync(url: string): Promise<IgltfJson> {\r\n        if (url.endsWith(\".gltf\")) {\r\n            return loadJson(url).then(json => {\r\n                let gltfJson = json as any;\r\n                gltfJson.cache = new GltfNodeCache();\r\n                gltfJson.rootURL = getAssetDirectory(url);\r\n                return gltfJson;\r\n            });\r\n        } else {\r\n            return this.loadglTFBin(url)\r\n                .then((value: { json: any; chunkbin: Uint8Array[] }) => {\r\n                    let gltfJson = value.json as IgltfJson;\r\n                    gltfJson.cache = new GltfNodeCache();\r\n                    gltfJson.rootURL = getAssetDirectory(url);\r\n\r\n                    for (let i = 0; i < value.chunkbin.length; i++) {\r\n                        gltfJson.cache.bufferNodeCache[i] = Promise.resolve(value.chunkbin[i].buffer);\r\n                    }\r\n                    return gltfJson;\r\n                });\r\n        }\r\n    }\r\n    private async loadglTFBin(url: string): Promise<{ json: JSON; chunkbin: Uint8Array[] }> {\r\n        return loadArrayBuffer(url).then(bin => {\r\n            const Binary = {\r\n                Magic: 0x46546c67,\r\n            };\r\n            let breader = new BinReader(bin);\r\n            let magic = breader.readUint32();\r\n            if (magic !== Binary.Magic) {\r\n                throw new Error(\"Unexpected magic: \" + magic);\r\n            }\r\n            let version = breader.readUint32();\r\n            if (version != 2) {\r\n                throw new Error(\"Unsupported version:\" + version);\r\n            }\r\n            let length = breader.readUint32();\r\n            if (length !== breader.getLength()) {\r\n                throw new Error(\r\n                    \"Length in header does not match actual data length: \" + length + \" != \" + breader.getLength(),\r\n                );\r\n            }\r\n\r\n            let ChunkFormat = {\r\n                JSON: 0x4e4f534a,\r\n                BIN: 0x004e4942,\r\n            };\r\n            // JSON chunk\r\n            let chunkLength = breader.readUint32();\r\n            let chunkFormat = breader.readUint32();\r\n            if (chunkFormat !== ChunkFormat.JSON) {\r\n                throw new Error(\"First chunk format is not JSON\");\r\n            }\r\n            let _json = JSON.parse(breader.readUint8ArrToString(chunkLength));\r\n            let _chunkbin: Uint8Array[] = [];\r\n            while (breader.canread() > 0) {\r\n                const chunkLength = breader.readUint32();\r\n                const chunkFormat = breader.readUint32();\r\n                switch (chunkFormat) {\r\n                    case ChunkFormat.JSON:\r\n                        throw new Error(\"Unexpected JSON chunk\");\r\n                    case ChunkFormat.BIN:\r\n                        _chunkbin.push(breader.readUint8Array(chunkLength));\r\n                        break;\r\n                    default:\r\n                        // ignore unrecognized chunkFormat\r\n                        breader.skipBytes(chunkLength);\r\n                        break;\r\n                }\r\n            }\r\n            return { json: _json, chunkbin: _chunkbin };\r\n        });\r\n    }\r\n}\r\n","import { Asset } from \"./asset/Asset\";\r\nimport { AssetReference, AssetChangedEvent } from \"./AssetReference\";\r\nimport { EventHandler } from \"../core/Event\";\r\nimport { DebuffAction } from \"../core/DebuffAction\";\r\n\r\nexport class AssetReferenceArray<T extends Asset>\r\n{\r\n    assets: AssetReference<T>[] = [];\r\n    setValue(asset: T, index = 0) {\r\n        if (this.assets[index] == null) {\r\n            let newRef = new AssetReference<T>();\r\n            this.assets[index] = newRef;\r\n            this.attachToItemAssetChangeAction[index] = DebuffAction.create(() => {\r\n                let func = (event: AssetChangedEvent<T>) => {\r\n                    this.onAssetChange.raiseEvent({ ...event, index: index });\r\n                }\r\n                newRef.onAssetChange.addEventListener(func);\r\n                return () => {\r\n                    newRef.onAssetChange.removeEventListener(func)\r\n                }\r\n            })\r\n\r\n        }\r\n        this.assets[index].asset = asset;\r\n    }\r\n    setValues(assets: T[]) {\r\n        assets.forEach((item, index) => this.setValue(item, index))\r\n    }\r\n\r\n    getValue(index = 0) {\r\n        return this.assets[index]\r\n    }\r\n    delectItem(index: number) {\r\n        this.assets.splice(index, 1);\r\n        this.attachToItemAssetChangeAction[index]?.dispose();\r\n        this.onItemDelect.raiseEvent(index);\r\n    }\r\n    private attachToItemAssetChangeAction: DebuffAction[] = [];\r\n    onAssetChange: EventHandler<ArrayAssetChangeEvent<T>> = new EventHandler();\r\n    onItemDelect: EventHandler<number> = new EventHandler();\r\n}\r\n\r\nexport class ArrayAssetChangeEvent<T extends Asset> extends AssetChangedEvent<T>\r\n{\r\n    index: number;\r\n}","import { Iskin } from \"../asset/geometry/SkinMesh\";\r\nimport { Entity } from \"../../core/Entity\";\r\nimport { Mat4 } from \"../../mathD/mat4\";\r\nimport { MemoryTexture } from \"../asset/texture/MemoryTexture\";\r\nimport { GraphicsDevice } from \"../../webgl/GraphicsDevice\";\r\nimport { CeilingPOT, ceilPowerOfTwo } from \"../../mathD/common\";\r\nimport { PixelFormatEnum } from \"../../webgl/PixelFormatEnum\";\r\nimport { PixelDatatypeEnum } from \"../../webgl/PixelDatatype\";\r\nimport { Skin } from \"../asset/Skin\";\r\nimport { UniformState } from \"../UniformState\";\r\n\r\nnamespace Private {\r\n    export let offsetMatrix: Mat4 = Mat4.create();\r\n}\r\n\r\nexport class SkinInstance {\r\n    private skin: Skin;\r\n    private bones: Entity[] = [];\r\n    private rootBone: Entity;\r\n    private _boneInverses!: Mat4[];\r\n    private _boneMatrices!: Float32Array;\r\n    private _boneMatricesViews: Mat4[] = [];\r\n    private _boneTexture: MemoryTexture;\r\n    private attachEntity: Entity;\r\n\r\n    constructor(skin: Skin, attachEntity: Entity) {\r\n        this.skin = skin;\r\n        this.attachEntity = attachEntity;\r\n        // let skinMeshRoot = attachEntity.findInParents((item) => item.getComponent(Animation.name) != null);\r\n    }\r\n\r\n    // applyToAutoUniform(state: UniformState, device: GraphicsDevice) {\r\n    //     state.boneMatrices = this._boneMatrices;\r\n    //     state.boneTexture = this._boneTexture;\r\n    //     state.matrixModel = this.rootBone.worldMatrix;\r\n    // }\r\n    private beInit: boolean = false;\r\n    private init(device: GraphicsDevice) {\r\n        let { skin, attachEntity } = this;\r\n        this._boneInverses = [];\r\n        let searchRoot: Entity;\r\n        this.rootBone = attachEntity.find(item => item.name == skin.rootBoneName);\r\n\r\n        let bones = skin.boneNames.map((boneName, i) => {\r\n            let bone = attachEntity.find(item => item.name == boneName);\r\n            if (bone == null) {\r\n                if (skin.potentialSearchRoot != null && searchRoot == null) {\r\n                    searchRoot = attachEntity.findInParents((item) => item.name == skin.potentialSearchRoot);\r\n                }\r\n                bone = searchRoot?.find(item => item.name == boneName);\r\n                if (bone == null) {\r\n                    console.warn(\"failed to find bone\", boneName, attachEntity);\r\n                }\r\n            }\r\n            // if (this._boneInverses[i] == null) console.error(\"cannot get bone inverse mat data!\");\r\n            return bone;\r\n        });\r\n        this._boneInverses = skin.inverseBindMatrices;\r\n        this.bones = bones;\r\n\r\n        // layout (1 matrix = 4 pixels)\r\n        //      RGBA RGBA RGBA RGBA (=> column1, column2, column3, column4)\r\n        //  with  8x8  pixel texture max   16 bones * 4 pixels =  (8 * 8)\r\n        //       16x16 pixel texture max   64 bones * 4 pixels = (16 * 16)\r\n        //       32x32 pixel texture max  256 bones * 4 pixels = (32 * 32)\r\n        //       64x64 pixel texture max 1024 bones * 4 pixels = (64 * 64)\r\n        let size = Math.sqrt(bones.length * 4); // 4 pixels needed for 1 matrix\r\n        size = ceilPowerOfTwo(size);\r\n        size = Math.max(size, 4);\r\n        this._boneMatrices = new Float32Array(size * size * 4); // 4 floats per RGBA pixel\r\n\r\n        if (device.caps.textureFloat) {\r\n            this._boneTexture = new MemoryTexture({\r\n                width: size,\r\n                height: size,\r\n                arrayBufferView: this._boneMatrices,\r\n                pixelFormat: PixelFormatEnum.RGBA,\r\n                pixelDatatype: PixelDatatypeEnum.FLOAT\r\n            });\r\n        }\r\n\r\n        this.bones.forEach((item, index) => {\r\n            this._boneMatricesViews[index] = this._boneMatrices.subarray(index * 16, index * 16 + 16);\r\n        })\r\n\r\n    }\r\n    // get boneTexture() { this.recomputeBoneData(); return this._boneTexture }\r\n    // get boneMatrices() { this.recomputeBoneData(); return this._boneMatrices }\r\n\r\n    update(device: GraphicsDevice, state: UniformState) {\r\n        if (!this.beInit) { this.init(device); this.beInit = true; }\r\n        let { bones, rootBone } = this;\r\n        const { offsetMatrix } = Private;\r\n        let mat = rootBone.worldTolocalMatrix;\r\n        if (rootBone.beDirty) {//root dirty 全部重新计算\r\n            for (let i = 0; i < bones.length; i++) {\r\n                const matrix = bones[i] ? bones[i].worldMatrix : Mat4.IDENTITY;\r\n                Mat4.multiply(matrix, this._boneInverses[i], offsetMatrix);\r\n                Mat4.multiply(mat, offsetMatrix, offsetMatrix);\r\n                Mat4.toArray(offsetMatrix, this._boneMatrices, i * 16);\r\n            }\r\n            if (this._boneTexture) {\r\n                this._boneTexture.markDirty();\r\n            }\r\n\r\n        } else {// 哪个bone dirty了对应matrix就重新计算\r\n            let beNeedUpdate = false;\r\n            for (let i = 0; i < bones.length; i++) {\r\n\r\n                if (bones[i].beDirty) {\r\n                    beNeedUpdate = true;\r\n                    const matrix = bones[i] ? bones[i].worldMatrix : Mat4.IDENTITY;\r\n                    Mat4.multiply(matrix, this._boneInverses[i], offsetMatrix);\r\n                    Mat4.multiply(mat, offsetMatrix, offsetMatrix);\r\n                    Mat4.toArray(offsetMatrix, this._boneMatrices, i * 16);\r\n                }\r\n            }\r\n            if (beNeedUpdate && this._boneTexture) {\r\n                this._boneTexture.markDirty();\r\n            }\r\n        }\r\n        state.boneMatrices = this._boneMatrices;\r\n        state.boneTexture = this._boneTexture;\r\n        state.matrixModel = this.rootBone.worldMatrix;\r\n    }\r\n\r\n    destroy() { }\r\n}","import { Icomponent, Ientity, Ecs } from \"../core/Ecs\";\r\nimport { MeshInstance } from \"../scene/primitive/MeshInstance\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { AssetReferenceArray } from \"../scene/AssetReferenceArray\";\r\nimport { EventHandler } from \"../core/Event\";\r\nimport { AssetReference } from \"../scene/AssetReference\";\r\nimport { StaticMesh } from \"../scene/asset/geometry/StaticMesh\";\r\nimport { Material } from \"../scene/asset/material/Material\";\r\nimport { SkinInstance } from \"../scene/primitive/SkinInstance\";\r\nimport { Skin } from \"../scene/asset/Skin\";\r\nimport { Irenderable } from \"../scene/render/Irenderable\";\r\n\r\n@Ecs.registeComp\r\nexport class ModelComponent implements Icomponent {\r\n    readonly entity: Entity;\r\n    protected _mesh: AssetReference<StaticMesh> = new AssetReference();\r\n    get mesh() { return this._mesh.asset };\r\n    set mesh(asset: StaticMesh) { this._mesh.asset = asset };\r\n    protected _materials: AssetReferenceArray<Material> = new AssetReferenceArray();\r\n    set material(asset: Material) { this._materials.setValue(asset) };\r\n    get material() { return this._materials.getValue().asset };\r\n\r\n    get materials() { return this._materials.assets.map(item => item.asset) };\r\n    set materials(mats: Material[]) { this._materials.setValues(mats); }\r\n\r\n    private _skin: AssetReference<Skin> = new AssetReference();\r\n    set skin(skin: Skin) { this._skin.asset = skin };\r\n    get skin() { return this._skin.asset }\r\n\r\n    private _skinInstance: SkinInstance;\r\n    get skinIns() { return this._skinInstance };\r\n    constructor() {\r\n        // this._materials.onAssetChange.addEventListener((event) => {\r\n        //     let { newAsset, index } = event;\r\n        //     let ins = this._meshinstances[index];\r\n        //     if (ins == null && this.mesh?.sbuMeshs?.[index] && newAsset) {\r\n        //         ins = this._meshinstances[index] = new MeshInstance();\r\n        //         ins.node = this.entity;\r\n        //         ins.geometry = this.mesh.sbuMeshs[index];\r\n        //         ins.skin = this._skin.asset;\r\n        //         this.onMeshinsCountChange.raiseEvent(this);\r\n        //     }\r\n        //     if (ins) { ins.material = newAsset; }\r\n        // });\r\n\r\n        // this._mesh.onAssetChange.addEventListener((event) => {\r\n        //     let { newAsset, oldAsset } = event;\r\n        //     for (let index = 0; index < this._meshinstances.length; index++) {\r\n        //         let element = this._meshinstances[index];\r\n        //         if (newAsset?.sbuMeshs[index] == null) {\r\n        //             element.dispose();\r\n        //             this._meshinstances[index] = null;\r\n        //         } else {\r\n        //             element.geometry = newAsset?.sbuMeshs[index];\r\n        //         }\r\n        //     }\r\n        // });\r\n\r\n        this._skin.onAssetChange.addEventListener((event) => {\r\n            let { newAsset, oldAsset } = event;\r\n            if (this._skinInstance) { this._skinInstance.destroy(); this._skinInstance = null; };\r\n            if (newAsset) {\r\n                this._skinInstance = new SkinInstance(newAsset, this.entity);\r\n            }\r\n        })\r\n    }\r\n\r\n    /**\r\n     * meshInstance create Or Delect\r\n     */\r\n    onMeshinsCountChange = new EventHandler<ModelComponent>();\r\n\r\n}","import { Isystem, UniteBitkey, Icomponent } from \"../core/Ecs\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { EventCompositedHandler } from \"../core/EventCompositedHandler\";\r\nexport abstract class BassCompSystem extends EventCompositedHandler implements Isystem {\r\n    abstract caredComps: string[];\r\n    uniteBitkey: UniteBitkey = new UniteBitkey();\r\n    protected comps: Map<number, Icomponent[]> = new Map();\r\n    tryAddEntity(entity: Entity): void {\r\n        if (!this.comps.has(entity.id)) {\r\n            let comps = this.caredComps.map(comp => entity.getComponent(comp));\r\n            this.comps.set(entity.id, comps);\r\n            this.fire(CompSymEventEnum.afterAddE, comps);\r\n        }\r\n    }\r\n    tryRemoveEntity(entity: Entity): void {\r\n        if (this.comps.has(entity.id)) {\r\n            this.fire(CompSymEventEnum.beforeRemoveE, this.comps.get(entity.id));\r\n            this.comps.delete(entity.id);\r\n        }\r\n    }\r\n    update(deltaTime: number): void { }\r\n}\r\nexport enum CompSymEventEnum {\r\n    afterAddE = \"afterAddE\",\r\n    beforeRemoveE = \"beforeRemoveE\"\r\n}\r\n","import { ModelComponent } from \"./ModelComponent\";\r\nimport { InterScene } from \"../scene/Scene\";\r\nimport { BassCompSystem, CompSymEventEnum } from \"./BassCompSystem\";\r\nimport { LayerComposition } from \"../scene/LayerComposition\";\r\nimport { ForwardRender } from \"../scene/render/ForwardRender\";\r\nimport { Irenderable } from \"../scene/render/Irenderable\";\r\n\r\nexport class ModelSystem extends BassCompSystem {\r\n    caredComps: string[] = [ModelComponent.name];\r\n    // private layers: LayerComposition = new LayerComposition();\r\n    private scene: InterScene;\r\n    private render: ForwardRender;\r\n    constructor(scene: InterScene, render: ForwardRender) {\r\n        super();\r\n        this.scene = scene;\r\n        this.render = render;\r\n    }\r\n    update(deltaTime: number): void {\r\n        let { cameras } = this.scene;\r\n        let comps: ModelComponent[] = Array.from(this.comps.values()).map(item => item[0] as any);\r\n\r\n        let renderArr: Irenderable[] = [];\r\n        comps.forEach(item => {\r\n            item.mesh?.sbuMeshs.forEach((submeshItem, index) => {\r\n                let renderIns = {} as Irenderable;\r\n                renderIns.geometry = submeshItem;\r\n                renderIns.skinIns = item.skinIns;\r\n                renderIns.material = item.materials[index];\r\n                renderIns.worldMat = item.entity.worldMatrix;\r\n                renderIns.bevisible = item.entity.beActive;\r\n                renderArr.push(renderIns);\r\n            })\r\n        })\r\n        this.render.render(Array.from(cameras.values()), renderArr);\r\n    }\r\n}","import { Rect } from \"../mathD/rect\";\r\nimport { Mat4 } from \"../mathD/mat4\";\r\nimport { Texture2D } from \"./asset/texture/Texture2d\";\r\nimport { Camera } from \"./Camera\";\r\nimport { Light } from \"./light/Light\";\r\nimport { MemoryTexture } from \"./asset/texture/MemoryTexture\";\r\n\r\n\r\nexport class UniformState {\r\n    viewPortPixel: Rect = new Rect(0, 0, 0, 0); //像素的viewport\r\n    // campos: vec3;\r\n\r\n    matrixModel: Mat4;\r\n    private _matrixNormalToworld: Mat4 = Mat4.create();\r\n    get matrixNormalToworld(): Mat4 {\r\n        Mat4.invert(this.matrixModel, this._matrixNormalToworld);\r\n        Mat4.transpose(this._matrixNormalToworld, this._matrixNormalToworld);\r\n        return this._matrixNormalToworld;\r\n    }\r\n    private _matrixNormalToView: Mat4 = Mat4.create();\r\n    get matrixNormalToView(): Mat4 {\r\n        Mat4.invert(this.matrixModelView, this._matrixNormalToView);\r\n        Mat4.transpose(this._matrixNormalToView, this._matrixNormalToView);\r\n        return this._matrixNormalToView;\r\n    }\r\n    private _matrixMV: Mat4 = Mat4.create();\r\n    get matrixModelView(): Mat4 {\r\n        return Mat4.multiply(this.curCamera.viewMatrix, this.matrixModel, this._matrixMV);\r\n    }\r\n    private _matMVP: Mat4 = Mat4.create();\r\n    get matrixModelViewProject(): Mat4 {\r\n        return Mat4.multiply(this.curCamera.viewProjectMatrix, this.matrixModel, this._matMVP);\r\n    }\r\n\r\n    get matrixView(): Mat4 {\r\n        return this.curCamera.viewMatrix;\r\n    }\r\n\r\n    get matrixProject(): Mat4 {\r\n        return this.curCamera.projectMatrix;\r\n    }\r\n    get matrixViewProject(): Mat4 {\r\n        return this.curCamera.viewProjectMatrix;\r\n    }\r\n\r\n    get fov(): number {\r\n        return this.curCamera.fov;\r\n    }\r\n\r\n    get aspect(): number {\r\n        return this.curCamera.aspect;\r\n    }\r\n    //matrixNormal: matrix = new matrix();\r\n\r\n    private _lights: Light[] = [];\r\n    set lights(value: Light[]) {\r\n        this._lights = value;\r\n    }\r\n\r\n    get lightCount() { return this._lights.length };\r\n\r\n    lightmap: Texture2D[] = null;\r\n    // lightmapUV: number = 1;\r\n    // lightmapOffset: vec4 = vec4.create(1, 1, 0, 0);\r\n    // curRender: Irenderable;\r\n    curCamera: Camera;\r\n\r\n    // lightShadowTex: RenderTexture[] = [];\r\n\r\n    boneMatrices: Float32Array;\r\n    boneTexture: MemoryTexture;\r\n}\r\n","export enum SortTypeEnum {\r\n    MatLayerIndex = 0b10000,\r\n    ShaderId = 0b01000,\r\n    Zdist_FrontToBack = 0b00100\r\n}\r\n","import { SortTypeEnum } from \"./render/SortTypeEnum\";\r\nimport { Irenderable } from \"./render/Irenderable\";\r\nimport { Camera } from \"./Camera\";\r\nimport { RenderLayerEnum } from \"./RenderLayer\";\r\nnamespace Private {\r\n    export const sortByMatLayerIndex = (drawa: Irenderable, drawb: Irenderable): number => {\r\n        return drawa.material.layerIndex - drawb.material.layerIndex;\r\n    }\r\n\r\n    export const sortByZdist_FrontToBack = (drawa: Irenderable, drawb: Irenderable): number => {\r\n        return drawa.zdist - drawb.zdist;\r\n    }\r\n\r\n    export const sortByZdist_BackToFront = (drawa: Irenderable, drawb: Irenderable): number => {\r\n        return drawb.zdist - drawa.zdist;\r\n    }\r\n\r\n    export const sortByMatSortId = (drawa: Irenderable, drawb: Irenderable): number => {\r\n        return drawb.material.sortId - drawb.material.sortId;\r\n    }\r\n\r\n\r\n    export const sortTypeInfo: { [type: string]: IsortInfo } = {};\r\n    {\r\n        sortTypeInfo[SortTypeEnum.MatLayerIndex] = { sortFunc: sortByMatLayerIndex };\r\n        sortTypeInfo[SortTypeEnum.ShaderId] = { sortFunc: sortByMatSortId, };\r\n        sortTypeInfo[SortTypeEnum.Zdist_FrontToBack] = {\r\n            sortFunc: sortByZdist_FrontToBack,\r\n            beforeSort: (ins: Irenderable[], cam: Camera) => {\r\n                let camPos = cam.worldPos;\r\n                let camFwd = cam.forwardInword;\r\n                let i, drawCall, meshPos;\r\n                let tempx, tempy, tempz;\r\n                for (i = 0; i < ins.length; i++) {\r\n                    drawCall = ins[i];\r\n                    meshPos = drawCall.bounding.center;\r\n                    tempx = meshPos.x - camPos.x;\r\n                    tempy = meshPos.y - camPos.y;\r\n                    tempz = meshPos.z - camPos.z;\r\n                    drawCall.zdist = tempx * camFwd.x + tempy * camFwd.y + tempz * camFwd.z;\r\n                }\r\n            }\r\n        };\r\n    }\r\n\r\n    export interface IsortInfo {\r\n        sortFunc: (drawa: Irenderable, drawb: Irenderable) => number,\r\n        beforeSort?: (ins: Irenderable[], cam: Camera) => void\r\n    }\r\n}\r\n\r\nexport class LayerCollection {\r\n    readonly layer: RenderLayerEnum;\r\n    private _insArr: Irenderable[] = [];\r\n    get insCount() { return this._insArr.length };\r\n\r\n    getSortedinsArr(cam: Camera) {\r\n        this.beforeSort.forEach(func => func(this._insArr, cam))\r\n        this.sortFunction && this._insArr.sort(this.sortFunction);\r\n        return this._insArr\r\n    }\r\n\r\n    private sortFunction: (a: Irenderable, b: Irenderable) => number;\r\n    private sortFunctions: ((a: Irenderable, b: Irenderable) => number)[] = [];\r\n    private beforeSort: ((ins: Irenderable[], cam: Camera) => void)[] = [];\r\n\r\n    constructor(layer: RenderLayerEnum, sortType: number = 0) {\r\n        this.layer = layer;\r\n        let attch = (sortInfo: Private.IsortInfo) => {\r\n            this.sortFunctions.push(sortInfo.sortFunc);\r\n            if (sortInfo?.beforeSort) {\r\n                this.beforeSort.push((ins: Irenderable[], cam: Camera) => { sortInfo.beforeSort(ins, cam); });\r\n            }\r\n        }\r\n        if (sortType & SortTypeEnum.MatLayerIndex) {\r\n            let sortInfo = Private.sortTypeInfo[SortTypeEnum.MatLayerIndex];\r\n            attch(sortInfo);\r\n        }\r\n        if (sortType & SortTypeEnum.ShaderId) {\r\n            let sortInfo = Private.sortTypeInfo[SortTypeEnum.ShaderId];\r\n            attch(sortInfo);\r\n        }\r\n\r\n        if (this.sortFunctions.length > 0) {\r\n            this.sortFunction = (a, b) => {\r\n                let result;\r\n                for (let i = 0; i < this.sortFunctions.length; i++) {\r\n                    result = this.sortFunctions[i](a, b);\r\n                    if (result != 0) break;\r\n                }\r\n                return result;\r\n            }\r\n        }\r\n    }\r\n\r\n    add(newIns: Irenderable) {\r\n        this._insArr.push(newIns);\r\n    }\r\n\r\n    clear() {\r\n        this._insArr = [];\r\n    }\r\n}\r\n","import { MeshInstance } from \"./primitive/MeshInstance\";\r\nimport { RenderLayerEnum } from \"./RenderLayer\";\r\nimport { LayerCollection } from \"./LayerCollection\";\r\nimport { SortTypeEnum } from \"./render/SortTypeEnum\";\r\nimport { Irenderable } from \"./render/Irenderable\";\r\nimport { EventHandler } from \"../core/Event\";\r\nexport class LayerComposition {\r\n    private layers: Map<number, LayerCollection> = new Map();\r\n    // private nolayers: LayerCollection = new LayerCollection(\"nolayer\" as any);\r\n    constructor() {\r\n        this._addLayer(RenderLayerEnum.Background);\r\n        this._addLayer(RenderLayerEnum.Geometry, SortTypeEnum.MatLayerIndex | SortTypeEnum.ShaderId);\r\n        this._addLayer(RenderLayerEnum.AlphaTest, SortTypeEnum.MatLayerIndex | SortTypeEnum.Zdist_FrontToBack);\r\n        this._addLayer(RenderLayerEnum.Transparent, SortTypeEnum.MatLayerIndex | SortTypeEnum.Zdist_FrontToBack);\r\n    }\r\n    private _addLayer(layer: RenderLayerEnum, sortType: number = 0) {\r\n        if (!this.layers.has(layer)) {\r\n            let collection = new LayerCollection(layer, sortType);\r\n            this.layers.set(layer, collection);\r\n        }\r\n    }\r\n    getlayers() {\r\n        return Array.from(this.layers.values());\r\n    }\r\n\r\n    getSortedRenderArr() {\r\n\r\n    }\r\n\r\n    addRenableItem(ins: Irenderable) {\r\n        let layer = ins.material.layer;\r\n        if (layer != null) {\r\n            let layerCollection = this.layers.get(layer);\r\n            layerCollection.add(ins);\r\n        }\r\n    }\r\n\r\n    clear() {\r\n        this.layers.forEach(item => item.clear())\r\n    }\r\n}\r\n","import { Camera } from \"../Camera\";\r\nimport { Material } from \"../asset/material/Material\";\r\nimport { GraphicsDevice } from \"../../webgl/GraphicsDevice\";\r\nimport { RenderState } from \"../RenderState\";\r\nimport { Frustum } from \"../Frustum\";\r\nimport { BoundingSphere } from \"../Bounds\";\r\nimport { MeshInstance } from \"../primitive/MeshInstance\";\r\nimport { UniformState } from \"../UniformState\";\r\nimport { Entity } from \"../../core/Entity\";\r\nimport { StaticMesh } from \"../asset/geometry/StaticMesh\";\r\nimport { AutoUniforms } from \"../AutoUniform\";\r\nimport { ShaderBucket } from \"../asset/material/ShaderBucket\";\r\nimport { ShaderInstance } from \"../asset/material/ShaderInstance\";\r\nimport { LayerComposition } from \"../LayerComposition\";\r\nimport { Irenderable } from \"./Irenderable\";\r\n\r\n\r\nnamespace Private {\r\n    export let preMaterial: Material;\r\n    export let preBuketID: number;\r\n    export let preRenderState: RenderState;\r\n    export let temptSphere: BoundingSphere = new BoundingSphere();\r\n}\r\n\r\nexport class ForwardRender {\r\n    private device: GraphicsDevice;\r\n    uniformState = new UniformState();\r\n    constructor(device: GraphicsDevice) {\r\n        this.device = device;\r\n    }\r\n\r\n    private setCamera(camera: Camera) {\r\n        this.uniformState.curCamera = camera;\r\n        this.device.setViewPort(camera.viewport.x, camera.viewport.y, camera.viewport.width * this.device.width, camera.viewport.height * this.device.height);\r\n        this.device.setClear(\r\n            camera.enableClearDepth ? camera.dePthValue : null,\r\n            camera.enableClearColor ? camera.backgroundColor : null,\r\n            camera.enableClearStencil ? camera.stencilValue : null\r\n        );\r\n    }\r\n\r\n    private camerRenderLayers = new Map<Camera, LayerComposition>();\r\n\r\n    render(cameras: Camera[], renderArr: Irenderable[], lights?: any, ) {\r\n        cameras = cameras.sort(item => item.priority);\r\n        let cam: Camera, layercomps: LayerComposition, renderItem: Irenderable;\r\n\r\n        //---------------clear preFrame Data\r\n        for (let k = 0; k < cameras.length; k++) {\r\n            cam = cameras[k];\r\n            if (!this.camerRenderLayers.has(cam)) {\r\n                layercomps = new LayerComposition();\r\n                this.camerRenderLayers.set(cam, layercomps);\r\n            } else {\r\n                layercomps = this.camerRenderLayers.get(cam)\r\n                layercomps.clear();\r\n            }\r\n        }\r\n\r\n        //----------------collect render Ins\r\n        for (let i = 0; i < renderArr.length; i++) {\r\n            renderItem = renderArr[i];\r\n            if (!renderItem.bevisible || renderItem.geometry == null || renderItem.material?.shader == null) continue;\r\n            for (let k = 0; k < cameras.length; k++) {\r\n                cam = cameras[k];\r\n                let { cullingMask, frustum } = cam;\r\n                layercomps = this.camerRenderLayers.get(cam);\r\n\r\n                if (renderItem.cullingMask != null && ((renderItem.cullingMask & cullingMask) == 0)) continue;\r\n                if (renderItem.enableCull) {\r\n                    if (this.frustumCull(frustum, renderItem)) {\r\n                        layercomps.addRenableItem(renderItem);\r\n                    }\r\n                } else {\r\n                    layercomps.addRenableItem(renderItem);\r\n                }\r\n            }\r\n        }\r\n\r\n        //------------------------render per camera\r\n        for (let k = 0; k < cameras.length; k++) {\r\n            cam = cameras[k];\r\n            this.setCamera(cam);\r\n            layercomps = this.camerRenderLayers.get(cam);\r\n            layercomps.getlayers().forEach(layer => {\r\n                if (layer.insCount == 0) return;\r\n                let renderInsArr = layer.getSortedinsArr(cam);\r\n                this.renderList(cam, renderInsArr);\r\n            })\r\n        }\r\n\r\n    }\r\n\r\n    private renderList(cam: Camera, renderInsArr: Irenderable[]) {\r\n        let renderItem: Irenderable, material: Material, uniforms, renderState, vertexArray, shaderIns: ShaderInstance, uniformValue\r\n        for (let i = 0; i < renderInsArr.length; i++) {\r\n            renderItem = renderInsArr[i];\r\n\r\n            let bucketId = 0;\r\n            if (renderItem.skinIns) {\r\n                bucketId = bucketId | ShaderBucket.SKIN;\r\n                renderItem.skinIns.update(this.device, this.uniformState);\r\n            } else {\r\n                this.uniformState.matrixModel = renderItem.worldMat;\r\n            }\r\n\r\n            material = renderItem.material;\r\n            uniforms = material.uniformParameters;\r\n            if (uniforms[\"MainTex\"]) {\r\n                bucketId = bucketId | ShaderBucket.DIFFUSEMAP;\r\n            }\r\n\r\n            if (material != Private.preMaterial || material.beDirty || Private.preBuketID != bucketId) {\r\n                Private.preMaterial = material;\r\n                Private.preBuketID = bucketId;\r\n                material.beDirty = false;\r\n\r\n                shaderIns = material.shader.getInstance(bucketId);\r\n                renderState = material.renderState;\r\n\r\n                shaderIns.bind(this.device);\r\n                shaderIns.bindAutoUniforms(this.device, this.uniformState);//auto unfiorm\r\n                shaderIns.bindManulUniforms(this.device, uniforms);\r\n\r\n                if (Private.preRenderState != renderState) {\r\n                    this.device.setCullFaceState(renderState.cull.enabled, renderState.cull.cullBack);\r\n                    this.device.setDepthState(renderState.depthWrite, renderState.depthTest.enabled, renderState.depthTest.depthFunc);\r\n                    this.device.setColorMask(renderState.colorWrite.red, renderState.colorWrite.green, renderState.colorWrite.blue, renderState.colorWrite.alpha);\r\n                    this.device.setBlendState(\r\n                        renderState.blend.enabled,\r\n                        renderState.blend.blendEquation,\r\n                        renderState.blend.blendSrc,\r\n                        renderState.blend.blendDst,\r\n                        renderState.blend.enableSeparateBlend,\r\n                        renderState.blend.blendAlphaEquation,\r\n                        renderState.blend.blendSrcAlpha,\r\n                        renderState.blend.blendDstAlpha,\r\n                    );\r\n                    this.device.setStencilState(\r\n                        renderState.stencilTest.enabled,\r\n                        renderState.stencilTest.stencilFunction,\r\n                        renderState.stencilTest.stencilRefValue,\r\n                        renderState.stencilTest.stencilMask,\r\n                        renderState.stencilTest.stencilFail,\r\n                        renderState.stencilTest.stencilFaileZpass,\r\n                        renderState.stencilTest.stencilPassZfail,\r\n                        renderState.stencilTest.enableSeparateStencil,\r\n                        renderState.stencilTest.stencilFunctionBack,\r\n                        renderState.stencilTest.stencilRefValueBack,\r\n                        renderState.stencilTest.stencilMaskBack,\r\n                        renderState.stencilTest.stencilFailBack,\r\n                        renderState.stencilTest.stencilFaileZpassBack,\r\n                        renderState.stencilTest.stencilPassZfailBack,\r\n                    );\r\n                }\r\n            } else {\r\n                shaderIns = material.shader.getInstance(bucketId)\r\n                shaderIns.bindAutoUniforms(this.device, this.uniformState);//auto unfiorm\r\n            }\r\n            renderItem.geometry.bind(this.device);\r\n            this.device.draw(renderItem.geometry.graphicAsset, renderItem.instanceCount)\r\n        }\r\n    }\r\n\r\n    private frustumCull(frustum: Frustum, drawcall: Irenderable) {\r\n        return frustum.containSphere(drawcall.bounding, drawcall.worldMat);\r\n    }\r\n\r\n    drawMesh(options: { mesh: StaticMesh, mat: Material }) {\r\n\r\n    }\r\n}","import { AnimationClip, AnimationChannel } from \"../asset/AnimationClip\";\r\nimport { Entity } from \"../../core/Entity\";\r\nimport { Quat } from \"../../mathD/quat\";\r\nimport { Vec3 } from \"../../mathD/vec3\";\r\nimport { numberLerp } from \"../../mathD/common\";\r\n\r\nexport class ClipInstance {\r\n    private clip: AnimationClip;\r\n    private targets: Map<string, Entity> = new Map();\r\n    private curFrame: number = 0;\r\n    private speed: number = 1;\r\n    private localTime: number = 0;\r\n    private enableTimeFlow: boolean = false;\r\n    private beLoop: boolean;\r\n\r\n    constructor(clip: AnimationClip, options: { animator: Entity } & ClipInsOptions) {\r\n        this.clip = clip;\r\n        this.curFrame = 0;\r\n        this.speed = options.speed ?? 1;\r\n        this.beLoop = options.beLoop ?? true;\r\n\r\n        let animatorEntity = options.animator;\r\n        clip.channels.forEach(item => {\r\n            let bone = animatorEntity.find(child => item.targetName == child.name);\r\n            if (bone != null) {\r\n                this.targets.set(item.targetName, bone);\r\n            } else {\r\n                console.warn(\"cannot find bone.\", item.targetName);\r\n            }\r\n        })\r\n    }\r\n\r\n    active() {\r\n        this.enableTimeFlow = true;\r\n        this.curFrame = 0;\r\n        this.localTime = 0;\r\n    }\r\n    disactive() {\r\n        this.enableTimeFlow = false;\r\n    }\r\n\r\n    private temptLastStartIndex: number;\r\n    update(deltaTime: number) {\r\n        if (!this.enableTimeFlow) return;\r\n        this.localTime += deltaTime * this.speed;\r\n        let currentFrame = (this.localTime * AnimationClip.FPS) | 0;\r\n        if (currentFrame != this.curFrame) {\r\n            let { totalFrame, channels } = this.clip;\r\n            let channel: AnimationChannel, target: Entity, keyframes: number[];\r\n            if (currentFrame > totalFrame) {\r\n                if (this.curFrame < totalFrame) {\r\n                    currentFrame = totalFrame;\r\n                } else {\r\n                    if (this.beLoop) {//----------------------restart play\r\n                        currentFrame = 0;\r\n                        this.localTime = 0;\r\n                        this.temptLastStartIndex = null;\r\n\r\n                        for (let i = 0, len = channels.length; i < len; i++) {\r\n                            channel = channels[i];\r\n                            target = this.targets.get(channel?.targetName);\r\n                            let setfunc = AnimationChannelTargetPath.setFunc(channel.propertyName);\r\n                            setfunc(channel.values[0], target);\r\n                        }\r\n                    } else {//--------------------------------play end\r\n                        this.enableTimeFlow = false;\r\n                        return;\r\n                    }\r\n                }\r\n            }\r\n            this.curFrame = currentFrame;\r\n            // console.warn(\"current frame\", currentFrame);\r\n            for (let i = 0, len = channels.length; i < len; i++) {\r\n                channel = channels[i];\r\n                if (currentFrame < channel.startFrame || currentFrame > channel.endFrame) continue;\r\n                target = this.targets.get(channel?.targetName);\r\n                if (target == null) continue;\r\n                keyframes = channel.keyframes;\r\n                //---------------------------------寻找lerp start end frame\r\n                let startIndex = this.temptLastStartIndex ?? ((keyframes.length - 1) * currentFrame / channel.endFrame) | 0;\r\n                if (keyframes[startIndex] < currentFrame) {\r\n                    startIndex++;\r\n                    while (keyframes[startIndex] < currentFrame) { startIndex++; }\r\n                    if (keyframes[startIndex] > currentFrame) { startIndex--; }\r\n                } else {\r\n                    while (keyframes[startIndex] > currentFrame) { startIndex--; }\r\n                }\r\n                this.temptLastStartIndex = startIndex;\r\n\r\n                let endIndex = startIndex + 1;\r\n                if (keyframes[endIndex] == null) {\r\n                    endIndex = startIndex;\r\n                    let setfunc = AnimationChannelTargetPath.setFunc(channel.propertyName);\r\n                    setfunc(channel.values[startIndex], target);\r\n                } else {\r\n                    let lerpfunc = AnimationChannelTargetPath.lerpFunc(channel.propertyName);\r\n                    let lerp = (this.curFrame - keyframes[startIndex]) / (keyframes[endIndex] - keyframes[startIndex]);\r\n                    lerpfunc(channel.values[startIndex], channel.values[endIndex], lerp, target);\r\n                }\r\n\r\n            }\r\n        }\r\n    }\r\n}\r\n\r\nexport interface ClipInsOptions {\r\n    speed?: number,\r\n    beLoop?: boolean\r\n}\r\n\r\nexport enum AnimationChannelTargetPath {\r\n    /**\r\n     * Translation\r\n     */\r\n    TRANSLATION = \"translation\",\r\n    /**\r\n     * Rotation\r\n     */\r\n    ROTATION = \"rotation\",\r\n    /**\r\n     * Scale\r\n     */\r\n    SCALE = \"scale\",\r\n    /**\r\n     * Weights\r\n     */\r\n    WEIGHTS = \"weights\",\r\n}\r\nexport namespace AnimationChannelTargetPath {\r\n    let temptPos = Vec3.create();\r\n    let temptScale = Vec3.create();\r\n    let temptQuat = Quat.create();\r\n    let funcMap: Map<AnimationChannelTargetPath, (from: any, to: any, lerp: number, obj: Entity) => void> = new Map();\r\n    {\r\n        funcMap.set(AnimationChannelTargetPath.ROTATION, (from: Quat, to: Quat, lerp: number, obj: Entity) => {\r\n            Quat.lerp(from, to, lerp, temptQuat);\r\n            Quat.normalize(temptQuat, temptQuat);\r\n            if (isNaN(temptQuat.x)) {\r\n                console.warn(\"error\");\r\n            }\r\n            obj.localRotation = temptQuat;\r\n        });\r\n        funcMap.set(AnimationChannelTargetPath.SCALE, (from: Vec3, to: Vec3, lerp: number, obj: Entity) => {\r\n            Vec3.lerp(from, to, lerp, temptScale);\r\n            obj.localScale = temptScale\r\n        });\r\n        funcMap.set(AnimationChannelTargetPath.TRANSLATION, (from: Vec3, to: Vec3, lerp: number, obj: Entity) => {\r\n            Vec3.lerp(from, to, lerp, temptPos);\r\n            obj.localPosition = temptPos;\r\n        });\r\n        funcMap.set(AnimationChannelTargetPath.WEIGHTS, (from: number, to: number, lerp: number, obj: any) => {\r\n            obj[\"WEIGHTS\"] = numberLerp(from, to, lerp);\r\n        });\r\n    }\r\n    export const lerpFunc = (value: AnimationChannelTargetPath) => {\r\n        return funcMap.get(value);\r\n    }\r\n\r\n    let setMap: Map<AnimationChannelTargetPath, (value: any, obj: Entity) => void> = new Map();\r\n    {\r\n        setMap.set(AnimationChannelTargetPath.ROTATION, (value: any, obj: Entity) => {\r\n            obj.localRotation = value;\r\n        });\r\n        setMap.set(AnimationChannelTargetPath.SCALE, (value: any, obj: Entity) => {\r\n            obj.localScale = value;\r\n        });\r\n        setMap.set(AnimationChannelTargetPath.TRANSLATION, (value: any, obj: Entity) => {\r\n            obj.localPosition = value;\r\n        });\r\n    }\r\n\r\n    export const setFunc = (value: AnimationChannelTargetPath) => {\r\n        return setMap.get(value);\r\n    }\r\n}","import { Icomponent, Ecs } from \"../core/Ecs\";\r\nimport { Entity } from \"../core/Entity\";\r\nimport { AnimationClip } from \"../scene/asset/AnimationClip\";\r\nimport { ClipInstance, ClipInsOptions } from \"../scene/primitive/ClipInstance\";\r\n\r\n@Ecs.registeComp\r\nexport class Animation implements Icomponent {\r\n    readonly entity: Entity;\r\n\r\n    private _clipsMap: Map<string, { ins: ClipInstance, clip: AnimationClip }> = new Map();\r\n    private _clips: AnimationClip[] = [];\r\n    get clips() { return this._clips }\r\n    addAnimationClip(clip: AnimationClip, options?: ClipInsOptions) {\r\n        if (!this._clipsMap.has(clip.name)) {\r\n            let clipIns = new ClipInstance(clip, { animator: this.entity, ...options });\r\n            this._clipsMap.set(clip.name, { ins: clipIns, clip: clip });\r\n            this._clips.push(clip);\r\n            return clipIns\r\n        } else {\r\n            return this._clipsMap.get(clip.name).ins;\r\n        }\r\n    }\r\n    beAutoPlay: boolean = true;\r\n    private _currentClip: ClipInstance;\r\n    get currentClip() { return this._currentClip }\r\n\r\n    play(clip: AnimationClip | string) {\r\n        if (this._currentClip != null) {\r\n            //TODO\r\n        }\r\n        let playClip: ClipInstance;\r\n        if (typeof clip == \"string\") {\r\n            playClip = this._clipsMap.get(clip).ins;\r\n        } else {\r\n            playClip = this.addAnimationClip(clip);\r\n        }\r\n        if (playClip != null) {\r\n            this._currentClip = playClip;\r\n            playClip.active();\r\n        } else {\r\n            console.warn(\"failed to play clip!\", clip);\r\n        }\r\n    }\r\n}\r\n\r\n","import { BassCompSystem } from \"./BassCompSystem\";\r\nimport { Animation } from \"./Animation\";\r\n\r\nexport class AnimationSystem extends BassCompSystem {\r\n    caredComps: string[] = [Animation.name];\r\n\r\n    update(deltaTime: number) {\r\n        this.comps.forEach(item => {\r\n            let animation = item[0] as Animation;\r\n            if (animation.currentClip) {\r\n                animation.currentClip.update(deltaTime);\r\n            } else {\r\n                if (animation.beAutoPlay && animation.clips.length > 0) {\r\n                    animation.play(animation.clips[0]);\r\n                }\r\n            }\r\n        })\r\n    }\r\n}","import { Screen } from \"./core/Screen\";\r\nimport { Input } from \"./input/Input\";\r\nimport { Timer } from \"./core/Timer\";\r\nimport { InterScene } from \"./scene/Scene\";\r\nimport { GraphicsDevice } from \"./webgl/GraphicsDevice\";\r\nimport { Resource } from \"./resources/resource\";\r\nimport { LoadGlTF } from \"./resources/loader/LoadglTF\";\r\nimport { Ecs } from \"./core/Ecs\";\r\nimport { ModelSystem } from \"./components/ModelSystem\";\r\nimport { ForwardRender } from \"./scene/render/ForwardRender\";\r\nimport { EventHandler } from \"./core/Event\";\r\nimport { AnimationSystem } from \"./components/AnimationSystem\";\r\nexport class ToyGL {\r\n    static create(element: HTMLDivElement | HTMLCanvasElement): ToyGL {\r\n        let canvas: HTMLCanvasElement;\r\n        if (element instanceof HTMLDivElement) {\r\n            canvas = document.createElement(\"canvas\");\r\n            canvas.width = element.clientWidth;\r\n            canvas.width = element.clientHeight;\r\n\r\n            element.appendChild(canvas);\r\n            element.onresize = () => {\r\n                canvas.width = element.clientWidth;\r\n                canvas.width = element.clientHeight;\r\n            }\r\n        } else {\r\n            canvas = element;\r\n            canvas.width = window.innerWidth;\r\n            canvas.height = window.innerHeight;\r\n\r\n        }\r\n\r\n        let toy = new ToyGL();\r\n        let timer = new Timer();\r\n        let input = new Input(canvas);\r\n        let screen = new Screen(canvas);\r\n        let device = new GraphicsDevice(canvas);\r\n        let render = new ForwardRender(device);\r\n        let resource = new Resource();\r\n        let scene = new InterScene(render);\r\n        resource.registerAssetLoader(\".gltf\", new LoadGlTF(device));\r\n        Ecs.addSystem(new ModelSystem(scene, render));\r\n        Ecs.addSystem(new AnimationSystem());\r\n\r\n        timer.onTick.addEventListener((deltaTime) => {\r\n            toy.preUpdate.raiseEvent(deltaTime);\r\n            Ecs.update(deltaTime);\r\n            // scene.frameUpdate(deltaTime);\r\n        })\r\n\r\n        toy._timer = timer;\r\n        toy._input = input;\r\n        toy._screen = screen;\r\n        toy._scene = scene;\r\n        toy._resource = resource;\r\n\r\n        return toy;\r\n    }\r\n\r\n    preUpdate = new EventHandler<number>();\r\n\r\n\r\n    private _input: Input;\r\n    get input() { return this._input }\r\n\r\n    private _screen: Screen;\r\n    get screen() { return this._screen }\r\n\r\n    private _timer: Timer;\r\n    get timer() { return this._timer }\r\n\r\n    private _scene: InterScene;\r\n    get scene() { return this._scene }\r\n\r\n    private _resource: Resource;\r\n    get resource() { return this._resource }\r\n}\r\n","import { ToyGL } from \"../src/toygl\";\r\nimport { Prefab } from \"../src/scene/asset/Prefab\";\r\nimport { Quat } from \"../src/mathD/quat\";\r\nexport class LoadGltf {\r\n    static start(toy: ToyGL) {\r\n        let duck = \"../resources/glTF/duck/Duck.gltf\";\r\n        let tree = \"../resources/glTF/apple/AppleTree.gltf\";\r\n        let uvtest = \"../resources/glTF/TextureCoordinateTest/glTF/TextureCoordinateTest.gltf\";\r\n        let cesiumMan = \"../resources/glTF/CesiumMan/glTF/CesiumMan.gltf\";\r\n        let boxanimation = \"../resources/glTF/BoxAnimated/glTF/BoxAnimated.gltf\";\r\n\r\n\r\n        toy.resource.load(cesiumMan)\r\n            .then(asset => {\r\n                let newasset = Prefab.instance(asset as Prefab);\r\n                newasset.localRotation = Quat.FromEuler(0, -90, 0);\r\n                toy.scene.addChild(newasset);\r\n            })\r\n\r\n        let cam = toy.scene.createCamera();\r\n        cam.node.localPosition.z = 10;\r\n    }\r\n}\r\n","import { ToyGL } from \"../src/toygl\";\r\nimport { Base } from \"./bass\";\r\nimport { LoadGltf } from \"./loadGltf\";\r\n\r\nwindow.onload = () => {\r\n    let toy = ToyGL.create(document.getElementById(\"canvas\") as HTMLCanvasElement);\r\n    // Base.start(toy);\r\n    LoadGltf.start(toy);\r\n    // AssetLoader.addLoader().then(()    // {\r\n    //     // Base.done(toy);\r\n    //     // LoadGltf.done(toy);\r\n    //     // LookAt.done(toy);\r\n    //     ShowCull.done(toy);\r\n    //     // RenderTextureDome.done(toy);\r\n    //     // DepthTexutreDemo.done(toy);\r\n    //     // SSAO.done(toy);\r\n    // });\r\n};\r\n"],"names":["lerp","Private","baseVs","AnimationSamplerInterpolation","AnimationChannelTargetPath"],"mappings":"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YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,IAAI,GAAG,CAAC;YAEpD,OAAO,GAAG,CAAC;SACd;;;;;;;;QASM,OAAO,OAAO,CAAC,CAAO,EAAE,MAAY,IAAI,CAAC,MAAM,EAAE;YACpD,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAEhB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACvG,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC1G,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACxG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3G,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3G,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACxG,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC;YAC3G,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,GAAG,GAAG,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC;YACxG,OAAO,GAAG,CAAC;SACd;;;;;;;QAQM,OAAO,WAAW,CAAC,CAAO;YAC7B,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,CAAC;YACf,IAAI,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC,EACV,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAChB,IAAI,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,EACX,GAAG,GAAG,CAAC,CAAC,EAAE,CAAC,CAAC;YAEhB,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAChC,IAAI,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;;YAGhC,OAAO,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;SAChF;;;;;;;;;QAUM,OAAO,QAAQ,CAAC,GAAS,EAAE,GAAS,EAAE,MAAY,IAAI,CAAC,MAAM,EAAE;YAClE,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACjB,IAAI,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,EACZ,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EACb,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAClB,IAAI,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EACb,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EACb,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,EACb,GAAG,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;;YAGlB,IAAI,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EACX,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EACX,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,EACX,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YAChB,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEnD,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACZ,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,CAAC,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACnD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YAEpD,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,EAAE,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YACb,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,GAAG,EAAE,GAAG,GAAG,CAAC;YACpD,GAAG,CAAC,EAAE,CAAC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G,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACpB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;YACxB,GAAG,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;;YAGpB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;YAC3C,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,GAAG,GAAG,GAAG,GA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AG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC,CAAC,CAAC,CAAC;YACzB,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,GAAG,GAAG,CAAC,EAAE,CAAC,CAAC;YAC5B,GAAG,CA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"}